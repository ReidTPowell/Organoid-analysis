<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="IXM - Project TL Organoid stack" version="2">
			<sci:arg name="Directory" type="DirectoryType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
				<sci:value>\\CTCRFile1.ad.tamhsc.edu\CTCR-Stor2$\MX ImageStore\NaZhao\20200703-IACS-validation\20200710-112429-030260</sci:value>
			</sci:arg>
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="DeclareGlobal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this protocol. Such properties can be accessed within the scope of this protocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;It is best practice to declare all global properties before use. Indeed, this practice is enforced in some contexts.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;b&gt;When a global property needs to be scoped to the whole protocol:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the new global property in the &lt;i&gt;DeclareGlobal&lt;/i&gt; parameter at the protocol level.&lt;/dd&gt;
&lt;br/&gt;
&lt;dt&gt;&lt;b&gt;To limit a global property to a subprotocol scope:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the property in the subprotocol&apos;s &lt;i&gt;DeclareLocal&lt;/i&gt; parameter.&lt;/dd&gt;

&lt;p&gt;This example declares 2 global properties:&lt;/p&gt;
&lt;pre&gt;
    g_tokenHash,g_assayIdentifier
&lt;/pre&gt;

&lt;p&gt;
To initialize the declared global value with a scalar value, use the syntax:
&lt;/p&gt;

&lt;p&gt;
&lt;i&gt;property-name&lt;/i&gt; := &lt;i&gt;value&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
You can surround text string values with quotes to aid clarity. Values of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are handled as boolean values.
&lt;/p&gt;
&lt;p&gt;This example declares 3 global properties, and sets initial values on two of them:&lt;/p&gt;
&lt;pre&gt;
    g_counter := 0, g_location, g_geography:=&quot;APAC&quot;
&lt;/pre&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
				<sci:member>__PoolID</sci:member>
				<sci:member>Http Cookie Handling</sci:member>
				<sci:member>__NotificationProtocol</sci:member>
			</sci:arg>
			<sci:arg name="__PoolID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; is a case insensitive string that can optionally be set to optimize the speed of execution for quick running protocols.  Multiple protocols with the same value for &lt;i&gt;__PoolID&lt;/i&gt; can share expensive resources such as database connections, Java VMs, memory, etc. reducing the execution time by 1 to 2 seconds per run.  This can give a large speed improvement to protocols that run in a few seconds such as web applications and interactive reports.  Longer running protocols will not see much benefit.  Generally, it is a good idea to use the same &lt;i&gt;__PoolID&lt;/i&gt; for all protocols within a single application such as an interactive report since many of the components, databases, and data structures will be similar.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; can also be specified by the client when the protocol is launched.  If &lt;i&gt;__PoolID&lt;/i&gt; is specified both as a parameter by the client and as a parameter stored within the protocol, the client&apos;s value overrides the stored value.&lt;/p&gt;

&lt;p&gt;To disable pooling entirely for this particular protocol, set &lt;i&gt;__PoolID&lt;/i&gt; to &lt;b&gt;&amp;lt;Disable&amp;gt;&lt;/b&gt;&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Http Cookie Handling" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;Http Cookie Handling&lt;/i&gt; provides a mechanism to control the handling of Http cookies within components that access remote resources via Http and Https.  These include the &lt;a href=&quot;javascript:DoLink(&apos;{8A25024A-C274-485B-BB99-8570DCC4C075}&apos;)&quot;&gt;HTTP Connector&lt;/a&gt;, Data readers such as &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{93C4D73F-0B4D-03F4-B0E3-D82C4FE04C6F}&apos;)&quot;&gt;XML Reader (Generic)&lt;/a&gt;, etc., and custom Java, Perl, and .Net components that use the available APIs for accessing remote servers.  By default, New Protocols will have this setting enabled and set to &quot;Protocol Scope&quot;.  This means that Http cookies obtained from a remote server within any component in the protocol or any of its subprotocols will be parsed and appropriately sent back on subsequent requests from the same component or any other component.   The handling of the cookies is based on the IETF standard as specified in &lt;a href=&quot;javascript:DoLink(&apos;http://tools.ietf.org/html/rfc6265&apos;)&quot;&gt;http://tools.ietf.org/html/rfc6265&lt;/a&gt;.  Setting the parameter to Disabled will prevent components from parsing and returning cookies to the remote servers.&lt;/p&gt;

&lt;p&gt;Persistence of cookies is not supported, so scoping of Http cookies is entirely within the context of a single protocol execution.&lt;/p&gt;

&lt;p&gt;Older protocols that do not have the &lt;i&gt;Http Cookie Handling&lt;/i&gt; parameter will behave as though it had been set to &quot;Disabled&quot;.  To enable cookie handling in these protocols, copy this parameter from a New Protocol to the older protocol and set the parameter as desired.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">Protocol Scoped</sci:legalval>
				<sci:legalval>Disabled</sci:legalval>
			</sci:arg>
			<sci:arg name="__NotificationProtocol" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__NotificationProtocol&lt;/i&gt; specifies the name or component ID (guid) of a protocol stored in the server&apos;s protocol database that will be executed when the current job completes. If your administrator has enabled notification protocols and depending on his or her preference, the notify protocol will either run as the anonymous user or as an admin specified user. The notification protocol receives several parameters that contain information about the original job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Notify_JobID&lt;/i&gt;: The job id of the execution
&lt;li&gt;&lt;i&gt;Notify_JobStatus&lt;/i&gt;: 
A description of the result of the job execution
&lt;li&gt;&lt;i&gt;Notify_JobStatusCode&lt;/i&gt;: The 
status code that for the result of the job execution.
	&lt;ul style=&quot;list-style-type:circle&quot;&gt;
	
&lt;li&gt;&lt;i&gt;5&lt;/i&gt;: Job was stopped by the client or administrator.
	&lt;li&gt;&lt;i&gt;6&lt;/i&gt;: 
Job completed normally with success.
	&lt;li&gt;&lt;i&gt;7&lt;/i&gt;: Job completed with an error.
	&lt;li&gt;&lt;i&gt;8&lt;/i&gt;: 
The process ID associated with the running job crashed or otherwise disappeared.
	&lt;li&gt;&lt;i&gt;9&lt;/i&gt;: 
Job failed to start.
	&lt;/ul&gt;
&lt;li&gt;&lt;i&gt;Notify_ProtocolName&lt;/i&gt;: The name of the protocol
&lt;li&gt;&lt;i&gt;Notify_ProtocolPath&lt;/i&gt;: 
The path of the protocol in the DB.  This field can be blank for protocols that were launched without 
saving to the database.
&lt;li&gt;&lt;i&gt;Notify_ProtocolLogName&lt;/i&gt;: The log name of the protocol.  
Is usually the same as ProtocolName, however this can be set by the client to a different name than the 
protocol.
&lt;li&gt;&lt;i&gt;Notify_RunHost&lt;/i&gt;: The name of the node where the protocol executed.
&lt;li&gt;&lt;i&gt;Notify_Username&lt;/i&gt;: 
The user that ran the job
&lt;/ul&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if the Pipeline Pilot server is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:member>Grid Options</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Grid Options" type="StringType" required="false" visibility="visible" multi="true" legalvalsenforced="false" uimpl="true">
				<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
				<sci:member>Reporting Stylesheet</sci:member>
			</sci:arg>
			<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
				<sci:value>{25A23C6A-4EF0-45F2-8495-3E88896C6262}</sci:value>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>rpowell</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Tue Apr 27 12:08:31 2021</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>21.2.0.2574</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>IXM - Project TL Organoid stack</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{4FCB48CC-B8E1-4E41-9ADE-C4E32B080020}</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>IXM - Project TL Organoid stack</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>70</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ResultFiles Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Include JobDir Files</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>50 -50</sci:value>
			</sci:arg>
			<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>OriginalPackage</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>rpowell\IXM - Project TL Organoid stack</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.FolderNavigator.1">
				<sci:component name="List Files" version="2">
					<sci:arg name="Directory Path" type="DirectoryType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>The path to the directory that will be searched for files or folders. Can be a path on the server or a network resource.
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a directory on or accessible to the server (e.g., via NFS), enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http&lt;/li&gt;
	&lt;li&gt;https&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>Recurse Directories</sci:member>
						<sci:member>Directory Path Authentication Options</sci:member>
						<sci:value>\\CTCRFile1.ad.tamhsc.edu\CTCR-Stor2$\MX ImageStore2\NaZhao\20190501-T11Zcad-coat\2019-07-15_reformatted\Z_stacks</sci:value>
					</sci:arg>
					<sci:arg name="Directory Path Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>For http and https sources, you may optionally specify authentication information for the URL in the following parameters</sci:help>
						<sci:member>Directory Path Authentication Options Username</sci:member>
						<sci:member>Directory Path Authentication Options Password</sci:member>
						<sci:member>Directory Path Authentication Options Authentication Method</sci:member>
						<sci:member>Directory Path Authentication Options KDC Server</sci:member>
						<sci:member>Directory Path Authentication Options KDC Realm</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Directory Path Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Determines which method to use during authentication with an HTTP or HTTPS directory.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
						<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
					</sci:arg>
					<sci:arg name="Directory Path Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Directory.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Directory Path Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>The password used to authenticate with the Directory&apos;s server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Directory Path Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Directory Path Authentication Options KDC Server" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>When connecting to an HDFS URL, KDC Server and Realm are also required</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Directory Path Authentication Options KDC Realm" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>When connecting to an HDFS URL, KDC Server and Realm are also required</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Recurse Directories" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>If True, the Directory Path will be searched recursively.  If False, the list will only include items contained directly by the specified Directory Path.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Filter" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;A regular expression used to identify the files or subdirectories that should be returned.  The component uses Perl regular expression syntax. 
&lt;p&gt;
&lt;b&gt;Examples:&lt;/b&gt;
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;.*&lt;/b&gt; will return all files or subdirectories&lt;/li&gt;
&lt;li&gt;&lt;b&gt;\.txt$&lt;/b&gt; will return all .txt files
&lt;li&gt;&lt;b&gt;\.(sd|sdf)$&lt;/b&gt; will return all .sd and .sdf files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;b&gt;^Assay&lt;/b&gt;&lt;/code&gt; will return all files whose names start with &quot;Assay&quot;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>.+</sci:value>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>Property</sci:member>
						<sci:member>Search Type</sci:member>
						<sci:member>Additional Properties</sci:member>
					</sci:arg>
					<sci:arg name="Property" type="PropertyNameType" required="true" visibility="visible" multi="false">
						<sci:help>Name of the property that will be added to the data stream which contains the path to the files or subdirectories.</sci:help>
						<sci:value>Path</sci:value>
					</sci:arg>
					<sci:arg name="Search Type" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Whether to search the Directory Path for files or for subdirectories</sci:help>
						<sci:legalval>Files</sci:legalval>
						<sci:legalval selected="true">Subdirectories</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Properties" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Additional properties for each file or subdirectory that should be added to the property list. 

The size property is in bytes. If greater than 2147483647, the output property is a double precision value, otherwise an integer.
 
The date properties are pilot DateTimeValues and can be manipulated with the appropriate DateTime pilotscript functions. The utility of the Last Accessed Date depends on the operating system.

The file name property is extracted directly as the leaf item from the full path.

Note that adding file system properties will incur some additional overhead, so be sure to switch off any properties that you are not using.</sci:help>
						<sci:legalval>Size</sci:legalval>
						<sci:legalval>Owner</sci:legalval>
						<sci:legalval>Creation Date</sci:legalval>
						<sci:legalval>Last Accessed Date</sci:legalval>
						<sci:legalval>Last Modified Date</sci:legalval>
						<sci:legalval selected="true">File Name</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>List Files</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>List Files Internal</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>GENERATORNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{DEF452A5-8A41-A363-C7ED-990B13235DE6}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Lists the files or folders in the specified directory on the server, from an HTTP WebDav server such as Microsoft SharePoint, or from Hadoop HDFS</sci:value>
						<sci:value>&lt;p&gt;Outputs a list of filenames in the specified directory. &lt;i&gt;Search Type&lt;/i&gt; can be switched to search for Subdirectory names as required.&lt;/p&gt;

&lt;p&gt;One data record is generated for each file found in &lt;i&gt;Directory Path&lt;/i&gt;.  To list files recursively in subfolders within &lt;i&gt;Directory Path&lt;/i&gt;, &lt;i&gt;Recurse Directories&lt;/i&gt; should be True.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Filter&lt;/i&gt; is a regular expression used to specify which files to return from each searched directory.&lt;/p&gt;

&lt;p&gt;The &lt;i&gt;Additional Properties&lt;/i&gt; parameter can be set to add selected meta data properties to the output, related to the named file or directory.&lt;/p&gt;

&lt;p&gt;For HTTP WebDav document repositories such as Microsoft SharePoint, you can specify an HTTP url as the &lt;i&gt;Directory Path&lt;/i&gt; and include authentication options for connecting to the remote server.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.0.1581</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 07 15:42:13 2017</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\File Utilities\List Files</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.RangeScreen.1">
				<sci:component name="Range Filter" version="2">
					<sci:arg name="List" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>A list of which data records to pass:
  e.g.,  1,3-5,7,10-11
     will pass the first, third, fourth, fifth and so on.</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Dec 13 12:38:32 2002</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;List&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>if (strlength(parameter(&apos;List&apos;, 2)) &gt; 0) then
	&quot;Filter range &quot; . parameter(&apos;List&apos;, 2);
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0C71D911-BF35-4A1B-8B2C-B9A586BD39F3}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Range Filter</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>390 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records within a specified range based on the order in which they arrive</sci:value>
						<sci:value>&lt;p&gt;Data records are numbered consecutively (from 1) as they arrive at the component.  The record numbers specified by &lt;i&gt;List&lt;/i&gt; are sent out the Pass port. Records not specified are sent out the Fail port.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;List&lt;/i&gt; items need to be entered as comma-separated values. &lt;i&gt;List&lt;/i&gt; can accept single item indices or ranges (such as &quot;1-5,7,9,13-15&quot;).&lt;/p&gt; 

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records whose indices match the specified list</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records whose indices do not match the specified list</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Data Filters\Range Filter</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Subprotocol" version="2">
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval>False</sci:legalval>
						<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>209.21.114.108:9918</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Subprotocol 1</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>SUBPROTOCOLNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>690 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.2.0.1267</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>14</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>@WellName := %&apos;File Name&apos;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.FolderNavigator.1">
						<sci:component name="List Files" version="2">
							<sci:arg name="Directory Path" type="LinkDataPropertyType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingRevertInfo" ishidden="true" base64="UI1">Al1HAALiAVRoZSBwYXRoIHRvIHRoZSBkaXJlY3RvcnkgdGhhdCB3aWxsIGJlIHNlYXJjaGVkIGZvciBmaWxlcyBvciBmb2xkZXJzLiBDYW4gYmUgYSBwYXRoIG9uIHRoZSBzZXJ2ZXIgb3IgYSBuZXR3b3JrIHJlc291cmNlLgo8cD4KPHVsPgo8bGk+Rm9yIGEgZGlyZWN0b3J5IG9uIG9yIGFjY2Vzc2libGUgdG8gdGhlIHNlcnZlciAoZS5nLiwgdmlhIE5GUyksIGVudGVyIGEgcGF0aC48L2xpPgo8bGk+Rm9yIGEgbmV0d29yayByZXNvdXJjZSwgZW50ZXIgYSBuZXR3b3JrIFVSTCBpbiB0aGUgZm9ybSA8Yj5wcm90b2NvbDovL3NlcnZlcjpwb3J0Ly4uLjwvYj4uIChJZiBwb3J0IGlzIG9taXR0ZWQsIGEgZGVmYXVsdCBpcyB1c2VkLikgUHJvdG9jb2xzIHN1cHBvcnRlZCBhcmU6Cgk8dWw+Cgk8bGk+aHR0cDwvbGk+Cgk8bGk+aHR0cHM8L2xpPgoJPGxpPmhkZnMgKEhhZG9vcCBEaXN0cmlidXRlZCBGaWxlIFN5c3RlbSk8L2xpPgoJPC91bD4KPC9saT4KPC91bD44RGlyZWN0b3J5VHlwZQAMAAAAAAEAAAEcVGhpcyBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQuBAH8AAAAAAAAAAAAPERpcmVjdG9yeSBQYXRoA8xTz7sEAA==</sci:propval>
									<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">DirectoryType</sci:propval>
									<sci:propval name="SCI_EvalOnInit" ishidden="true" boolVal="true"/>
									<sci:propval name="SCI_EvalOnInitType" ishidden="true">DirectoryType</sci:propval>
								</sci:metaproplist>
								<sci:help>The path to the directory that will be searched for files or folders. Can be a path on the server or a network resource.
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a directory on or accessible to the server (e.g., via NFS), enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http&lt;/li&gt;
	&lt;li&gt;https&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>Recurse Directories</sci:member>
								<sci:member>Directory Path Authentication Options</sci:member>
								<sci:value>pATH</sci:value>
							</sci:arg>
							<sci:arg name="Directory Path Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>For http and https sources, you may optionally specify authentication information for the URL in the following parameters</sci:help>
								<sci:member>Directory Path Authentication Options Username</sci:member>
								<sci:member>Directory Path Authentication Options Password</sci:member>
								<sci:member>Directory Path Authentication Options Authentication Method</sci:member>
								<sci:member>Directory Path Authentication Options KDC Server</sci:member>
								<sci:member>Directory Path Authentication Options KDC Realm</sci:member>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Directory Path Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Determines which method to use during authentication with an HTTP or HTTPS directory.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
								<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
							</sci:arg>
							<sci:arg name="Directory Path Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Directory.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="Directory Path Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>The password used to authenticate with the Directory&apos;s server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Directory Path Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Directory Path Authentication Options KDC Server" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>When connecting to an HDFS URL, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Directory Path Authentication Options KDC Realm" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>When connecting to an HDFS URL, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Recurse Directories" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If True, the Directory Path will be searched recursively.  If False, the list will only include items contained directly by the specified Directory Path.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Filter" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;A regular expression used to identify the files or subdirectories that should be returned.  The component uses Perl regular expression syntax. 
&lt;p&gt;
&lt;b&gt;Examples:&lt;/b&gt;
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;.*&lt;/b&gt; will return all files or subdirectories&lt;/li&gt;
&lt;li&gt;&lt;b&gt;\.txt$&lt;/b&gt; will return all .txt files
&lt;li&gt;&lt;b&gt;\.(sd|sdf)$&lt;/b&gt; will return all .sd and .sdf files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;b&gt;^Assay&lt;/b&gt;&lt;/code&gt; will return all files whose names start with &quot;Assay&quot;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>.+</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Property</sci:member>
								<sci:member>Search Type</sci:member>
								<sci:member>Additional Properties</sci:member>
							</sci:arg>
							<sci:arg name="Property" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>Name of the property that will be added to the data stream which contains the path to the files or subdirectories.</sci:help>
								<sci:value>Path</sci:value>
							</sci:arg>
							<sci:arg name="Search Type" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Whether to search the Directory Path for files or for subdirectories</sci:help>
								<sci:legalval selected="true">Files</sci:legalval>
								<sci:legalval>Subdirectories</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Properties" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>Additional properties for each file or subdirectory that should be added to the property list. 

The size property is in bytes. If greater than 2147483647, the output property is a double precision value, otherwise an integer.
 
The date properties are pilot DateTimeValues and can be manipulated with the appropriate DateTime pilotscript functions. The utility of the Last Accessed Date depends on the operating system.

The file name property is extracted directly as the leaf item from the full path.

Note that adding file system properties will incur some additional overhead, so be sure to switch off any properties that you are not using.</sci:help>
								<sci:legalval>Size</sci:legalval>
								<sci:legalval>Owner</sci:legalval>
								<sci:legalval>Creation Date</sci:legalval>
								<sci:legalval>Last Accessed Date</sci:legalval>
								<sci:legalval>Last Modified Date</sci:legalval>
								<sci:legalval>File Name</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:value>ComponentReturnsPass</sci:value>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>List Files</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>List Files Internal</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>GENERATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DEF452A5-8A41-A363-C7ED-990B13235DE6}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Lists the files or folders in the specified directory on the server, from an HTTP WebDav server such as Microsoft SharePoint, or from Hadoop HDFS</sci:value>
								<sci:value>&lt;p&gt;Outputs a list of filenames in the specified directory. &lt;i&gt;Search Type&lt;/i&gt; can be switched to search for Subdirectory names as required.&lt;/p&gt;

&lt;p&gt;One data record is generated for each file found in &lt;i&gt;Directory Path&lt;/i&gt;.  To list files recursively in subfolders within &lt;i&gt;Directory Path&lt;/i&gt;, &lt;i&gt;Recurse Directories&lt;/i&gt; should be True.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Filter&lt;/i&gt; is a regular expression used to specify which files to return from each searched directory.&lt;/p&gt;

&lt;p&gt;The &lt;i&gt;Additional Properties&lt;/i&gt; parameter can be set to add selected meta data properties to the output, related to the named file or directory.&lt;/p&gt;

&lt;p&gt;For HTTP WebDav document repositories such as Microsoft SharePoint, you can specify an HTTP url as the &lt;i&gt;Directory Path&lt;/i&gt; and include authentication options for connecting to the remote server.&lt;/p&gt;</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1581</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 07 15:42:13 2017</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\File Utilities\List Files</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>Text := &apos;open(&quot;&apos;.strReplace(Path,&apos;\&apos;,&apos;/&apos;).&apos;&quot;);
wait(100);&apos;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Keep Properties" version="2">
							<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>The list of property names to keep</sci:help>
								<sci:member>RenameList</sci:member>
								<sci:value>text</sci:value>
							</sci:arg>
							<sci:arg name="RenameList" type="PropertyNameType" required="false" visibility="visible" multi="true">
								<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Keep</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:18:38 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Keep &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Keeps only the specified properties</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>With only the specified properties remaining</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.TextWriter.1">
						<sci:component name="Text Writer" version="2">
							<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>The location to which to write the data. Can be a file, a network resource, a global property, or a data record property.
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot; and add an output port.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>IfFileExists</sci:member>
								<sci:member>CharacterEncoding</sci:member>
								<sci:member>Authentication Options</sci:member>
								<sci:value>$(JobDir)\macro.ijm</sci:value>
							</sci:arg>
							<sci:arg name="Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
								<sci:member>Username</sci:member>
								<sci:member>Password</sci:member>
								<sci:member>Authentication Method</sci:member>
								<sci:member>KDC Server</sci:member>
								<sci:member>KDC Realm</sci:member>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
								<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
							</sci:arg>
							<sci:arg name="Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write. If empty, all records are written out.</sci:help>
							</sci:arg>
							<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies action to take if a file specified by &lt;i&gt;Destination&lt;/i&gt; already exists. Options are:
&lt;ul&gt;
&lt;li&gt;Overwrite: Replace the existing file with the new content.
&lt;li&gt;Append: Append the new content to the end of the existing file.
&lt;li&gt;Halt: Raise an error and halt the protocol.
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">Overwrite</sci:legalval>
								<sci:legalval>Append</sci:legalval>
								<sci:legalval>Halt</sci:legalval>
							</sci:arg>
							<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies the character set encoding to use within the destination file. Options are:
&lt;ul&gt;
&lt;li&gt;ANSI: an encoding where each character is defined by a single byte. This allows the Latin-1 (ISO-8859-1) character set to be written to the file. Virtually all applications can read these files.
&lt;li&gt;UTF-8: a variable length encoding supporting all Unicode characters. Each character is represented by 1 to 6 bytes. This allows writing out any extended characters specified in the Unicode character sets while minimizing the size of the file when most characters are from the ANSI set. Some applications do not support UTF-8 files.
&lt;li&gt;Unicode: (also known as UCS-2) represents each character by exactly 2 bytes in &quot;little-endian&quot; order. Many applications do not support this encoding.
&lt;li&gt;Unicode big endian: represents each character by exactly 2 bytes in &quot;big-endian&quot; order. Many applications do not support this encoding.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you choose an option other than ANSI, then take note of the &lt;i&gt;UseByteOrderMark&lt;/i&gt; setting.
&lt;li&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;.
&lt;li&gt;The UCS-2 encoding has been superseded by &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/UTF-16&apos;)&quot;&gt;UTF-16&lt;/a&gt; but the two 
are equivalent for all characters in the &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane&apos;)&quot;&gt;Basic Multilingual Plane&lt;/a&gt; .
&lt;/ul&gt;
</sci:help>
								<sci:member>UseByteOrderMark</sci:member>
								<sci:legalval selected="true">ANSI</sci:legalval>
								<sci:legalval>UTF-8</sci:legalval>
								<sci:legalval>Unicode</sci:legalval>
								<sci:legalval>Unicode big endian</sci:legalval>
							</sci:arg>
							<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies whether to use a byte order mark (BOM) when writing a file with a &lt;i&gt;CharacterEncoding&lt;/i&gt; other than ANSI. The BOM is a set of 2 or 3 bytes written to the start of a file or data stream to indicate the character encoding of the following data. BOMs are more widely used in Windows than in Linux environments. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;p&gt;
Options are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always: For non-ANSI encodings, always writes a BOM at the start of the output stream.
&lt;li&gt;Never: Never writes a BOM at the start of the output stream.
&lt;li&gt;Native: Equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a value other than &quot;ANSI&quot;&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
								<sci:legalval selected="true">Always</sci:legalval>
								<sci:legalval>Never</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="Delimiter Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:member>BeginningText</sci:member>
								<sci:member>EndingText</sci:member>
							</sci:arg>
							<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Text that should precede each record written out.</sci:help>
							</sci:arg>
							<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Any text to be included after each record written out.</sci:help>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>PropertyNames</sci:member>
								<sci:member>IncludePropertyNames</sci:member>
								<sci:member>HierarchyDepth</sci:member>
								<sci:member>NewlineStyle</sci:member>
							</sci:arg>
							<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>List of properties to write (separated by commas). &quot;*&quot; indicates to write all properties.</sci:help>
								<sci:value>*</sci:value>
							</sci:arg>
							<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Display the name of each property along with its values</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="HierarchyDepth" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>Controls the maximum depth within hierarchical data records to display node and property information.  No hierarchical information will be displayed if depth is set to -1.  If no value is set, the default is 0.</sci:help>
							</sci:arg>
							<sci:arg name="NewlineStyle" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;
Set this value to define the line ending character(s) in the output file. The default value is the Windows-standard carriage return plus line feed (CR+LF), but you may need to change this, especially in a non-Windows environment. Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CR+LF (Traditional Windows text file line ending)&lt;/li&gt;
&lt;li&gt;LF (Line feed, &apos;\n&apos;, 0x0A)&lt;/li&gt;
&lt;li&gt;CR (Carriage return, &apos;\r&apos;, 0x0D)&lt;/li&gt;
&lt;li&gt;Native (CR+LF on Windows, LF on Linux)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">CR+LF</sci:legalval>
								<sci:legalval>LF</sci:legalval>
								<sci:legalval>CR</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 07 15:31:10 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1242 -95</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Text Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a text file</sci:value>
								<sci:value>&lt;p&gt;Data records are formatted as text and written to the file specified by &lt;i&gt;Destination&lt;/i&gt;. Each property value is separated by a new line. Separation of data records can be controlled using the parameters under &lt;i&gt;Delimiter Options&lt;/i&gt;.
&lt;/p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;HierarchyDepth&lt;/i&gt; to control the display of deep properties and nodes from hierarchical data records.&lt;/li&gt; 
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To write a file formatted with one data record per row with delimiters 
  between the property values, use the
&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;Delimited Text Writer&lt;/a&gt;.  &lt;/li&gt;
&lt;li&gt;To write out binary data (such as a .png file),
use the &lt;a href=&quot;javascript:DoLink(&apos;{BF2A2E90-418A-4C0B-8550-B2C4D5554628}&apos;)&quot;&gt;Binary Writer&lt;/a&gt;.
 &lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1581</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>text := &apos;
run(&quot;Concatenate...&quot;, &quot;all_open&quot;);

run(&quot;Invert&quot;, &quot;stack&quot;);
run(&quot;Subtract Background...&quot;, &quot;rolling=10 stack&quot;);
run(&quot;Stack Focuser &quot;, &quot;enter=11&quot;);
run(&quot;Invert&quot;);

saveAs(&quot;Tiff&quot;, &quot;$(Save_temp)/temp/Focused_Untitled.tif&quot;);&apos;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
								<sci:value>@Save_temp := strReplace(@JobDir,&apos;\&apos;,&apos;/&apos;);</sci:value>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -470</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>5</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.GenerateData.1">
						<sci:component name="Create Empty Data" version="2">
							<sci:arg name="NumberToGenerate" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The number of empty data records to generate</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Initialize Condition" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>PilotScript expression to initialize any values.  When run in mode &quot;After Each Process&quot; this expression is evaluated for each incoming data item.  When run in mode &quot;NoMoreData&quot; this expression is evaluated a single time.</sci:help>
								<sci:value>#Count := 0;
#MaxCount := $(NumberToGenerate);</sci:value>
							</sci:arg>
							<sci:arg name="Condition" type="ExpressionType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>PilotScript boolean expression which determines the conditions under which to continue to generate data.</sci:help>
								<sci:value>#Count++;
#Count &lt;= #MaxCount;</sci:value>
							</sci:arg>
							<sci:arg name="WhenToGenerate" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>When to generate the new data records:
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;AfterEachProcess&lt;/i&gt; - Once for each incoming data record (i.e., after each process call).  This option causes each input data record to be duplicated (cloned) &lt;i&gt;NumberToGenerate&lt;/i&gt; times.
&lt;li&gt;&lt;i&gt;OnNoMoreData&lt;/i&gt; - Once all incoming data has passed through (or if none is ever expected).
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">OnNoMoreData</sci:legalval>
								<sci:legalval>AfterEachProcess</sci:legalval>
							</sci:arg>
							<sci:arg name="ProcessDataAction" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>Indicates fate of incoming data when &lt;i&gt;WhenToGenerate&lt;/i&gt; is set to OnNoMoreData:
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;PassData&lt;/i&gt; - The data is sent out the Pass port
&lt;li&gt;&lt;i&gt;FailData&lt;/i&gt; - The data is sent out the Fail port
&lt;li&gt;&lt;i&gt;DeleteData&lt;/i&gt; - The data is deleted and not sent out any port
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenToGenerate to OnNoMoreData&apos;);
Parameter(&apos;WhenToGenerate&apos;) eq &apos;OnNoMoreData&apos;</sci:enabledscript>
								<sci:legalval selected="true">PassData</sci:legalval>
								<sci:legalval>FailData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Nov 10 15:47:05 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;NumberToGenerate&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#number := Parameter(&apos;NumberToGenerate&apos;, 2);
if(StrLength(String(#number)) &gt; 0 AND #number &gt; 1) then
	&apos;Create &apos; . #number . &apos; data records&apos;;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{ABC452F1-9E41-4A63-A8ED-744A13235DE6}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Creates empty generic data records (formerly called &quot;Generate Empty Data&quot;)</sci:value>
								<sci:value>&lt;p&gt;&lt;i&gt;NumberToGenerate&lt;/i&gt; specifies the number of empty records to generate.
&lt;/p&gt;</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.8</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>6</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Create Empty Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Imaging.CreateEmptyImage_Component.1">
						<sci:component name="Create Empty Image" version="2">
							<sci:arg name="Width" type="ExpressionType" required="true" visibility="visible" multi="false">
								<sci:help>Width of the image to be created.</sci:help>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Height" type="ExpressionType" required="true" visibility="visible" multi="false">
								<sci:help>Height of the image to be created.</sci:help>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Pixel Type" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Pixel type for the image to be created.</sci:help>
								<sci:legalval>unsigned char</sci:legalval>
								<sci:legalval>unsigned short</sci:legalval>
								<sci:legalval selected="true">short</sci:legalval>
								<sci:legalval>int</sci:legalval>
								<sci:legalval>float</sci:legalval>
								<sci:legalval>color</sci:legalval>
								<sci:legalval>48 bit color</sci:legalval>
							</sci:arg>
							<sci:arg name="Constant" type="ExpressionType" required="true" visibility="visible" multi="false">
								<sci:help>The value to set all the pixels to. It will be converted to the type specified by &lt;i&gt;Pixel Type&lt;/i&gt;.</sci:help>
								<sci:value>15</sci:value>
							</sci:arg>
							<sci:arg name="Output Image Tag" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>String value to place in &lt;i&gt;ImageTag&lt;/i&gt; property of images created by this component. Value is also appended to the &lt;i&gt;ImageHistory&lt;/i&gt; property.</sci:help>
								<sci:value>CreateEmptyImage</sci:value>
							</sci:arg>
							<sci:arg name="Implementation" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="true">
								<sci:legalval selected="true">IPP</sci:legalval>
							</sci:arg>
							<sci:arg name="VersionImaging" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;strong&gt;NOTE:&lt;/strong&gt; this parameter should not be changed.</sci:help>
								<sci:legalval selected="true">2</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:value>ComponentReturnsPass</sci:value>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/imaging</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Dec 02 10:43:12 2013</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Create Empty Image</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{580A31CB-4132-468b-B294-8DFB6D940A15}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Creates an empty image and adds it to the data record</sci:value>
								<sci:value>Creates an empty image of dimensions &lt;i&gt;Width&lt;/i&gt;,&lt;i&gt;Height&lt;/i&gt; and type &lt;i&gt;Pixel Type&lt;/i&gt;. Sets all pixels to the same value, equal to &lt;i&gt;Constant&lt;/i&gt;.

&lt;p&gt;&lt;b&gt;Output Image Type&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Output Type: User selected non-color image type &lt;/p&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Input image group.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Output image group.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.1.0.13</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>7</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Imaging\Utilities\Create Empty Image</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="ImageJ (on Server)" version="2">
							<sci:arg name="Input Image Tags" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Comma separated list of &lt;i&gt;Input Image Tags&lt;/i&gt; of images to be opened in ImageJ.
 </sci:help>
								<sci:value>CreateEmptyImage</sci:value>
							</sci:arg>
							<sci:arg name="Macro" type="URLType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>The location of an ImageJ macro file on the server system.</sci:help>
								<sci:value>$(JobDir)\macro.ijm</sci:value>
							</sci:arg>
							<sci:arg name="Output Image Tags" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>Comma separated list of strings to use as &lt;i&gt;ImageTag&lt;/i&gt; properties of images created by this component. This parameter needs to have the same number of entries as the &lt;i&gt;Output Image Filenames&lt;/i&gt;.
 </sci:help>
								<sci:validscript>(parameter(&apos;Output Image Tags&apos;) not eq &apos;&apos; and parameter(&apos;Output Image Filenames&apos;) not eq &apos;&apos;) or (parameter(&apos;Output Image Tags&apos;) eq &apos;&apos; and parameter(&apos;Output Image Filenames&apos;) eq &apos;&apos;)</sci:validscript>
								<sci:value>Proj</sci:value>
							</sci:arg>
							<sci:arg name="Output Image Filenames" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>Comma separated list of filenames that will be created by ImageJ application. This parameter needs to have the same number of entries as the &lt;i&gt;Output Image Tags&lt;/i&gt;. 
 </sci:help>
								<sci:validscript>(parameter(&apos;Output Image Tags&apos;) not eq &apos;&apos; and parameter(&apos;Output Image Filenames&apos;) not eq &apos;&apos;) or (parameter(&apos;Output Image Tags&apos;) eq &apos;&apos; and parameter(&apos;Output Image Filenames&apos;) eq &apos;&apos;)</sci:validscript>
								<sci:value>Focused_Untitled.tif</sci:value>
							</sci:arg>
							<sci:arg name="ImageJ Output Property Name" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Name of the property to be added to the current record which holds the standard output of the ImageJ macro.</sci:help>
								<sci:value>IJoutput</sci:value>
							</sci:arg>
							<sci:arg name="ImageJ JAR Path on Server" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>Specify the &apos;method&apos; to use to determine the full-path to the ImageJ &lt;i&gt;ij.jar&lt;/i&gt; file on the Pipeline Pilot server.
&lt;br&gt;
&lt;br&gt;
The methods are outlined below:
&lt;ul&gt;
&lt;li&gt;Package Global: An &apos;Imaging&apos; package global can be used to specify the ImageJ &apos;ij.jar&apos; full-path for all users on the server.  You can configure this package global in the Pipeline Pilot Administrative Portal.
&lt;br&gt;
This &apos;Imaging&apos; package global can be accessed directly using the Pilotscript command below:
&lt;br&gt;
&amp;nbsp &amp;nbsp globalproperty(&quot;/scitegic/imaging/ImageJ_Installation_jar_path&quot;);
&lt;/li&gt;
&lt;li&gt;Component Specified:  This component must specify the full-path to the ImageJ &lt;i&gt;ij.jar&lt;/i&gt; file on the Pipeline Pilot server.
&lt;br&gt;
If this &apos;method&apos; is selected, the child parameter named &lt;i&gt;Component Specified ImageJ JAR Full-Path on Server&lt;/i&gt; must be configured to a valid full-path to the &lt;i&gt;ij.jar&lt;/i&gt; file on the server.
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>Component Specified ImageJ JAR Full-Path on Server</sci:member>
								<sci:legalval>Use Package Global ImageJ JAR Path</sci:legalval>
								<sci:legalval selected="true">Use Component Specified ImageJ JAR Full-Path</sci:legalval>
							</sci:arg>
							<sci:arg name="Component Specified ImageJ JAR Full-Path on Server" type="URLType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>The full-path to the ImageJ &apos;ij.jar&apos; file on the Pipeline Pilot server.
&lt;br&gt;
&lt;br&gt;
This parameter must be set to a valid path if the parent parameter is using the setting &lt;i&gt;Use Component Specified ImageJ JAR Full-Path&lt;/i&gt;.</sci:help>
								<sci:validscript>SetInvalidDetails(&quot;Specify the full-path to the ImageJ &apos;ij.jar&apos; file on the Pipeline Pilot server.&quot;);

( parameter() not eq &apos;&apos; ) OR ( parameter(&apos;ImageJ JAR Path on Server&apos;) eq &apos;Use Package Global ImageJ JAR Path&apos;  );</sci:validscript>
								<sci:enabledscript>parameter(&quot;ImageJ JAR Path on Server&quot;) eq &quot;Use Component Specified ImageJ JAR Full-Path&quot;</sci:enabledscript>
								<sci:value>C:\ImageJ\ij.jar</sci:value>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
								<sci:value>SvrTempFiles,ImageJViewerArgs,RecordIndex,imageJInstallPath_g,PluginPath,ImageJ_JAR_FullPath_on_Server_g</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Shortcut Version" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Used to maintain backwards compatibility for older protocols with this shortcut component.</sci:help>
								<sci:legalval selected="true">5</sci:legalval>
								<sci:legalval>4</sci:legalval>
								<sci:legalval>3</sci:legalval>
								<sci:legalval>2</sci:legalval>
								<sci:legalval>1</sci:legalval>
							</sci:arg>
							<sci:arg name="VersionImaging" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
								<sci:help>&lt;strong&gt;NOTE:&lt;/strong&gt; this parameter should not be changed.</sci:help>
								<sci:legalval selected="true">5</sci:legalval>
							</sci:arg>
							<sci:arg name="Internals Debug Settings" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;&lt;strong&gt;Do not adjust any of the settings in this group.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;These settings in this group should not never be adjusted in &quot;Production Environments.&quot;
&lt;/p&gt;</sci:help>
								<sci:member>Enable Debug Checks and Messages</sci:member>
								<sci:member>Expected Runtime Type</sci:member>
								<sci:member>Platform Determination Type</sci:member>
							</sci:arg>
							<sci:arg name="Enable Debug Checks and Messages" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;&lt;strong&gt;Do not adjust any of these settings.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;These settings in this group should not never be adjusted in &quot;Production Environments.&quot;
&lt;/p&gt;</sci:help>
								<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
								<sci:legalval selected="true">0</sci:legalval>
								<sci:legalval>1</sci:legalval>
								<sci:legalval>2</sci:legalval>
								<sci:legalval>3</sci:legalval>
								<sci:legalval>4</sci:legalval>
							</sci:arg>
							<sci:arg name="Expected Runtime Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;&lt;strong&gt;Do not adjust any of these settings.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;These settings in this group should not never be adjusted in &quot;Production Environments.&quot;
&lt;/p&gt;</sci:help>
								<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
								<sci:legalval selected="true">OnServer</sci:legalval>
								<sci:legalval>OnClient</sci:legalval>
							</sci:arg>
							<sci:arg name="Platform Determination Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;&lt;strong&gt;Do not adjust any of these settings.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;These settings in this group should not never be adjusted in &quot;Production Environments.&quot;
&lt;/p&gt;</sci:help>
								<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
								<sci:legalval selected="true">Automatic</sci:legalval>
								<sci:legalval>Windows</sci:legalval>
								<sci:legalval>Linux</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ComponentNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0AFE6927-1C43-414E-B8FF-714AFAFB3D3F}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -820</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Run ImageJ application on server</sci:value>
								<sci:value>&lt;br&gt;
&lt;p&gt;The &lt;i&gt;Input Image Tags&lt;/i&gt; specify the images to pass to ImageJ. All images are written to a temporary jobs folder on server either as tif or raw files. Images of type char, short, int and float are written in raw format. Unsigned char, color images and image stacks are written as tif files.&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The ImageJ application launches in batch process mode as the user must provide an ImageJ macro. The names of input image files and the filenames specified by the &lt;i&gt;Output Image Filenames&lt;/i&gt; are passed into the ImageJ macro as the comma-separated argument list. The macro code opens these temporary images and does the processing. The macro code should save the resulting images back to the server temporary folder with the output filenames provided. &lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;After the ImageJ application is closed, the protocol inserts the output image files into the current record with the corresponding Image Tags provided by &lt;i&gt;Output Image Tags&lt;/i&gt;. The number of filenames in &lt;i&gt;Output Image Filenames&lt;/i&gt; has to be equal to the number of image tags in &lt;i&gt;Output Image Tags&lt;/i&gt;. The protocol also adds a property with name specified in &lt;i&gt;ImageJ Output Property Name&lt;/i&gt;, which holds the standard output of the ImageJ macro.
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt; Note that char images are first converted to short before they are written to the temporary jobs folder to preserve the actual pixel values. ImageJ converts 8-bit signed to 8-bit unsigned images.&lt;br&gt;&lt;br&gt;&lt;p&gt;

&lt;p class=&quot;important&quot;&gt;&lt;b&gt;IMPORTANT!&lt;/b&gt;  You must have ImageJ 1.41 or later installed on the server side. You must install the version of ImageJ that comes &lt;b&gt;&apos;bundled with Java&apos;&lt;/b&gt;.
&lt;br&gt;
&lt;br&gt;
&lt;p&gt;

&lt;p class=&quot;important&quot;&gt;
&lt;b&gt;Server Configuration&lt;/b&gt;  
(Package Global): An &apos;Imaging&apos; package global can be used to specify the ImageJ &apos;ij.jar&apos; full-path for all users on the server.  You can configure this package global in the Pipeline Pilot Administrative Portal.
&lt;p&gt;See the parameter &lt;i&gt;ImageJ JAR Path on Server&lt;/i&gt; for details.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;

&lt;strong&gt;See Also&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&quot;javascript:DoLink(&apos;http://rsbweb.nih.gov/ij/&apos;)&quot;&gt;ImageJ&lt;/a&gt; website for details and updates for the ImageJ program. ( http://rsbweb.nih.gov/ij/ )
&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1579</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Make Shortcut by Default</sci:legalval>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/imaging</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 08 13:08:21 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Comment</sci:help>
								<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol ShowComment</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Add Protocol Comment Here</sci:help>
								<sci:value>Add Protocol Comment Here</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>ImageJ
(on Server)</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>8</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Imaging\Application Integration\ImageJ (on Server)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>FileExists(@&apos;ImageJ_JAR_FullPath_on_Server_g&apos;)</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>FileExists(@&apos;ImageJ_JAR_FullPath...&apos;)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1530 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>8</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>#msg := &apos;Unable to locate ImageJ application at &apos;.@&apos;ImageJ_JAR_FullPath_on_Server_g&apos;;
Error(#msg);</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Unable to locate ImageJ</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1818 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>9</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.ServerAction.1">
								<sci:component name="Copy File" version="2">
									<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The source file path, relative to the server machine. This file is unaffected by the copy operation.

Internet files (http, https and ftp protocols) are supported as sources for copying.  When copying from http and https URLs you may optionally specify Authentication Options for the connection in the appropriate group parameters.</sci:help>
										<sci:member>Source Authentication Options</sci:member>
										<sci:value>$(ServerRoot)/imaging/bin/client/lang/java/jars/ImageJViewer.jar</sci:value>
									</sci:arg>
									<sci:arg name="Source Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For http and https sources, you may optionally specify authentication information for the URL in the following parameters</sci:help>
										<sci:member>Source Authentication Options Username</sci:member>
										<sci:member>Source Authentication Options Password</sci:member>
										<sci:member>Source Authentication Options Authentication Method</sci:member>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^https?:&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Source Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Determines which method to use during authentication with an HTTP or HTTPS source.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
										<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
									</sci:arg>
									<sci:arg name="Source Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Source.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Source Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>The password used to authenticate with the Source server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Source Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The destination file path relative to the server machine.  This file may or may not exist before the copy operation.  If it does exist already, the existing file will be overwritten by the copied file. If it does not exist, then any necessary new intermediate folders are also created.

WebDav repository files such as for Microsoft Sharepoint servers (using http and https protocols) are supported as destinations for copying.  When copying to an http or https URL, you may optionally specify Authentication Options for the connection in the Authentication Options parameter group.</sci:help>
										<sci:member>Destination Authentication Options</sci:member>
										<sci:value>$(TempDir)/ImageJViewer.jar</sci:value>
									</sci:arg>
									<sci:arg name="Destination Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For http and https destinations, you may optionally specify authentication information for the URL in the following parameters</sci:help>
										<sci:member>Destination Authentication Options Username</sci:member>
										<sci:member>Destination Authentication Options Password</sci:member>
										<sci:member>Destination Authentication Options Authentication Method</sci:member>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^https?:&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Destination Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Determines which method to use during authentication with an HTTP or HTTPS destination.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
										<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
									</sci:arg>
									<sci:arg name="Destination Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Destination.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Destination Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>The password used to authenticate with the Destination server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;To enable, set the Destination Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Destination Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Make Copy Writable" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Componet Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{38A20EDC-AAAA-42EF-97BA-D1B40B74FFE0}</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Copy File</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1818 -470</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Copies a file and saves it to the specified location.  Can be used to retrieve files from HTTP or HTTPS servers and can also be used to upload files to HTTP WebDav repositories such as Sharepoint and other document repositories.</sci:value>
										<sci:value>&lt;p&gt;A copy of &lt;i&gt;Source&lt;/i&gt; is created and saved to &lt;i&gt;Destination&lt;/i&gt;. The original file is left in place.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;All file locations are relative to the server.&lt;/li&gt;
&lt;li&gt;You can copy to FTP, HTTP and HTTPS servers using this component and to WebDav document repositories such as Sharepoint or Apache WebDav.&lt;/li&gt;
&lt;li&gt;For HTTP and HTTPS servers, you can specify authentication options to control username and password information for the connection.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To copy a file from the client to the server, use &lt;a href=&quot;javascript:DoLink(&apos;{BBBC3189-A239-45BD-98A7-6FD3982D8282}&apos;)&quot;&gt;Copy to Server&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To copy a file from the server to the client, use &lt;a href=&quot;javascript:DoLink(&apos;{DC38B2F0-B8B1-4114-92F0-5EE15A9E969C}&apos;)&quot;&gt;Copy To Client&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To move a file, use &lt;a href=&quot;javascript:DoLink(&apos;{40A2ACDC-AABB-42EF-970A-D1340B748FE0}&apos;)&quot;&gt;Move File&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
 
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>5.0.0.103</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>%VERSION 3%</sci:value>
										<sci:value>2114 -345 529 483</sci:value>
										<sci:value>255 255 0</sci:value>
										<sci:value>Only Copy the first time -- per protocol run.

Added special property
&apos;Make Copy Writable&apos; -- just in case

Changed Location to &quot;TempDir&quot; from &quot;JobDir&quot;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>10</sci:value>
									</sci:arg>
									<sci:arg name="Argument2" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>The destination file, relative to the server</sci:help>
										<sci:value>$(Destination)</sci:value>
									</sci:arg>
									<sci:arg name="Argument1" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>The source file, relative to the server</sci:help>
										<sci:value>$(Source)</sci:value>
									</sci:arg>
									<sci:arg name="Action" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Parameter Help</sci:help>
										<sci:value>CopyFile</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Feb 23 10:56:01 2010</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Copy File - ImageJView Jar File</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\File Utilities\Copy File</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@RecordIndex = 1</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Is first record?</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>954 -645</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>Expand(&apos;,&apos;, globalproperty(&apos;Output Image Tags&apos;));
Expand(&apos;,&apos;, globalproperty(&apos;Output Image Filenames&apos;));

#ImageTagArray := globalproperty(&apos;Output Image Tags&apos;);
#ImageNameArray := globalproperty(&apos;Output Image Filenames&apos;);

if numValues(#ImageTagArray) not eq numValues(#ImageNameArray) then
	Error(&apos;Number of output image tags and number of ImageJ output image names mismatch&apos;);
end if;


Expand(&apos;,&apos;,globalproperty(&apos;Input Image Tags&apos;));
#temp := globalproperty(&apos;Input Image Tags&apos;);
for #i in 1 .. numvalues(globalproperty(&apos;Input Image Tags&apos;)) loop
	#temp[#i] := toupper(trim(#temp[#i]));
end loop;
globalproperty(&apos;Input Image Tags&apos;) := #temp;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Initialize</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1242 -645</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>#jarFileNotFound := not FileExists(&apos;$(JobDir)/ImageJViewer.jar&apos;);
</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>#jarFileNotFound := not FileExists()</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1530 -645</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>11</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="Dont Pass Data" version="2">
									<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
										<sci:legalval selected="true">LeaveData</sci:legalval>
										<sci:legalval>ClearData</sci:legalval>
										<sci:legalval>DeleteData</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>the action to perform</sci:help>
										<sci:value>PassDataToPort</sci:value>
									</sci:arg>
									<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>the port to pass data to</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Sep 20 08:16:06 2006</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Don&apos;t Pass Data</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Evaluate Expression</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{F70D3185-8B78-4211-AF3E-D5427C306F87}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1818 -820</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Prevents records exiting an internal component from being passed out of a subprotocol</sci:value>
										<sci:value>&lt;p&gt;This component is useful inside subprotocols to keep data from being passed out. It is an alternative to disabling components.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/comps/disable_comps.htm&apos;)&quot;&gt;Disabling Components&lt;/a&gt;&lt;/p&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>6.0.1.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>12</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Dont Pass Data</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>//For 2018r1, the Component interface now uses NEW  &quot;ImageJ JAR Path on Server&quot; params
//We use the &apos;Shortcut Version&apos; in implemetaion tab -- to ensure backward compatible
ShortCut_Version := -1;
VersionImaging_Version := -1;
globalproperty(&apos;ImageJ_JAR_FullPath_on_Server_g&apos;) := &quot;&quot;;
method01_package_global := &quot;Use Package Global ImageJ JAR Path&quot;;
method02_userSpecified_fullPath := &quot;Use Component Specified ImageJ JAR Full-Path&quot;;
method_selector_ImageJ_JAR_Path_on_Server := &quot;&quot;;

if @&apos;Shortcut Version&apos; is defined then
	ShortCut_Version := integer( parentparameter(&apos;Shortcut Version&apos;) ); 
else
	debugmessage(&quot;WARNING: forcing &apos;ShortCut_Version&apos; to 5.&quot;);
	ShortCut_Version := 5;
end if;

if @&apos;VersionImaging&apos; is defined then
	VersionImaging_Version := integer( parentparameter(&apos;VersionImaging&apos;) );
else
	debugmessage(&quot;WARNING: forcing &apos;VersionImaging_Version&apos; to 5.&quot;);
	VersionImaging_Version := 5;
end if;

if(5 &gt; ShortCut_Version) then
	//We have a pre-2018 component -- so use OLD varable name
	if( parentparameter(&quot;ImageJ Location&quot;) is defined) then
		debugmessage(&quot;INFO: using version-4 interface parameter (&apos;ImageJ Location&apos;).&quot;);
		globalproperty(&apos;ImageJ_JAR_FullPath_on_Server_g&apos;) := parentparameter(&quot;ImageJ Location&quot;);
	else
		error(&quot;ERROR: Failed to find component parameter (&apos;ImageJ Location&apos;) for a pre-2018 component.&quot;);
	end if;
else
	//We have a 2018+ component [ Newer Style Interface ]
	method_selector_ImageJ_JAR_Path_on_Server := parentparameter(&quot;ImageJ JAR Path on Server&quot;);
	if( method01_package_global eq method_selector_ImageJ_JAR_Path_on_Server) then
		//Use Package global
		debugmessage(&quot;INFO: using version-5 interface parameter (&apos;&quot; . method01_package_global . &quot;&apos;).&quot;);
		globalproperty(&apos;ImageJ_JAR_FullPath_on_Server_g&apos;) := globalproperty(&quot;/scitegic/imaging/ImageJ_Installation_jar_path&quot;);
	elsif( method02_userSpecified_fullPath eq method_selector_ImageJ_JAR_Path_on_Server) then
		//User specified full-path
		debugmessage(&quot;INFO: using version-5 interface parameter (&apos;&quot; . method02_userSpecified_fullPath . &quot;&apos;).&quot;);
		globalproperty(&apos;ImageJ_JAR_FullPath_on_Server_g&apos;) := parentparameter(&quot;Component Specified ImageJ JAR Full-Path on Server&quot;);
	else
		error(&quot;ERROR: Failed to find valid setting for component parameter (&apos;ImageJ JAR Path on Server&apos;) .&quot;);
	end if;
end if;

if(&apos;&apos; eq globalproperty(&apos;ImageJ_JAR_FullPath_on_Server_g&apos;)) then
	//__This should never happen, but check for it anyways
	error(&quot;ERROR: Empty path for &apos;ImageJ_JAR_FullPath_on_Server&apos;.&quot;);
end if;

ImageJ_JAR_FullPath_on_Server := globalproperty(&apos;ImageJ_JAR_FullPath_on_Server_g&apos;);
//Cleanup the data-record vars not needed downstream -- can be commented out for debugging, if needed
remove(&apos;ImageJ_JAR_FullPath_on_Server&apos;);
remove(&apos;ShortCut_Version&apos;, &apos;VersionImaging_Version&apos;, &apos;method01_package_global&apos;, &apos;method02_userSpecified_fullPath&apos;, &apos;method_selector_ImageJ_JAR_Path_on_Server&apos;);
//After cleanup -- the only added property should be &apos;ImageJ_JAR_FullPath_on_Server&apos; 
//The LOCAL GLOBAL property &apos;ImageJ_JAR_FullPath_on_Server_g&apos; works for both v4(old) and v5(2018+) based short-cut components

	

	</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Determine ImageJ JAR full-path (v4,v5)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -995</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>%VERSION 3%</sci:value>
										<sci:value>98 -670 644 177</sci:value>
										<sci:value>255 255 0</sci:value>
										<sci:value>For backward compatability -- look at &quot;Shortcut Version&quot; ( v4, v5 )</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>14</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>#imageJ_jar_fullPath := @&apos;ImageJ_JAR_FullPath_on_Server_g&apos;;
#imageJ_BasePath := rsubst(#imageJ_jar_fullPath, &apos;ij.jar&apos;, &apos;&apos;, &apos;i&apos;);

@imageJInstallPath_g := #imageJ_BasePath; //__This should always end with either &apos;\&apos; or &apos;/&apos; due to rsubst() above
@PluginPath := #imageJ_BasePath . &quot;plugins&quot;; //__Already had dir-char -- don&apos;t need to add one.</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Get ImageJ install path from  jar path</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -995</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.CountRecords.1">
								<sci:component name="Count and Index Data" version="2">
									<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
										<sci:member>Start Index</sci:member>
										<sci:member>Check if Property Already in Use</sci:member>
										<sci:value>@RecordIndex</sci:value>
									</sci:arg>
									<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
										<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Count and Index Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Count and Index Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>666 -995</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Counts the number of data records and puts the count in a property</sci:value>
										<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>6.0.0.44</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>4</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.ServerAction.1">
								<sci:component name="Copy File" version="2">
									<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The source file path, relative to the server machine. This file is unaffected by the copy operation.

Internet files (http, https and ftp protocols) are supported as sources for copying.  When copying from http and https URLs you may optionally specify Authentication Options for the connection in the appropriate group parameters.</sci:help>
										<sci:member>Source Authentication Options</sci:member>
										<sci:value>$(Macro)</sci:value>
									</sci:arg>
									<sci:arg name="Source Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For http and https sources, you may optionally specify authentication information for the URL in the following parameters</sci:help>
										<sci:member>Source Authentication Options Username</sci:member>
										<sci:member>Source Authentication Options Password</sci:member>
										<sci:member>Source Authentication Options Authentication Method</sci:member>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^https?:&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Source Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Determines which method to use during authentication with an HTTP or HTTPS source.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
										<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
									</sci:arg>
									<sci:arg name="Source Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Source.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Source Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>The password used to authenticate with the Source server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Source Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The destination file path relative to the server machine.  This file may or may not exist before the copy operation.  If it does exist already, the existing file will be overwritten by the copied file. If it does not exist, then any necessary new intermediate folders are also created.

WebDav repository files such as for Microsoft Sharepoint servers (using http and https protocols) are supported as destinations for copying.  When copying to an http or https URL, you may optionally specify Authentication Options for the connection in the Authentication Options parameter group.</sci:help>
										<sci:member>Destination Authentication Options</sci:member>
										<sci:value>$(JobDir)\macro.txt</sci:value>
									</sci:arg>
									<sci:arg name="Destination Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For http and https destinations, you may optionally specify authentication information for the URL in the following parameters</sci:help>
										<sci:member>Destination Authentication Options Username</sci:member>
										<sci:member>Destination Authentication Options Password</sci:member>
										<sci:member>Destination Authentication Options Authentication Method</sci:member>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^https?:&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Destination Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Determines which method to use during authentication with an HTTP or HTTPS destination.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
										<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
									</sci:arg>
									<sci:arg name="Destination Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Destination.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Destination Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>The password used to authenticate with the Destination server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;To enable, set the Destination Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Destination Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Make Copy Writable" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Componet Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{38A20EDC-AAAA-42EF-97BA-D1B40B74FFE0}</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Copy File</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1530 -1170</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Copies a file and saves it to the specified location.  Can be used to retrieve files from HTTP or HTTPS servers and can also be used to upload files to HTTP WebDav repositories such as Sharepoint and other document repositories.</sci:value>
										<sci:value>&lt;p&gt;A copy of &lt;i&gt;Source&lt;/i&gt; is created and saved to &lt;i&gt;Destination&lt;/i&gt;. The original file is left in place.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;All file locations are relative to the server.&lt;/li&gt;
&lt;li&gt;You can copy to FTP, HTTP and HTTPS servers using this component and to WebDav document repositories such as Sharepoint or Apache WebDav.&lt;/li&gt;
&lt;li&gt;For HTTP and HTTPS servers, you can specify authentication options to control username and password information for the connection.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To copy a file from the client to the server, use &lt;a href=&quot;javascript:DoLink(&apos;{BBBC3189-A239-45BD-98A7-6FD3982D8282}&apos;)&quot;&gt;Copy to Server&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To copy a file from the server to the client, use &lt;a href=&quot;javascript:DoLink(&apos;{DC38B2F0-B8B1-4114-92F0-5EE15A9E969C}&apos;)&quot;&gt;Copy To Client&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To move a file, use &lt;a href=&quot;javascript:DoLink(&apos;{40A2ACDC-AABB-42EF-970A-D1340B748FE0}&apos;)&quot;&gt;Move File&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
 
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>5.0.0.103</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>%VERSION 3%</sci:value>
										<sci:value>1922 -1170 457 264</sci:value>
										<sci:value>255 255 0</sci:value>
										<sci:value>Added special property
&apos;Make Copy Writable&apos; so that read-only macros will be overwritten</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>13</sci:value>
									</sci:arg>
									<sci:arg name="Argument2" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>The destination file, relative to the server</sci:help>
										<sci:value>$(Destination)</sci:value>
									</sci:arg>
									<sci:arg name="Argument1" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>The source file, relative to the server</sci:help>
										<sci:value>$(Source)</sci:value>
									</sci:arg>
									<sci:arg name="Action" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Parameter Help</sci:help>
										<sci:value>CopyFile</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Feb 23 10:56:01 2010</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Copy File - Copy To JobDir</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\File Utilities\Copy File</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Subprotocol" version="2">
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
										<sci:value>StdOutput</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>25</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Run ImageJ</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>SUBPROTOCOLNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>954 -1545</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
										<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>None</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.48</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Make Shortcut by Default</sci:legalval>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Subprotocol" version="2">
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>25</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Convert to short</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>SUBPROTOCOLNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1242 -95</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
												<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.48</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
												<sci:value>%VERSION 3%</sci:value>
												<sci:value>98 -395 650 220</sci:value>
												<sci:value>255 255 0</sci:value>
												<sci:value>ImageJ converts 8-bit signed to unsigned image. Convert to short image before opening in ImageJ</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>OriginalImageTag := ImageTag;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Store ImageTag</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Imaging.ChangeBitDepth_Component.1">
												<sci:component name="Convert Pixel Type" version="2">
													<sci:arg name="Input Image Tag" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The input image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Input Image Test&lt;/i&gt; is used. If both are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.

&lt;p&gt;&lt;b&gt;Input and Output Image Type&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Input Type: Any non-color image &lt;/p&gt;
&lt;p&gt;Output Type: User selected non-color image type &lt;/p&gt;
</sci:help>
														<sci:member>Input Image Test</sci:member>
													</sci:arg>
													<sci:arg name="Input Image Test" type="ExpressionType" required="false" visibility="visible" multi="false">
														<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired input image property list. &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Input Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.</sci:help>
														<sci:enabledscript>setDisabledDetails(&quot;Input Image Tag is set.&quot;);

parameter(&apos;Input Image Tag&apos;) eq &apos;&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Pixel Type" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Output image pixel type.</sci:help>
														<sci:legalval>unsigned char</sci:legalval>
														<sci:legalval>char</sci:legalval>
														<sci:legalval>unsigned short</sci:legalval>
														<sci:legalval selected="true">short</sci:legalval>
														<sci:legalval>int</sci:legalval>
														<sci:legalval>float</sci:legalval>
													</sci:arg>
													<sci:arg name="Output Image Tag" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>String value to place in &lt;i&gt;ImageTag&lt;/i&gt; property of images read by this component. Value is also appended to the &lt;i&gt;ImageHistory&lt;/i&gt; property.

&lt;p&gt;&lt;b&gt;Input and Output Image Type&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Input Type: Any non-color image &lt;/p&gt;
&lt;p&gt;Output Type: User selected non-color image type &lt;/p&gt;
</sci:help>
														<sci:value>ConvertPixelType</sci:value>
													</sci:arg>
													<sci:arg name="Output Behavior" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>Determines whether the operation is performed in place or a new output image is created to hold the results of the operation.
</sci:help>
														<sci:member>Properties To Copy</sci:member>
														<sci:legalval selected="true">Overwrite Input Image</sci:legalval>
														<sci:legalval>Create Sibling Image</sci:legalval>
													</sci:arg>
													<sci:arg name="Properties To Copy" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies which properties to copy from the input image to the output image. Use &amp;quot;All&amp;quot; to replicate the entire list, &amp;quot;None&amp;quot;, or &amp;quot;From List&amp;quot; to specify the parameters to copy from the nested &lt;i&gt;List&lt;/i&gt; parameter.</sci:help>
														<sci:member>Properties To Copy List</sci:member>
														<sci:member>Properties To Copy Prefix</sci:member>
														<sci:enabledscript>parameter(&apos;Output Behavior&apos;) eq &apos;Create Sibling Image&apos;</sci:enabledscript>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>All</sci:legalval>
														<sci:legalval>From List</sci:legalval>
													</sci:arg>
													<sci:arg name="Properties To Copy Prefix" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A string to prefix the properties specified for copying.</sci:help>
														<sci:enabledscript>parameter(&apos;Properties To Copy&apos;) ne &apos;None&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Properties To Copy List" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Comma separated list of properties to copy to the output image.</sci:help>
														<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
														<sci:enabledscript>parameter(&apos;Properties To Copy&apos;) eq &apos;From List&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Implementation" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:legalval selected="true">IPP</sci:legalval>
														<sci:legalval>ITK</sci:legalval>
													</sci:arg>
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/imaging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Mar 12 21:30:01 2010</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{ED6FFE1D-D8DB-4bf8-BA73-68CA3583AE08}</sci:value>
													</sci:arg>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>PassDataToPort</sci:value>
													</sci:arg>
													<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>the port to pass data to</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Convert Pixel Type</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Changes the pixel data type of an image.</sci:value>
														<sci:value>&lt;p&gt;
Transforms the input image into pixels of type &lt;i&gt;Pixel Type&lt;/i&gt;. When increasing the size of integral pixel types, zeros are appended. When decreasing the size of integral pixel types, the least significant bits are rounded and the most significant bits are kept. When converting from a floating type to an integral type, data is rounded to the nearest integer.
&lt;/p&gt;
&lt;p&gt;
When converting to a pixel type with a value range smaller than the original type, intensity values are not scaled, ie. a large proportion of pixels will have intensity values that represent that maximum/minimum of the new pixel type. Use the &lt;a href=&quot;javascript:DoLink(&apos;{804DD5BA-DE55-49ec-97D4-7D02435826A0}&apos;)&quot;&gt;Rescale Image Intensities&lt;/a&gt; component to prepare the image for type conversion.&lt;/p&gt;
&lt;p&gt;The image to be analyzed is specified by either &lt;i&gt;Input Image Tag&lt;/i&gt; or &lt;i&gt;Input Image Test&lt;/i&gt;. If no image is specified, the first image on the data record is used.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Output Image Tag&lt;/i&gt; specifies the ImageTag property value for the output image.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Output Behavior&lt;/i&gt; specifies whether the input image should be overwritten or if a sibling image should be appended to the data record.&lt;p&gt;

&lt;p&gt;&lt;b&gt;Input and Output Image Type&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Input Type: Any non-color image &lt;/p&gt;
&lt;p&gt;Output Type: User selected non-color image type &lt;/p&gt;



</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Input image group.</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Output image group.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.18</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Components\Imaging\Utilities\Convert Pixel Type</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>ImageTag := OriginalImageTag;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Restore ImageTag</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:connectid from="0" to="3" type="true"/>
											<sci:connectid from="3" to="2" type="true"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.UnpackChildren.1">
										<sci:component name="Unpack Children" version="2">
											<sci:arg name="Location To Unpack" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>The location of a node in the hierarchy; the children of this node will be unpacked, and
passed out the Pass port, annotated with properties PackId and Location. The remaining parts of the data record 
will be passed out the Fail port, annotated with PackId.</sci:help>
												<sci:value>/*/</sci:value>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="What to Output" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>Whether to output the parent structure or the children</sci:help>
												<sci:legalval>Parent</sci:legalval>
												<sci:legalval selected="true">Children</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Fri Nov 19 09:32:47 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Unpack Children</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ComponentNode</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{ACCDEEEF-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Unpacks the children beneath a specified location in the hierarchy into individual nodes</sci:value>
												<sci:value>This component unpacks the children (if any) underneath the specified node and returns them through the Pass port.  If the location is not found, the data record is passed unchanged through the Fail port.

The property &lt;I&gt;PackId&lt;/I&gt; will be defined on the children.  It will contain a number that is the sequence number of the original incoming data record.  (If &lt;i&gt;PackId&lt;/i&gt; is already defined on the incoming data record, then the current sequence number will be added as another element in the &lt;i&gt;PackId&lt;/i&gt; array.  This is useful in multiple unpack/repack steps.)

The property &lt;I&gt;Location&lt;/I&gt; will be defined on the children, and will contain the location in the original record where it was detached from. (If &lt;i&gt;Location&lt;/i&gt; is already defined, then the current location will be added as another element in the &lt;i&gt;Location&lt;/i&gt; array.  This is useful in multiple unpack/repack steps.)

These annotations give the information needed to repack the children back onto a copy of the parent (which can be gotten using a Delete Children component with the same location, in parallel).

See also &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{FEFEAAAA-1ED7-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Pack Children&lt;/a&gt;.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value>Hierarchical data records</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value>Data records containing the children nodes</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value>The remaining data record after removing the children</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.5.2.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Data Tree Manipulators\Deprecated\Unpack Children</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>#pass := false;
#numTags := numvalues(globalproperty(&apos;Input Image Tags&apos;));
if (ImageTag is defined and #numTags &gt; 0) then
	if (contains(globalproperty(&apos;Input Image Tags&apos;), ToUpper(ImageTag))) then
		#pass := true;
	end if;
end if;
#pass

</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Opened in ImageJ?</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>PixelType eq &apos;char&apos;
</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Is char image?</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.Imaging.ImageRecordWriter_Component.1">
										<sci:component name="Image Record Writer" version="2">
											<sci:arg name="Input Image Tag" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>The input image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Input Image Test&lt;/i&gt; is used. If both are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.
&lt;p&gt;All image types are supported. &lt;/p&gt;
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format in &apos;Image Type&apos; parameter. &lt;/p&gt;</sci:help>
												<sci:member>Input Image Test</sci:member>
												<sci:value>ImageToWrite</sci:value>
											</sci:arg>
											<sci:arg name="Input Image Test" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired input image. &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Input Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.</sci:help>
												<sci:enabledscript>setDisabledDetails(&quot;Input Image Tag is set.&quot;);
parameter(&apos;Input Image Tag&apos;) eq &apos;&apos;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Transparency Mask Image Tag" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;
If specified, this mask image is used to provide an alpha plane for PNG output.
&lt;p/&gt;
The transparency mask image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Transparency Mask Image Test&lt;/i&gt; is used. If both are empty, then there is no transparency plane applied to the written image.
&lt;/p&gt;</sci:help>
												<sci:member>Transparency Mask Image Test</sci:member>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Image Type to &quot;png&quot;&apos;);
	Parameter(&apos;Image Type&apos;) eq &apos;PNG&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Transparency Mask Image Test" type="ExpressionType" required="false" visibility="visible" multi="false">
												<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired transparency mask image.  &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Transparency Mask Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then no transparency mask is applied for the written image.</sci:help>
												<sci:enabledscript>setDisabledDetails(&quot;Transparency Mask Image Tag is set.&quot;);
parameter(&apos;Transparency Mask Image Tag&apos;) eq &apos;&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Destination Directory" type="DirectoryType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:help>The destination directory to contain image files.</sci:help>
												<sci:value>$(TempDir)</sci:value>
											</sci:arg>
											<sci:arg name="Filename" type="ExpressionType" required="true" visibility="visible" multi="false">
												<sci:help>Pilotscript expression to construct the image filenames.</sci:help>
												<sci:value>filename</sci:value>
											</sci:arg>
											<sci:arg name="Image Type" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:help>Standard image types and raw type. If raw type is selected, the simple byte stream is saved to a binary file.
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format.&lt;/p&gt;
&lt;p&gt;NOTE: the raw format currently supports 2-d monochrome single plane images only - raw output of color images and other multi-plane images is not supported.&lt;/p&gt;</sci:help>
												<sci:legalval>bmp</sci:legalval>
												<sci:legalval selected="true">tif</sci:legalval>
												<sci:legalval>png</sci:legalval>
												<sci:legalval>jpg</sci:legalval>
												<sci:legalval>raw</sci:legalval>
											</sci:arg>
											<sci:arg name="Output Image Tag" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>String value to place in &lt;i&gt;ImageTag&lt;/i&gt; property of images read by this component. Value is also appended to the &lt;i&gt;ImageHistory&lt;/i&gt; property.</sci:help>
												<sci:value>ImageRecordWriter</sci:value>
											</sci:arg>
											<sci:arg name="Implementation" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="true">
												<sci:legalval selected="true">IPP</sci:legalval>
												<sci:legalval>ITK</sci:legalval>
											</sci:arg>
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DOCUMENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/imaging</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Nov 12 15:21:10 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Image Record Writer</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{B5BFA33F-9530-4459-AED1-4F6365EB2FAE}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1818 -470</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>For each data record, writes one image to a file</sci:value>
												<sci:value>&lt;p&gt;The image to be written is specified by either &lt;i&gt;Input Image Tag&lt;/i&gt; or &lt;i&gt;Input Image Test&lt;/i&gt;. If no image is specified, the first image on the data record is written to the file.&lt;p&gt;

&lt;p&gt;The directory path of the output file is specified in &lt;i&gt;Destination Directory&lt;/i&gt;, the file name is specified in &lt;i&gt;Filename&lt;/i&gt;, and the file type is specified in &lt;i&gt;Image Type&lt;/i&gt;. 
&lt;/p&gt;
&lt;p&gt;All image types are supported. &lt;/p&gt;
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format in &lt;i&gt;Image Type&lt;/i&gt; parameter. &lt;/p&gt;
&lt;p&gt;NOTE: the raw format currently supports 2-d monochrome single plane images only - raw output of color images and other multi-plane images is not supported.&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Group node containing child image node to be written to disk.</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Group nodes containing images successfully written.</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Group nodes containing images that failed to be written.</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.5.1.7</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Imaging\Writers\Image Record Writer</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>#currentImageTag := ImageTag;
filename := #currentImageTag;
ImageTag := &apos;ImageToWrite&apos;;

if (PixelType eq &apos;float&apos; or PixelType eq &apos;int&apos; or PixelType eq &apos;short&apos; or PixelType eq &apos;char&apos;) then
    /*if (PixelType not eq &apos;color&apos;) then send to client as raw */
	#ext := &apos;raw&apos;;
	WriteAsTif := false;
else
	/* for unsigned char, unsigned short and color images*/
	#ext := &apos;tif&apos;;
	WriteAsTif := true;
end if;

serverFilePath := @TempDir;
#serverTempFile := serverFilePath.&apos;/&apos;.filename.&apos;.&apos;.#ext;

if (@SvrTempFiles not eq &apos;&apos;) then
	@SvrTempFiles := @SvrTempFiles.&apos;,&apos;.#serverTempFile;
else
	@SvrTempFiles := #serverTempFile;
end if;

if (@ImageJViewerArgs not eq &apos;&apos;) then
	@ImageJViewerArgs := @ImageJViewerArgs.&apos;,&apos;.#serverTempFile;
else 
	@ImageJViewerArgs := #serverTempFile;
end if;



</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1242 -645</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>5</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>WriteAsTif</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Write as tif?</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1530 -645</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>6</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.Imaging.ImageRecordWriter_Component.1">
										<sci:component name="Image Record Writer" version="2">
											<sci:arg name="Input Image Tag" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>The input image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Input Image Test&lt;/i&gt; is used. If both are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.
&lt;p&gt;All image types are supported. &lt;/p&gt;
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format in &apos;Image Type&apos; parameter. &lt;/p&gt;</sci:help>
												<sci:member>Input Image Test</sci:member>
												<sci:value>ImageToWrite</sci:value>
											</sci:arg>
											<sci:arg name="Input Image Test" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired input image. &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Input Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.</sci:help>
												<sci:enabledscript>setDisabledDetails(&quot;Input Image Tag is set.&quot;);
parameter(&apos;Input Image Tag&apos;) eq &apos;&apos;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Transparency Mask Image Tag" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;
If specified, this mask image is used to provide an alpha plane for PNG output.
&lt;p/&gt;
The transparency mask image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Transparency Mask Image Test&lt;/i&gt; is used. If both are empty, then there is no transparency plane applied to the written image.
&lt;/p&gt;</sci:help>
												<sci:member>Transparency Mask Image Test</sci:member>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Image Type to &quot;png&quot;&apos;);
	Parameter(&apos;Image Type&apos;) eq &apos;PNG&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Transparency Mask Image Test" type="ExpressionType" required="false" visibility="visible" multi="false">
												<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired transparency mask image.  &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Transparency Mask Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then no transparency mask is applied for the written image.</sci:help>
												<sci:enabledscript>setDisabledDetails(&quot;Transparency Mask Image Tag is set.&quot;);
parameter(&apos;Transparency Mask Image Tag&apos;) eq &apos;&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Destination Directory" type="DirectoryType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:help>The destination directory to contain image files.</sci:help>
												<sci:value>$(TempDir)</sci:value>
											</sci:arg>
											<sci:arg name="Filename" type="ExpressionType" required="true" visibility="visible" multi="false">
												<sci:help>Pilotscript expression to construct the image filenames.</sci:help>
												<sci:value>filename</sci:value>
											</sci:arg>
											<sci:arg name="Image Type" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:help>Standard image types and raw type. If raw type is selected, the simple byte stream is saved to a binary file.
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format.&lt;/p&gt;
&lt;p&gt;NOTE: the raw format currently supports 2-d monochrome single plane images only - raw output of color images and other multi-plane images is not supported.&lt;/p&gt;</sci:help>
												<sci:legalval>bmp</sci:legalval>
												<sci:legalval>tif</sci:legalval>
												<sci:legalval>png</sci:legalval>
												<sci:legalval>jpg</sci:legalval>
												<sci:legalval selected="true">raw</sci:legalval>
											</sci:arg>
											<sci:arg name="Output Image Tag" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>String value to place in &lt;i&gt;ImageTag&lt;/i&gt; property of images read by this component. Value is also appended to the &lt;i&gt;ImageHistory&lt;/i&gt; property.</sci:help>
												<sci:value>ImageRecordWriter</sci:value>
											</sci:arg>
											<sci:arg name="Implementation" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="true">
												<sci:legalval selected="true">IPP</sci:legalval>
												<sci:legalval>ITK</sci:legalval>
											</sci:arg>
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DOCUMENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/imaging</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Nov 12 15:21:10 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Image Record Writer</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{B5BFA33F-9530-4459-AED1-4F6365EB2FAE}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1818 -820</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>For each data record, writes one image to a file</sci:value>
												<sci:value>&lt;p&gt;The image to be written is specified by either &lt;i&gt;Input Image Tag&lt;/i&gt; or &lt;i&gt;Input Image Test&lt;/i&gt;. If no image is specified, the first image on the data record is written to the file.&lt;p&gt;

&lt;p&gt;The directory path of the output file is specified in &lt;i&gt;Destination Directory&lt;/i&gt;, the file name is specified in &lt;i&gt;Filename&lt;/i&gt;, and the file type is specified in &lt;i&gt;Image Type&lt;/i&gt;. 
&lt;/p&gt;
&lt;p&gt;All image types are supported. &lt;/p&gt;
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format in &lt;i&gt;Image Type&lt;/i&gt; parameter. &lt;/p&gt;
&lt;p&gt;NOTE: the raw format currently supports 2-d monochrome single plane images only - raw output of color images and other multi-plane images is not supported.&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Group node containing child image node to be written to disk.</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Group nodes containing images successfully written.</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Group nodes containing images that failed to be written.</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.5.1.7</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>7</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Imaging\Writers\Image Record Writer</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@SvrTempFiles := &apos;&apos;;
@ImageJViewerArgs := &apos;&apos;;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Initialize Globals</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -1170</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Subprotocol" version="2">
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>25</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Run subprotocol on grid engine if available.</sci:help>
												<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
												<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Run ImageJ</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>SUBPROTOCOLNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -1170</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
												<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.48</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>9</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>haltprotocol();</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2082 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>19</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.RunProgram.1">
												<sci:component name="Run Program (on Server)" version="2">
													<sci:arg name="CommandLine" type="LinkDataPropertyType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:metaproplist>
															<sci:propval name="SCI_InitializeUsingRevertInfo" ishidden="true" base64="UI1">Al1HAAFHQ29tbWFuZCBsaW5lIGZvciBhcHBsaWNhdGlvbiBvciBmaWxlIHRvIGV4ZWN1dGUgb24gdGhlIHNlcnZlciBtYWNoaW5lLiRUZXh0VHlwZQAMAAAAAQEAAAEcVGhpcyBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQuBAD8AAAAAAAAAAAAMENvbW1hbmRMaW5lA8xTz7sEAA==</sci:propval>
															<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">TextType</sci:propval>
															<sci:propval name="SCI_EvalOnInit" ishidden="true" boolVal="true"/>
															<sci:propval name="SCI_EvalOnInitType" ishidden="true">TextType</sci:propval>
														</sci:metaproplist>
														<sci:help>Command line for application or file to execute on the server machine.</sci:help>
														<sci:value>local_ImageJ_command_line</sci:value>
													</sci:arg>
													<sci:arg name="Result Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Parameters for assigning results to properties.</sci:help>
														<sci:member>PropertyForExitStatus</sci:member>
														<sci:member>StderrProperty</sci:member>
														<sci:member>StdoutProperty</sci:member>
														<sci:member>StdinProperty</sci:member>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="StdinProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Defines the property name that holds the desired value of the program&apos;s standard input (stdin). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="StdoutProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Defines the property name that will hold the program&apos;s standard output (stdout). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
														<sci:value>StdOutput</sci:value>
													</sci:arg>
													<sci:arg name="StderrProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Defines the property name that will hold the program&apos;s standard error (stderr). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
														<sci:value>StdError</sci:value>
													</sci:arg>
													<sci:arg name="PropertyForExitStatus" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Defines the property name to hold the value of the program exit status code. Denote a global property with a leading @ character.
Note that this property can only be defined if WaitForExit is set to True.</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
														<sci:value>StdExit_Status_RC</sci:value>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>UseCommandInterpreter</sci:member>
														<sci:member>Environment</sci:member>
														<sci:member>WaitForExit</sci:member>
														<sci:member>Evaluate Parameters for Each Record</sci:member>
													</sci:arg>
													<sci:arg name="WaitForExit" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether or not to wait for the program to finish before returning from the process call.  This parameter must be set to True for StdinProperty, StdoutProperty, StderrProperty, or PropertyForExitStatus to function.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Environment" type="TextType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &lt;br&gt;&lt;samp&gt;variable=name&lt;/samp&gt;&lt;p/&gt;
The spawned process will inherit the existing environment of the protocol job process, and any settings here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. to prepend, use something like&lt;br/&gt; &lt;samp&gt;PATH=c:\mydir;%PATH%&lt;/samp&gt;&lt;p/&gt;
Note that this syntax should be used with both Windows and Linux servers.  Due to OS designs, environment variables are case insensitive on Windows servers and case sensitive on Linux servers.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="UseCommandInterpreter" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether or not to add &quot;cmd.exe /c&quot; (or &quot;/bin/sh -c&quot; on Linux servers) to the command line.  This causes the command line to be interpreted through the operating systems standard command shell allowing the use of redirection specifiers such as &apos;&amp;gt;&apos; and &apos;&amp;lt;&apos; and piping via &apos;|&apos;.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Evaluate Parameters for Each Record" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;
Set this parameter to True if the component has an input port and you need to re-evaluate the values of the other parameters for each record that is passed into the component.&lt;p/&gt;
This allows you to set a different command line for each record. You can do this by using a global property token in the command line.&lt;br/&gt;
Example (where &lt;samp&gt;dataname&lt;/samp&gt; is a global property):&lt;br/&gt;
&lt;samp&gt;/home/goober/bin/calibrate $(dataname)&lt;/samp&gt;
&lt;p&gt;
If you change the parameter type of the CommandLine parameter to be an Expression, you can define an expression that includes values of data properties on each incoming record.&lt;br/&gt;
Example (where &lt;samp&gt;dataset_id&lt;/samp&gt; and &lt;samp&gt;limit&lt;/samp&gt; are data record properties):&lt;br/&gt;
&lt;samp&gt;&apos;/home/goober/bin/calibrate &apos;.dataset_id.&apos; -max &apos;.limit&lt;/samp&gt;
&lt;/p&gt;</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Componet Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/integration</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Apr 03 17:17:22 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{1479A29D-F184-4979-BF60-2AA823D48831}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Run Program (on Server)</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Run Program</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2370 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Runs a command line application on the server machine.</sci:value>
														<sci:value>&lt;p&gt;Define the command line by entering text as you would in a command prompt window.  On Windows servers, the component includes facilities for looking up a program name in the Windows registry. It can interpret a program name as a ProgID, such as &quot;InternetExplorer.Application&quot;, or as a shell command, such as &quot;IsisServer&quot;, or as a document to load into an associated program, such as &quot;c:\spreadsheet.xls&quot;.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;CommandLine&lt;/i&gt;: The command that the component will run. The correct syntax is the full command line exactly as you would type it in a shell command window. On Windows servers, the first space- or quote-delimited item of the command line can be a ProgId, such as &quot;InternetExplorer.Application&quot;.  This starts up Internet Explorer (IE) without having to specify the path to IE explicitly. Shell command associations are also supported, so &quot;IsisServer&quot; will start Isis Draw. Finally, there is support for file associations, so the path &quot;D:\docs\notes.doc&quot; will start Microsoft Word and load the specified document.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;WaitForExit&lt;/i&gt;: When TRUE, the data pipeline is blocked until the command has completed.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;PropertyForExitStatus&lt;/i&gt;: Allows you to assign the exit status of the command to a global property or to a data record property. Use either a global or local property reference, such as @status or status.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;UseCommandInterpreter&lt;/i&gt;: When True, parses the command line through the command interpreter on the remote server (with a shell such as csh or bash on Linux servers or the interpreter cmd.exe on Windows servers). In particular, this needs to be set to True if the CommandLine utilizes standard output or input (such as cmd.exe /c &amp;quot;c:\Program Files\R\rterm.exe&amp;quot; &amp;quot;0&amp;lt;$(CommandFile)&amp;quot;).&lt;/p&gt;
&lt;p&gt;&lt;i&gt;StdinProperty, StdoutProperty, and StderrProperty&lt;/i&gt;: Allows you to redirect standard communications to global properties or to data record properties. Use either a global or local property reference, such as @stdin or stdin.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Environment&lt;/i&gt;: Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the PipelinePilot process, and any settings defined here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;).  Due to differences in the operating systems, these variables are case insensitive on Windows servers, but case sensitive on Linux servers.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt; If your command line includes a file path, create a new parameter for the component, of type URL, so the user can enter the path. Then use a token replacement in the CommandLine to pick up the value. For example: Notepad.exe &quot;$(SciTegicRoot)\$(Path)&quot;. &lt;/li&gt;
&lt;li&gt;When the component is separated from any other pipeline, the command line is run just once.&lt;/li&gt; 
&lt;li&gt;You can add an input or output pass port to the component, to integrate it with a pipeline. If there is an output port, but no input port, the command is run once and a single new record is generated. If there is an input port, then the command is run once for each data record passed in.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/integration_command_line.pdf&apos;)&quot;&gt;
Command-line Integration Guide&lt;/a&gt;&lt;/p&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>%VERSION 3%</sci:value>
														<sci:value>2858 -470 444 134</sci:value>
														<sci:value>255 255 0</sci:value>
														<sci:value>NEW style -- Win64</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.14</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>20</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Database and Application Integration\Application Integration\Command Line\Run Program (on Server)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@StdOutput := StdOutput;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2658 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>15</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Conditional ImageJ Debug Viewer (v2)" version="2">
													<sci:arg name="Force Always Show" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
														<sci:metaproplist>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Force Always Show</sci:value>
																<sci:value>Force Always Show</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>Force Always Show</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Debug Level Min in Property" type="LongType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Debug Level Min in Property</sci:value>
																<sci:value>Debug Level Min in Property</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>Debug Level Min in Property</sci:help>
														<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Property Name Containing Debug Level" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Property Name Containing Debug Level</sci:value>
																<sci:value>Property Name Containing Debug Level</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>Property Name Containing Debug Level</sci:help>
														<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
														<sci:value>g_param_Enable_Debug_Checks_and_Messages</sci:value>
													</sci:arg>
													<sci:arg name="Viewer Settings" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Viewer Settings</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:member>Initial Expansion Level</sci:member>
														<sci:member>Additional Options</sci:member>
													</sci:arg>
													<sci:arg name="Initial Expansion Level" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Initial Expansion Level</sci:value>
																<sci:value>Initial Expansion Level</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>This is the number of levels that will be in an expanded state when the window initially opens. Levels of any higher order than this are initially collapsed. 
  Note that this number can be changed in the viewer itself to affect subsequent appearances of the viewer.</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Additional Options</sci:value>
																<sci:value>Additional Options</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>Preserve White Space</sci:member>
														<sci:member>Array Value Layout</sci:member>
														<sci:member>Draw Sibling Bar</sci:member>
														<sci:member>Show Property Types</sci:member>
														<sci:member>Show Metadata</sci:member>
														<sci:member>Title</sci:member>
														<sci:member>Usage Mode</sci:member>
														<sci:member>Image Size</sci:member>
														<sci:member>Sort Properties</sci:member>
													</sci:arg>
													<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Title</sci:value>
																<sci:value>Title</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>&lt;p&gt;
Text for the title bar of the viewer.
&lt;p/&gt;
A title can be useful to help distinguish different instances of the viewer in a protocol.
&lt;/p&gt;</sci:help>
														<sci:value>02 RunContext -- OnServer [Macro] After &apos;Run ImageJ&apos; -- Debug (NonProduction) Viewer</sci:value>
													</sci:arg>
													<sci:arg name="Sort Properties" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Sort Properties</sci:value>
																<sci:value>Sort Properties</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>When set to True, properties at each node level will be sorted for display only. Otherwise, properties are shown in the order which they were added.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Preserve White Space" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Preserve White Space</sci:value>
																<sci:value>Preserve White Space</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>If set to True, the property values are displayed in a fixed-width font and all spaces and new lines are maintained. This can be useful for viewing highly structured property text values.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Array Value Layout" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Array Value Layout</sci:value>
																<sci:value>Array Value Layout</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>The orientation for the display of array properties. The Vertical orientation displays the item values in a vertical list. The Horizontal orientation saves vertical space by displaying the array items in a single comma-separated line of text.</sci:help>
														<sci:legalval>Horizontal</sci:legalval>
														<sci:legalval selected="true">Vertical</sci:legalval>
													</sci:arg>
													<sci:arg name="Show Property Types" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Show Property Types</sci:value>
																<sci:value>Show Property Types</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>When set to true, there is a tooltip that displays the data type of a property when the mouse hovers over its name.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Show Metadata" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Show Metadata</sci:value>
																<sci:value>Show Metadata</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>Set to True to include property metadata values in the tree display.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Draw Sibling Bar" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Draw Sibling Bar</sci:value>
																<sci:value>Draw Sibling Bar</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>When set to true, a vertical bar is drawn for each node child group within the hierarchy to aid the visual organization of a complex or deep data set.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Image Size" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Image Size</sci:value>
																<sci:value>Image Size</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>The width and height of the square images displayed for some node types within the viewer.</sci:help>
														<sci:value>150</sci:value>
													</sci:arg>
													<sci:arg name="Usage Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Usage Mode</sci:value>
																<sci:value>Usage Mode</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>The way in which this component is being used. As a Summary viewer, data
records are stored up and all displayed in one viewer. In the Inline mode, data records are displayed one at a time.</sci:help>
														<sci:member>Show When</sci:member>
														<sci:member>Maximum</sci:member>
														<sci:legalval selected="true">Inline</sci:legalval>
														<sci:legalval>Summary</sci:legalval>
													</sci:arg>
													<sci:arg name="Maximum" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Maximum</sci:value>
																<sci:value>Maximum</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>The number of records to display in Summary usage mode.</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Usage Mode to &quot;Summary&quot;&apos;);
	Parameter(&apos;Usage Mode&apos;) eq &apos;Summary&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Show When" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Show When</sci:value>
																<sci:value>Show When</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>&lt;p&gt;
The component will only display records for which the specified PilotScript expression evaluates to True. The default is to leave the condition blank, which means all data records will be displayed.
&lt;p/&gt;
Note that this conditional expression can be edited in the viewer itself to affect when the viewer will appear again.
&lt;p/&gt;
 There is an internal record counter value defined by this viewer, named @recordnum, which may be used in the expression. @recordnum starts counting at 1 for the first record. For example, to show the viewer every 1000 records, use the expression:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;samp&gt;@recordnum%1000=0;&lt;/samp&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other examples:&lt;/p&gt;
&lt;li&gt;&lt;samp&gt;newval = oldval - 3;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;logp &amp;gt; 10.0 ;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;rmatch(team, &apos;chi*&apos;,&apos;i&apos;) AND Pos = 1;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;@recordnum &amp;lt;= 10&lt;/samp&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Usage Mode to &quot;Inline&quot;&apos;);
	Parameter(&apos;Usage Mode&apos;) eq &apos;Inline&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
														<sci:member>RunToCompletion Categorize Using</sci:member>
														<sci:legalval selected="true">False</sci:legalval>
														<sci:legalval>True - For Each Data Record</sci:legalval>
														<sci:legalval>True - For Each Category</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
														<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
														<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Run subprotocol on grid engine if available.</sci:help>
														<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
														<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval selected="true">Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval selected="true">Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Conditional ImageJ Debug Viewer (v2)</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>SUBPROTOCOLNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>790</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C20585F7-14D3-4284-957B-450CBD9717ED}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2994 -95</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Conditional ImageJ Debug Viewer (v2)</sci:value>
														<sci:value>
&lt;br&gt;
&lt;strong&gt;Note to Customers:  &lt;/strong&gt;
&lt;p&gt;This is an &apos;internals&apos; component and is NOT intended for direct customer use.&lt;/p&gt;

&lt;p&gt;Please contact support if you have any questions or would like further information.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;This is an &lt;strong&gt;internal component&lt;/strong&gt; and is not meant for direct external use.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; this component could change or go away in a future release.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>16.1.0.1209</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/imaging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 03 22:30:20 2016</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>25</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Imaging\Utilities\Internals\ImageJ\Conditional ImageJ Debug Viewer (v2)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>/*Throw error if anything wrong happens -- StdError should always exist on data-record */
if ( (StdError is not defined) or (StdError not eq &apos;&apos;) ) then
	#New_StdError_String_PrePend := &quot;Error from ImageJ runtime.  Error returned is &lt;&quot; . StdError . &quot;&gt;&quot;;
	Error(#New_StdError_String_PrePend);
end if;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>If (StdError) then ERROR()</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>3282 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>17</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Expand token replacement (v2)" version="2">
													<sci:arg name="Expand_Token_Rep_Glob" type="TextType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>For &apos;Global&apos; token replacement for text containing $(VarName) globals.</sci:help>
														<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
														<sci:value>&quot;$(imageJInstallPath_g)jre\bin\javaw&quot; -cp &quot;$(ImageJ_JAR_FullPath_on_Server_g)&quot;;&quot;$(JobDir)/ImageJViewer.jar&quot; com.scitegic.imaging.ij.ImageJViewer -plugin &quot;$(PluginPath)&quot; -batch &quot;$(JobDir)\macro.txt&quot; &quot;$(ImageJViewerArgs)&quot;</sci:value>
													</sci:arg>
													<sci:arg name="Property Name for Expanded Token Replaced String" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Property Name for Expanded Token Replaced String</sci:help>
														<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
														<sci:value>local_OLD_Pre2017_ImageJ_OnClient_NO_Macro_command_line_DONT_USE_Debugging_Only</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
														<sci:member>RunToCompletion Categorize Using</sci:member>
														<sci:legalval>False</sci:legalval>
														<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
														<sci:legalval>True - For Each Category</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
														<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
														<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Run subprotocol on grid engine if available.</sci:help>
														<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
														<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Expand token replacement (v2)</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>SUBPROTOCOLNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>790</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{50E5160D-68FD-4FCF-9733-EA02DDDC3A29}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -295</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Expand token replacement (v2)</sci:value>
														<sci:value>&lt;br&gt;
&lt;strong&gt;Note to Customers:  &lt;/strong&gt;
&lt;p&gt;This is an &apos;internals&apos; component and is NOT intended for direct customer use.&lt;/p&gt;

&lt;p&gt;Please contact support if you have any questions or would like further information.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;This is an &lt;strong&gt;internal component&lt;/strong&gt; and is not meant for direct external use.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; this component could change or go away in a future release.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>16.1.0.1209</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>%VERSION 3%</sci:value>
														<sci:value>1273 -820 532 177</sci:value>
														<sci:value>0 255 0</sci:value>
														<sci:value>Only used for traces.
 NO Runtime side-effects.</sci:value>
														<sci:value>362 -95 304 177</sci:value>
														<sci:value>255 255 0</sci:value>
														<sci:value>Server MUST 
have MACRO</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/imaging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 03 22:30:06 2016</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>9</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>OriginalPackage</sci:help>
														<sci:value>scitegic/coreutils</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Imaging\Utilities\Internals\ImageJ\Expand token replacement (v2)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Create ImageJ cmd-line (quoted) (v2)" version="2">
													<sci:arg name="OnServer or OnClient - ImageJ" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>OnServer or OnClient - ImageJ</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>OnServer or OnClient - ImageJ</sci:help>
														<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
														<sci:legalval selected="true">OnServer</sci:legalval>
														<sci:legalval>OnClient</sci:legalval>
													</sci:arg>
													<sci:arg name="Property Name for ImageJ Command Line" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Property Name for ImageJ Command Line</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>&lt;p&gt;Property Name for ImageJ Command Line&lt;/p&gt;
&lt;p&gt;This &lt;u&gt;&apos;output&apos; property is created&lt;/u&gt; or overwritten if it exists.&lt;/p&gt;
</sci:help>
														<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
														<sci:value>local_ImageJ_command_line</sci:value>
													</sci:arg>
													<sci:arg name="Not Used" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>not used at this point</sci:help>
														<sci:member>Property Name for Server Platfrom</sci:member>
														<sci:member>Has Macro</sci:member>
													</sci:arg>
													<sci:arg name="Property Name for Server Platfrom" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>&lt;p&gt;Property Name for Server Platfrom
&lt;/p&gt;

&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Values to Expect:&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Windows64&lt;/strong&gt;  **  Forced to &apos;Windows64&apos; if cant be determined&lt;/li&gt;
&lt;li&gt;Linux64 -- new support in 2017&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;</sci:help>
														<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
														<sci:value>kkk</sci:value>
													</sci:arg>
													<sci:arg name="Has Macro" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>Has Macro
&lt;br&gt;
&lt;p&gt;NOTE_01: OnServer MUST have a &quot;Macro&quot; and this must be set to &apos;TRUE&quot;.
&lt;p&gt;&lt;strong&gt;The Macro string must not be empty&lt;/strong&gt;, or else this is an runtime error.
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;
&lt;p&gt;NOTE_02: OnClient may or may-NOT have a &quot;Macro&quot;
&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
														<sci:member>RunToCompletion Categorize Using</sci:member>
														<sci:legalval selected="true">False</sci:legalval>
														<sci:legalval>True - For Each Data Record</sci:legalval>
														<sci:legalval>True - For Each Category</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
														<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
														<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Run subprotocol on grid engine if available.</sci:help>
														<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
														<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Shortcut Version" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Used to maintain backwards compatibility for older protocols with this shortcut component.</sci:help>
														<sci:legalval selected="true">3</sci:legalval>
														<sci:legalval>2</sci:legalval>
														<sci:legalval>1</sci:legalval>
													</sci:arg>
													<sci:arg name="VersionImaging" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>&lt;strong&gt;NOTE:&lt;/strong&gt; this parameter should not be changed.</sci:help>
														<sci:legalval selected="true">3</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Create ImageJ cmd-line (quoted) (v2)</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>SUBPROTOCOLNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>790</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{E892F31E-B1B1-4F72-B785-300A231908D8}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -295</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Create ImageJ cmd-line (quoted) (v2)</sci:value>
														<sci:value>&lt;br&gt;
&lt;strong&gt;Note to Customers:  &lt;/strong&gt;
&lt;p&gt;This is an &apos;internals&apos; component and is NOT intended for direct customer use.&lt;/p&gt;

&lt;p&gt;Please contact support if you have any questions or would like further information.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;This is an &lt;strong&gt;internal component&lt;/strong&gt; and is not meant for direct external use.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; this component could change or go away in a future release.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1580</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
														<sci:value>%VERSION 3%</sci:value>
														<sci:value>98 -470 617 220</sci:value>
														<sci:value>255 0 0</sci:value>
														<sci:value>Not using 
 interface parameters
-- assume global exist</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/imaging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Sep 07 14:31:48 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Imaging\Utilities\Internals\ImageJ\Create ImageJ cmd-line (quoted) (v2)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>ImageJ_PLP_Component_type := parameter(&apos;OnServer or OnClient - ImageJ&apos;);

//__NOTE: for the v5 version of &quot;ImageJ on Server&quot;, we use the global &apos;ImageJ_JAR_FullPath_on_Server_g&apos; 
//__NOTE2: for v4 version of &quot;ImageJ on Server&quot;, we use OLD global &apos;ImageJ Location&apos;
//__NOTE3:  So, if we find global &apos;ImageJ_JAR_FullPath_on_Server_g&apos; -- we use it.
#ImageJ_JAR_FullPath_on_Server_for_cmd_line := &quot;&quot;;
if( globalproperty(&quot;ImageJ_JAR_FullPath_on_Server_g&quot;) is defined  ) then
	#ImageJ_JAR_FullPath_on_Server_for_cmd_line := globalproperty(&quot;ImageJ_JAR_FullPath_on_Server_g&quot;);
elsif( globalproperty(&quot;ImageJ Location&quot;) is defined  ) then
	#ImageJ_JAR_FullPath_on_Server_for_cmd_line := globalproperty(&quot;ImageJ Location&quot;);
else
	error(&quot;Error: Failed to find property for &apos;ImageJ JAR&apos; full-path in globals.&quot;);
end if;

if ( (&apos;Windows64&apos; eq gsys_ServerOS) OR (&apos;OnClient&apos; eq %ImageJ_PLP_Component_type) )then
	//_Two Cases: OnServer(Win64)  OR  OnClient
	//   #1  -- we are OnServer and OS is Win64
	//   #2  -- we are OnClient and the code will run on Win64 AND we don&apos;t care about the Server side OS (Win64 or Linux64) 
	java_executable_name := &apos;javaw&apos;;
	ij_jar_to_custom_jar_sep_char := &apos;;&apos;;  //__Win uses (;) char
else
	//__Linux is slightly different 
	java_executable_name := &apos;java&apos;;
	ij_jar_to_custom_jar_sep_char := &apos;:&apos;; //__UNIX uses (:) char
end if;


if(&apos;OnClient&apos; eq %ImageJ_PLP_Component_type) then
	dirPath_OurPLPComponents_non_imagej_stuff := local_OnClient_OurPLPComponents_stuff_is_ClientRunDirectory;
	//__For OnClient the &apos;remote&apos; ClientDir is the &apos;JobDir&apos; -- the Macro and files all go in same place
	dirPath_OurPLPComponents_non_imagej_JobDir_stuff := dirPath_OurPLPComponents_non_imagej_stuff; 
else
	dirPath_OurPLPComponents_non_imagej_stuff := local_OnServer_OurPLPComponents_stuff_FilePath_is_TempDir;
	//__For OnServer, Only the MACRO goes in the &apos;JobDir&apos; -- the rest of the files go in &apos;tempDir&apos; so they get cleaned up AND don&apos;t show up in JOBS in proClient.
	dirPath_OurPLPComponents_non_imagej_JobDir_stuff := local_OnServer_OurPLPComponents_stuff_FilePath_is_JobDir; 
end if;

//_This &quot;Name&quot;is used for &apos;Output Property&apos; created
cmd_line_OutputPropertyName := parameter(&apos;Property Name for ImageJ Command Line&apos;);

//__For OnClient and No_Macro ; we don&apos;t (&quot;) quote the args --&gt; cmd_line_ij_file_args_optional_quote_char := &apos;&apos;;
if (true == local_macro_Exists ) then
	cmd_line_batch_option_for_Macro__Required_For_OnServer := &quot; -batch &quot; . &apos;&quot;&apos; . %dirPath_OurPLPComponents_non_imagej_JobDir_stuff . &quot;/macro.txt&quot; . &apos;&quot; &apos; ;
	cmd_line_ij_file_args_optional_quote_char := &apos;&quot;&apos;;
else 
	//__We have NO_MACRO -- we better be OnClient
	cmd_line_batch_option_for_Macro__Required_For_OnServer := &quot;&quot;;
	if(&apos;OnClient&apos; eq %ImageJ_PLP_Component_type) then
		cmd_line_ij_file_args_optional_quote_char := &apos;&apos;; //__Only for OnClient and NO_MACRO
	else
		local_FLAG_ERROR__We_have_NO_MACRO_OnServer := &quot;Flag_Error:  You must have a MACRO defined for OnServer.&quot;;
	end if;
end if;



property(%cmd_line_OutputPropertyName) :=    &apos;&quot;&apos; . @imageJInstallPath_g . &quot;jre/bin/&quot; . %java_executable_name . &apos;&quot;&apos; . &quot; -cp &quot; //__windows &apos;javaw&apos; and linux &apos;java&apos; -- javaws


					.  &apos;&quot;&apos; . #ImageJ_JAR_FullPath_on_Server_for_cmd_line . &apos;&quot;&apos;  //__path includes the &apos;ij.jar&apos; file --  we quote the entire path -- for spaces
					. %ij_jar_to_custom_jar_sep_char    //__Windows uses &apos;;&apos;  and Linux uses &apos;:&apos;
					.  &apos;&quot;&apos;  . %dirPath_OurPLPComponents_non_imagej_stuff . &quot;/ImageJViewer.jar&quot; . &apos;&quot;&apos; 
					.  &quot; com.scitegic.imaging.ij.ImageJViewer -plugin &quot; 
					.  &apos;&quot;&apos; . @&apos;PluginPath&apos; . &apos;&quot; &apos; 
					.	%cmd_line_batch_option_for_Macro__Required_For_OnServer 
					.   %cmd_line_ij_file_args_optional_quote_char . @&apos;ImageJViewerArgs&apos; . &apos; &apos; . %cmd_line_ij_file_args_optional_quote_char ; //__The Image Full-Paths -- The END of command-line


</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnServer or OnClient - ImageJ" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:metaproplist>
																	<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
																</sci:metaproplist>
																<sci:help>OnServer or OnClient - ImageJ</sci:help>
																<sci:value>OnServer or OnClient - ImageJ</sci:value>
															</sci:arg>
															<sci:arg name="Property Name for ImageJ Command Line" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:metaproplist>
																	<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
																</sci:metaproplist>
																<sci:help>&lt;p&gt;Property Name for ImageJ Command Line&lt;/p&gt;
&lt;p&gt;This &lt;u&gt;&apos;output&apos; property is created&lt;/u&gt; or overwritten if it exists.&lt;/p&gt;
</sci:help>
																<sci:value>Property Name for ImageJ Command Line</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Create ImageJ cmd-line (worker)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
																<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
																<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:version iVal="1"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Conditional ImageJ Debug Viewer (v2)" version="2">
													<sci:arg name="Force Always Show" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
														<sci:metaproplist>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Force Always Show</sci:value>
																<sci:value>Force Always Show</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>Force Always Show</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Debug Level Min in Property" type="LongType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Debug Level Min in Property</sci:value>
																<sci:value>Debug Level Min in Property</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>Debug Level Min in Property</sci:help>
														<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Property Name Containing Debug Level" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Property Name Containing Debug Level</sci:value>
																<sci:value>Property Name Containing Debug Level</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>Property Name Containing Debug Level</sci:help>
														<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
														<sci:value>g_param_Enable_Debug_Checks_and_Messages</sci:value>
													</sci:arg>
													<sci:arg name="Viewer Settings" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Viewer Settings</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:member>Initial Expansion Level</sci:member>
														<sci:member>Additional Options</sci:member>
													</sci:arg>
													<sci:arg name="Initial Expansion Level" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Initial Expansion Level</sci:value>
																<sci:value>Initial Expansion Level</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>This is the number of levels that will be in an expanded state when the window initially opens. Levels of any higher order than this are initially collapsed. 
  Note that this number can be changed in the viewer itself to affect subsequent appearances of the viewer.</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Additional Options</sci:value>
																<sci:value>Additional Options</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>Preserve White Space</sci:member>
														<sci:member>Array Value Layout</sci:member>
														<sci:member>Draw Sibling Bar</sci:member>
														<sci:member>Show Property Types</sci:member>
														<sci:member>Show Metadata</sci:member>
														<sci:member>Title</sci:member>
														<sci:member>Usage Mode</sci:member>
														<sci:member>Image Size</sci:member>
														<sci:member>Sort Properties</sci:member>
													</sci:arg>
													<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Title</sci:value>
																<sci:value>Title</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>&lt;p&gt;
Text for the title bar of the viewer.
&lt;p/&gt;
A title can be useful to help distinguish different instances of the viewer in a protocol.
&lt;/p&gt;</sci:help>
														<sci:value>01 RunContext -- OnServer [Macro] Before &apos;Run ImageJ&apos; -- Debug (NonProduction) Viewer</sci:value>
													</sci:arg>
													<sci:arg name="Sort Properties" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Sort Properties</sci:value>
																<sci:value>Sort Properties</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>When set to True, properties at each node level will be sorted for display only. Otherwise, properties are shown in the order which they were added.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Preserve White Space" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Preserve White Space</sci:value>
																<sci:value>Preserve White Space</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>If set to True, the property values are displayed in a fixed-width font and all spaces and new lines are maintained. This can be useful for viewing highly structured property text values.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Array Value Layout" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Array Value Layout</sci:value>
																<sci:value>Array Value Layout</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>The orientation for the display of array properties. The Vertical orientation displays the item values in a vertical list. The Horizontal orientation saves vertical space by displaying the array items in a single comma-separated line of text.</sci:help>
														<sci:legalval>Horizontal</sci:legalval>
														<sci:legalval selected="true">Vertical</sci:legalval>
													</sci:arg>
													<sci:arg name="Show Property Types" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Show Property Types</sci:value>
																<sci:value>Show Property Types</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>When set to true, there is a tooltip that displays the data type of a property when the mouse hovers over its name.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Show Metadata" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Show Metadata</sci:value>
																<sci:value>Show Metadata</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>Set to True to include property metadata values in the tree display.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Draw Sibling Bar" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Draw Sibling Bar</sci:value>
																<sci:value>Draw Sibling Bar</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>When set to true, a vertical bar is drawn for each node child group within the hierarchy to aid the visual organization of a complex or deep data set.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Image Size" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Image Size</sci:value>
																<sci:value>Image Size</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>The width and height of the square images displayed for some node types within the viewer.</sci:help>
														<sci:value>150</sci:value>
													</sci:arg>
													<sci:arg name="Usage Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Usage Mode</sci:value>
																<sci:value>Usage Mode</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>The way in which this component is being used. As a Summary viewer, data
records are stored up and all displayed in one viewer. In the Inline mode, data records are displayed one at a time.</sci:help>
														<sci:member>Show When</sci:member>
														<sci:member>Maximum</sci:member>
														<sci:legalval selected="true">Inline</sci:legalval>
														<sci:legalval>Summary</sci:legalval>
													</sci:arg>
													<sci:arg name="Maximum" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Maximum</sci:value>
																<sci:value>Maximum</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>The number of records to display in Summary usage mode.</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Usage Mode to &quot;Summary&quot;&apos;);
	Parameter(&apos;Usage Mode&apos;) eq &apos;Summary&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Show When" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Show When</sci:value>
																<sci:value>Show When</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>&lt;p&gt;
The component will only display records for which the specified PilotScript expression evaluates to True. The default is to leave the condition blank, which means all data records will be displayed.
&lt;p/&gt;
Note that this conditional expression can be edited in the viewer itself to affect when the viewer will appear again.
&lt;p/&gt;
 There is an internal record counter value defined by this viewer, named @recordnum, which may be used in the expression. @recordnum starts counting at 1 for the first record. For example, to show the viewer every 1000 records, use the expression:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;samp&gt;@recordnum%1000=0;&lt;/samp&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other examples:&lt;/p&gt;
&lt;li&gt;&lt;samp&gt;newval = oldval - 3;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;logp &amp;gt; 10.0 ;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;rmatch(team, &apos;chi*&apos;,&apos;i&apos;) AND Pos = 1;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;@recordnum &amp;lt;= 10&lt;/samp&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Usage Mode to &quot;Inline&quot;&apos;);
	Parameter(&apos;Usage Mode&apos;) eq &apos;Inline&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
														<sci:member>RunToCompletion Categorize Using</sci:member>
														<sci:legalval selected="true">False</sci:legalval>
														<sci:legalval>True - For Each Data Record</sci:legalval>
														<sci:legalval>True - For Each Category</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
														<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
														<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Run subprotocol on grid engine if available.</sci:help>
														<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
														<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval selected="true">Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval selected="true">Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Conditional ImageJ Debug Viewer (v2)</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>SUBPROTOCOLNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>790</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C20585F7-14D3-4284-957B-450CBD9717ED}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1506 -295</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Conditional ImageJ Debug Viewer (v2)</sci:value>
														<sci:value>
&lt;br&gt;
&lt;strong&gt;Note to Customers:  &lt;/strong&gt;
&lt;p&gt;This is an &apos;internals&apos; component and is NOT intended for direct customer use.&lt;/p&gt;

&lt;p&gt;Please contact support if you have any questions or would like further information.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;This is an &lt;strong&gt;internal component&lt;/strong&gt; and is not meant for direct external use.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; this component could change or go away in a future release.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>16.1.0.1209</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/imaging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 03 22:30:20 2016</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>24</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Imaging\Utilities\Internals\ImageJ\Conditional ImageJ Debug Viewer (v2)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>#doWindowsProcessing := false; //__the default

if( gsys_ServerOS is not defined) then
	#doWindowsProcessing := true; //__if something was missed - force Windows Style
	DebugMessage(&quot;Warning: Did not find &apos;gsys_ServerOS&apos; property as expected&quot;);
else
	DebugMessage(&quot;Info: The Platform is &lt;&quot; . %gsys_ServerOS . &quot;&gt;&quot;);
	if(&quot;Windows64&quot; eq gsys_ServerOS) then
		#doWindowsProcessing := true;
	elsif(&quot;Linux64&quot; eq gsys_ServerOS) then
		#doWindowsProcessing := false;
	else
		#doWindowsProcessing := true;
		DebugMessage(&quot;Warning: The &apos;gsys_ServerOS&apos; = &lt;&quot; . %gsys_ServerOS . &quot;&gt;&quot;);
	end if;

end if;





#doWindowsProcessing;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Win64 ??</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1794 -295</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>18</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@ImageJViewerArgs not eq &apos;&apos;

</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:value>ComponentReturnsFail</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Is Image Node?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="ImageJ Args and Props OnClient (v2)" version="2">
													<sci:arg name="OnServer or OnClient - ImageJ" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
																<sci:value>OnServer or OnClient - ImageJ</sci:value>
																<sci:value>OnServer or OnClient - ImageJ</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>OnServer or OnClient - ImageJ</sci:help>
														<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
														<sci:legalval selected="true">OnServer</sci:legalval>
														<sci:legalval>OnClient</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
														<sci:member>RunToCompletion Categorize Using</sci:member>
														<sci:legalval selected="true">False</sci:legalval>
														<sci:legalval>True - For Each Data Record</sci:legalval>
														<sci:legalval>True - For Each Category</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
														<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
														<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Run subprotocol on grid engine if available.</sci:help>
														<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
														<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>ImageJ Args and Props OnClient (v2)</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>SUBPROTOCOLNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>790</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C6016AB1-DB83-4DC9-A7C5-E7B440A3C39A}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -470</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>ImageJ Args and Props OnClient (v2)</sci:value>
														<sci:value>&lt;br&gt;
&lt;strong&gt;Note to Customers:  &lt;/strong&gt;
&lt;p&gt;This is an &apos;internals&apos; component and is NOT intended for direct customer use.&lt;/p&gt;

&lt;p&gt;Please contact support if you have any questions or would like further information.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;This is an &lt;strong&gt;internal component&lt;/strong&gt; and is not meant for direct external use.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; this component could change or go away in a future release.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>16.1.0.1209</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/imaging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 03 22:29:58 2016</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>6</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>OriginalPackage</sci:help>
														<sci:value>scitegic/coreutils</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Imaging\Utilities\Internals\ImageJ\ImageJ Args and Props OnClient (v2)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>ImageJ_PLP_Component_type := parameter(&apos;OnServer or OnClient - ImageJ&apos;);
local_OnClient_OurPLPComponents_stuff_is_ClientRunDirectory := &apos;&apos;;
local_OnServer_OurPLPComponents_stuff_FilePath_is_TempDir := &apos;&apos;;
local_OnServer_OurPLPComponents_stuff_FilePath_is_JobDir := &apos;&apos;;
local_OnServer_FilePath_is_TempDir := &apos;&apos;;
#directoryFullPathForFiles := &apos;&apos;;

//__NOTE:  OnClient uses &apos;clientFilePath&apos;(@ClientRunDirectory)   AND  OnServer uses &apos;serverFilePath&apos;(@TempDir)
//__We are attempting to merge the logic here to resolve some of the bugs and Linux cross-platform issues
if(&apos;OnClient&apos; eq %ImageJ_PLP_Component_type) then
	#directoryFullPathForFiles := @ClientRunDirectory;  //__OnClient uses &apos;clientFilePath&apos;(@ClientRunDirectory)   AND  OnServer uses &apos;serverFilePath&apos;(@TempDir)  
	local_OnClient_OurPLPComponents_stuff_is_ClientRunDirectory := #directoryFullPathForFiles;
else
	#directoryFullPathForFiles := @TempDir;  //__OnClient uses &apos;clientFilePath&apos;(@ClientRunDirectory)   AND  OnServer uses &apos;serverFilePath&apos;(@TempDir)  
	local_OnServer_OurPLPComponents_stuff_FilePath_is_TempDir := #directoryFullPathForFiles;
	local_OnServer_OurPLPComponents_stuff_FilePath_is_JobDir := @JobDir;
end if;
  

//__Determine the &apos;Debug Tracing&apos; and &apos;Version&apos; related details -- not used in production path
if ( @&apos;Shortcut Version&apos; is defined) then
	g_param_imp_Shortcut_Version := integer( @&apos;Shortcut Version&apos; );
else
	g_param_imp_Shortcut_Version := -1;
end if;
if ( @&apos;VersionImaging&apos; is defined) then
	g_param_imp_VersionImaging := integer( @&apos;VersionImaging&apos; );
else
	g_param_imp_VersionImaging := -1;
end if;
if ( @&apos;Enable Debug Checks and Messages&apos; is defined) then
	g_param_Enable_Debug_Checks_and_Messages := integer( @&apos;Enable Debug Checks and Messages&apos; );
else
	g_param_Enable_Debug_Checks_and_Messages := -1;
end if;
if ( @&apos;Expected Runtime Type&apos; is defined) then
	g_param_Expected_Runtime_Type :=  @&apos;Expected Runtime Type&apos;;
else
	g_param_Expected_Runtime_Type := &apos;OLD_VERSION_PRE_2017&apos;;
end if;
if ( @&apos;Platform Determination Type&apos; is defined) then
	g_param_Platform_Determination_Type :=  @&apos;Platform Determination Type&apos;;
else
	g_param_Platform_Determination_Type := &apos;OLD_VERSION_PRE_2017&apos;;
end if;

if ( @&apos;ServerOS&apos; is defined) then
	gsys_ServerOS :=  @&apos;ServerOS&apos;;
	//__ONLY for testing -- gsys_ServerOS :=  gsys_ServerOS . &quot;__TEST_Error_CASE&quot;;
	if(&apos;Windows64&apos; != gsys_ServerOS) and (&apos;Linux64&apos; != gsys_ServerOS) then
		gsys_ServerOS_before_Force := gsys_ServerOS;
		gsys_ServerOS := &apos;Windows64&apos;; //__Something went wrong; try to recover -- FORCE windows
		local_FLAG_ERROR_But_Continue_systemGlob_ServerOS := &quot;Warning: Property &lt;@ServeOS&gt; has value &lt;&quot; . %&apos;gsys_ServerOS_before_Force&apos; . &quot;&gt; -- not expected. FORCE windows.&quot;;
	end if;
else
	gsys_ServerOS := &apos;OLD_VERSION_PRE_2017__unknown_global_ServerOS&apos;;
end if;


local_macro_Parameter := globalproperty(&apos;Macro&apos;);
local_macro_Exists := ( 0 &lt; StringLen(trim( local_macro_Parameter)) );
#tempNames := globalproperty(&apos;Output Image Filenames&apos;);


resize(local_tempNames_array,0); 
local_tempNames_array := #tempNames;
local_tempNames_count := numvalues(#tempNames);

local_ArgsInitial := @ImageJViewerArgs;
if ( (&apos;&apos; not eq %local_macro_Parameter) and (&apos;&apos; not eq #tempNames) ) then
	for #i in 1 .. numvalues(#tempNames) loop
		#inputArgTempFiles := #directoryFullPathForFiles . &apos;/&apos; . #tempNames[#i];
		if (@ImageJViewerArgs not eq &apos;&apos;) then
			@ImageJViewerArgs := @ImageJViewerArgs . &apos;,&apos; . #inputArgTempFiles;
		else 
			//__The first one to add -- don&apos;t add a &apos;,&apos; (comma) yet
			@ImageJViewerArgs := #inputArgTempFiles;
		end if;
	end loop;
end if;
//__NOTE: [@ImageJViewerArgs] is a &apos;,&apos; (comma) separated file-list of Args
//__  This list will later be surrounded with quotes (&quot;) to deal with &apos; &apos; (spaces), etc.

local_ArgsFinal := @ImageJViewerArgs;
expand(&apos;,&apos;, local_ArgsFinal);
resize(local_ArgsFinal__FilesExist_MacroMode_Flag_array, 0); //__Test for fileexists() below
local_ArgsFinal__FilesExist_MacroMode_AsString := &apos;&apos;;

//__Solely for debugging issues that might occur for customer -- does not affect behavior
for #i in 1 .. numvalues(local_ArgsFinal)  loop
	#exists := fileexists(local_ArgsFinal[#i]) ;
	append(local_ArgsFinal__FilesExist_MacroMode_Flag_array, #exists);
	
	if(1 &lt; #i) then
		local_ArgsFinal__FilesExist_MacroMode_AsString := local_ArgsFinal__FilesExist_MacroMode_AsString . &quot;, &quot; . string(#exists) ;
	else
		local_ArgsFinal__FilesExist_MacroMode_AsString := string(#exists);
	end if;
end loop;

if ( 1 &lt;= g_param_Enable_Debug_Checks_and_Messages)  then
	DebugMessage(&quot;## Running protocol with &apos;Debugging&apos;  [Shift-F5].  Generate Traces.&quot;);
	DebugMessage(&quot;##&quot;);
	DebugMessage(&quot;## &apos;Macro&apos; Parameter = &lt;&quot; . local_macro_Parameter . &quot;&gt;&quot;);
	DebugMessage(&quot;## inputArgTempFiles_array =  &lt;&quot; . @ImageJViewerArgs . &quot;&gt;&quot;); //__use real-one used in command-line
	DebugMessage(&quot;## inputArgTempFiles_FileExists =  &lt;&quot; . local_ArgsFinal__FilesExist_MacroMode_AsString . &quot;&gt;&quot;);
end if;
</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnServer or OnClient - ImageJ" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:metaproplist>
																	<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">StringType</sci:propval>
																</sci:metaproplist>
																<sci:help>OnServer or OnClient - ImageJ</sci:help>
																<sci:value>OnServer or OnClient - ImageJ</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>ImageJ Args OnClient (worker )</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:version iVal="1"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>globalproperty(&apos;Macro&apos;) not eq &apos;&apos;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:value>ComponentReturnsFail</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Check IF &quot;Run&quot;  Macro (ImageJ)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>7</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>haltprotocol();</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2082 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>22</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.RunProgram.1">
												<sci:component name="Run Program (on Server)" version="2">
													<sci:arg name="CommandLine" type="LinkDataPropertyType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:metaproplist>
															<sci:propval name="SCI_InitializeUsingRevertInfo" ishidden="true" base64="UI1">Al1HAAFHQ29tbWFuZCBsaW5lIGZvciBhcHBsaWNhdGlvbiBvciBmaWxlIHRvIGV4ZWN1dGUgb24gdGhlIHNlcnZlciBtYWNoaW5lLiRUZXh0VHlwZQAMAAAAAQEAAAEcVGhpcyBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQuBAD8AAAAAAAAAAAAMENvbW1hbmRMaW5lA8xTz7sEAA==</sci:propval>
															<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">TextType</sci:propval>
															<sci:propval name="SCI_EvalOnInit" ishidden="true" boolVal="true"/>
															<sci:propval name="SCI_EvalOnInitType" ishidden="true">TextType</sci:propval>
														</sci:metaproplist>
														<sci:help>Command line for application or file to execute on the server machine.</sci:help>
														<sci:value>local_ImageJ_command_line</sci:value>
													</sci:arg>
													<sci:arg name="Result Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Parameters for assigning results to properties.</sci:help>
														<sci:member>PropertyForExitStatus</sci:member>
														<sci:member>StderrProperty</sci:member>
														<sci:member>StdoutProperty</sci:member>
														<sci:member>StdinProperty</sci:member>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="StdinProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Defines the property name that holds the desired value of the program&apos;s standard input (stdin). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="StdoutProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Defines the property name that will hold the program&apos;s standard output (stdout). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
														<sci:value>StdOutput</sci:value>
													</sci:arg>
													<sci:arg name="StderrProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Defines the property name that will hold the program&apos;s standard error (stderr). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
														<sci:value>StdError</sci:value>
													</sci:arg>
													<sci:arg name="PropertyForExitStatus" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Defines the property name to hold the value of the program exit status code. Denote a global property with a leading @ character.
Note that this property can only be defined if WaitForExit is set to True.</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
														<sci:value>StdExit_Status_RC</sci:value>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>UseCommandInterpreter</sci:member>
														<sci:member>Environment</sci:member>
														<sci:member>WaitForExit</sci:member>
														<sci:member>Evaluate Parameters for Each Record</sci:member>
													</sci:arg>
													<sci:arg name="WaitForExit" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether or not to wait for the program to finish before returning from the process call.  This parameter must be set to True for StdinProperty, StdoutProperty, StderrProperty, or PropertyForExitStatus to function.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Environment" type="TextType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &lt;br&gt;&lt;samp&gt;variable=name&lt;/samp&gt;&lt;p/&gt;
The spawned process will inherit the existing environment of the protocol job process, and any settings here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. to prepend, use something like&lt;br/&gt; &lt;samp&gt;PATH=c:\mydir;%PATH%&lt;/samp&gt;&lt;p/&gt;
Note that this syntax should be used with both Windows and Linux servers.  Due to OS designs, environment variables are case insensitive on Windows servers and case sensitive on Linux servers.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="UseCommandInterpreter" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether or not to add &quot;cmd.exe /c&quot; (or &quot;/bin/sh -c&quot; on Linux servers) to the command line.  This causes the command line to be interpreted through the operating systems standard command shell allowing the use of redirection specifiers such as &apos;&amp;gt;&apos; and &apos;&amp;lt;&apos; and piping via &apos;|&apos;.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Evaluate Parameters for Each Record" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;
Set this parameter to True if the component has an input port and you need to re-evaluate the values of the other parameters for each record that is passed into the component.&lt;p/&gt;
This allows you to set a different command line for each record. You can do this by using a global property token in the command line.&lt;br/&gt;
Example (where &lt;samp&gt;dataname&lt;/samp&gt; is a global property):&lt;br/&gt;
&lt;samp&gt;/home/goober/bin/calibrate $(dataname)&lt;/samp&gt;
&lt;p&gt;
If you change the parameter type of the CommandLine parameter to be an Expression, you can define an expression that includes values of data properties on each incoming record.&lt;br/&gt;
Example (where &lt;samp&gt;dataset_id&lt;/samp&gt; and &lt;samp&gt;limit&lt;/samp&gt; are data record properties):&lt;br/&gt;
&lt;samp&gt;&apos;/home/goober/bin/calibrate &apos;.dataset_id.&apos; -max &apos;.limit&lt;/samp&gt;
&lt;/p&gt;</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Componet Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/integration</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Apr 03 17:17:22 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{1479A29D-F184-4979-BF60-2AA823D48831}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Run Program (on Server)</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Run Program</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2370 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Runs a command line application on the server machine.</sci:value>
														<sci:value>&lt;p&gt;Define the command line by entering text as you would in a command prompt window.  On Windows servers, the component includes facilities for looking up a program name in the Windows registry. It can interpret a program name as a ProgID, such as &quot;InternetExplorer.Application&quot;, or as a shell command, such as &quot;IsisServer&quot;, or as a document to load into an associated program, such as &quot;c:\spreadsheet.xls&quot;.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;CommandLine&lt;/i&gt;: The command that the component will run. The correct syntax is the full command line exactly as you would type it in a shell command window. On Windows servers, the first space- or quote-delimited item of the command line can be a ProgId, such as &quot;InternetExplorer.Application&quot;.  This starts up Internet Explorer (IE) without having to specify the path to IE explicitly. Shell command associations are also supported, so &quot;IsisServer&quot; will start Isis Draw. Finally, there is support for file associations, so the path &quot;D:\docs\notes.doc&quot; will start Microsoft Word and load the specified document.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;WaitForExit&lt;/i&gt;: When TRUE, the data pipeline is blocked until the command has completed.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;PropertyForExitStatus&lt;/i&gt;: Allows you to assign the exit status of the command to a global property or to a data record property. Use either a global or local property reference, such as @status or status.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;UseCommandInterpreter&lt;/i&gt;: When True, parses the command line through the command interpreter on the remote server (with a shell such as csh or bash on Linux servers or the interpreter cmd.exe on Windows servers). In particular, this needs to be set to True if the CommandLine utilizes standard output or input (such as cmd.exe /c &amp;quot;c:\Program Files\R\rterm.exe&amp;quot; &amp;quot;0&amp;lt;$(CommandFile)&amp;quot;).&lt;/p&gt;
&lt;p&gt;&lt;i&gt;StdinProperty, StdoutProperty, and StderrProperty&lt;/i&gt;: Allows you to redirect standard communications to global properties or to data record properties. Use either a global or local property reference, such as @stdin or stdin.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Environment&lt;/i&gt;: Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the PipelinePilot process, and any settings defined here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;).  Due to differences in the operating systems, these variables are case insensitive on Windows servers, but case sensitive on Linux servers.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt; If your command line includes a file path, create a new parameter for the component, of type URL, so the user can enter the path. Then use a token replacement in the CommandLine to pick up the value. For example: Notepad.exe &quot;$(SciTegicRoot)\$(Path)&quot;. &lt;/li&gt;
&lt;li&gt;When the component is separated from any other pipeline, the command line is run just once.&lt;/li&gt; 
&lt;li&gt;You can add an input or output pass port to the component, to integrate it with a pipeline. If there is an output port, but no input port, the command is run once and a single new record is generated. If there is an input port, then the command is run once for each data record passed in.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/integration_command_line.pdf&apos;)&quot;&gt;
Command-line Integration Guide&lt;/a&gt;&lt;/p&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>%VERSION 3%</sci:value>
														<sci:value>2282 -745 672 264</sci:value>
														<sci:value>255 255 0</sci:value>
														<sci:value>NEW style -- LINUX

NEEDs
UseCommandInterpreter == TRUE</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.14</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>21</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Database and Application Integration\Application Integration\Command Line\Run Program (on Server)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>&quot;Error: The component &quot;ImageJ (on Server)&quot; requires the &quot;Macro&quot; parameter to be set.&quot;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Error: No Macro</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>930 -820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>8</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="Dont Pass Data" version="2">
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>CustomErrorText</sci:help>
													</sci:arg>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>PassDataToPort</sci:value>
													</sci:arg>
													<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>the port to pass data to</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Sep 20 08:16:06 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Eat record ; we never did anything here
Don&apos;t Pass Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{F70D3185-8B78-4211-AF3E-D5427C306F87}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -845</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Prevents records exiting an internal component from being passed out of a subprotocol</sci:value>
														<sci:value>&lt;p&gt;This component is useful inside subprotocols to keep data from being passed out. It is an alternative to disabling components.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/comps/disable_comps.htm&apos;)&quot;&gt;Disabling Components&lt;/a&gt;&lt;/p&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.1.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>5</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Dont Pass Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:connectid from="19" to="20" type="true"/>
											<sci:connectid from="20" to="15" type="true"/>
											<sci:connectid from="15" to="25" type="true"/>
											<sci:connectid from="25" to="17" type="true"/>
											<sci:connectid from="9" to="10" type="true"/>
											<sci:connectid from="9" to="10" type="false"/>
											<sci:connectid from="10" to="24" type="true"/>
											<sci:connectid from="24" to="18" type="true"/>
											<sci:connectid from="18" to="19" type="true"/>
											<sci:connectid from="18" to="22" type="false"/>
											<sci:connectid from="0" to="6" type="true"/>
											<sci:connectid from="0" to="5" type="false"/>
											<sci:connectid from="6" to="7" type="true"/>
											<sci:connectid from="7" to="9" type="true"/>
											<sci:connectid from="7" to="8" type="false"/>
											<sci:connectid from="22" to="21" type="true"/>
											<sci:connectid from="21" to="15" type="true"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>serverFilePath := @TempDir;

#tempTags := globalproperty(&apos;Output Image Tags&apos;);
#tempNames := globalproperty(&apos;Output Image Filenames&apos;);

@SvrTempFiles := &apos;&apos;;

if ((numvalues(#tempTags) &gt; 0) and (numvalues(#tempTags) eq numvalues(#tempNames))) then
	for #i in 1 .. numvalues(#tempNames) loop
		#serverTempFile := serverFilePath.&apos;/&apos;.#tempNames[#i];
		if (@SvrTempFiles not eq &apos;&apos;) then
			@SvrTempFiles := @SvrTempFiles.&apos;,&apos;.#serverTempFile;
		else
			@SvrTempFiles := #serverTempFile;
		end if;
	end loop;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Generate Files Pathname </sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -1545</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>10</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>$(ImageJ Output Property Name) := @StdOutput;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>/*Assign ImageJ output to prop</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -1895</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>17</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.AttachChildren.1">
										<sci:component name="Attach Children" version="2">
											<sci:arg name="Attachment Location" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>The deep node specification of the point in the parent data record to attach the child data records.
If left blank, the child nodes are attached to the root node of the parent record.</sci:help>
											</sci:arg>
											<sci:arg name="Child Node Location" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>If specified, this parameter specifies the location of nodes that are to
be extracted from the child data records and attached to the parent
record.

If no nodes match this location for a specific record, then no child nodes are attached from that record.

If the parameter value is left empty, then the whole data record is attached,
using the root node of the child record as the node location.</sci:help>
												<sci:value>/SciTegic.data.GroupNode/*</sci:value>
											</sci:arg>
											<sci:arg name="If Attachment Location Missing" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>What to do if the specified attachment location is missing:

&lt;b&gt;Throw Error&lt;/b&gt;:  Throws a general error.

&lt;b&gt;Attach to Root Node&lt;/b&gt;:  Attaches child data under the root node.</sci:help>
												<sci:legalval selected="true">Throw Error</sci:legalval>
												<sci:legalval>Attach to Root Node</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Allow Missing Child Data" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>When set, this parameter allows input child node pipes to be &apos;skipped&apos;.  For example, data from the third input pipe is allowed even if there was no data from the second input pipe.

</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Fri Dec 13 12:38:32 2002</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Attach Children</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>JOINNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0C71D911-BF35-4A1B-8B2C-1874530D1A83}</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Attach Children</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -2070</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Attach the contents of one or more secondary data records to a primary record.</sci:value>
												<sci:value>This component is used to construct or add to a hierachical data record structure.

The data record input on the top pipe is considerd the primary, parent record. Data input on the lower pipes must be received in order of input. The contents each such record is added as a child node to the parent data record.

When a new primary record is input on the top pipe, any stored primary record is output and the sequence begins again.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>14</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Data Tree Manipulators\Deprecated\Attach Children</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@StdOutput not eq &apos;&apos; and @&apos;ImageJ Output Property Name&apos; not eq &apos;&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>@StdOutput not eq &apos;&apos; and @&apos;Ima</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -2070</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>18</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="No-op" version="2">
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>No-op</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -2245</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
												<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.0.1.1</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>19</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Subprotocol" version="2">
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>25</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Run subprotocol on grid engine if available.</sci:help>
												<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
												<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Load Modified Images</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DOCUMENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -2620</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
												<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.48</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>15</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.Imaging.ImageRead_Component.1">
												<sci:component name="Image Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>Filename</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(SvrTempFiles)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>Maximum number of image files to read.</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
													</sci:arg>
													<sci:arg name="Output Image Tag" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>String value to place in &lt;i&gt;ImageTag&lt;/i&gt; property of images read by this component. Value is also appended to &lt;i&gt;ImageHistory&lt;/i&gt; property.
&lt;p&gt;
All image types are supported.</sci:help>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>Byte Order</sci:member>
														<sci:member>Output Sequence As Stack</sci:member>
														<sci:member>Tiff Header Options</sci:member>
														<sci:member>Read Image As Raw</sci:member>
													</sci:arg>
													<sci:arg name="Byte Order" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>For TIFF files, specifies the byte order. If Automatic is chosen, the reader gets the byte order from the file header.</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Implementation to &quot;IPP&quot;&apos;);
parameter(&apos;Implementation&apos;) eq &apos;IPP&apos;</sci:enabledscript>
														<sci:legalval selected="true">Automatic</sci:legalval>
														<sci:legalval>Big endian</sci:legalval>
														<sci:legalval>Little endian</sci:legalval>
													</sci:arg>
													<sci:arg name="Output Sequence As Stack" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>If set to true, an image file containing a sequence of images will be read into one image stack. If set to false, each image in the sequence will be added separately to the record.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Tiff Header Options" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies whether to parse the header for TIF files or not. This parameter is enabled only for ITK implementation.&lt;/p&gt; 

&lt;p&gt;&lt;br&gt;&lt;ul&gt;
&lt;li&gt;Parse Header.
&lt;br&gt;Parses the header and adds corresponding properties to the &lt;i&gt;SciTegic.Image.Metadata&lt;/i&gt; node, a child node of the image node. &lt;/br&gt;
&lt;/li&gt;

&lt;li&gt;Do Not Parse Header.
&lt;br&gt;Reads only images. Metadata node is not added.&lt;/br&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
														<sci:member>Array Values</sci:member>
														<sci:enabledscript>SetDisabledDetails( &apos;To enable &apos;.ParameterName().&apos;, set implementation to &quot;ITK&quot;.&apos;);
#fileNames := tolower(parameter(&apos;Source&apos;));
parameter(&apos;Implementation&apos;) eq &apos;ITK&apos; /*and 
(findsubstring(#fileNames, &apos;.tif&apos;) &gt; 0 or findsubstring(#fileNames, &apos;.tiff&apos;) &gt; 0)
*/</sci:enabledscript>
														<sci:legalval selected="true">Parse Header</sci:legalval>
														<sci:legalval>Do Not Parse Header</sci:legalval>
													</sci:arg>
													<sci:arg name="Array Values" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Sometimes the array values in the metadata contain too many elements. This option specifies whether to read the entire array or just a few elements. &lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;ul&gt;
&lt;li&gt;Read All Array Elements.
&lt;br&gt;Reads all elements in the array and adds them to the corresponding property in the metadata. &lt;/br&gt;
&lt;/li&gt;

&lt;li&gt;Read Partial Array.
&lt;br&gt;If the array has more elements than the value specified in &lt;i&gt;Maximum Array Elements To Read&lt;/i&gt; parameter, only the maximum number of elements specified are added to the corresponding property in the metadata. It also appends the total number of elements in the array to the property value. If the array size is less than the maximum value specified, the entire array is added to the metadata node. 
&lt;/br&gt;&lt;/li&gt;&lt;/ul&gt; &lt;/p&gt;</sci:help>
														<sci:member>Maximum Array Elements to Read</sci:member>
														<sci:enabledscript>parameter(&apos;Tiff Header Options&apos;) ne &apos;Do Not Parse Header&apos;</sci:enabledscript>
														<sci:legalval>Read All Array Elements</sci:legalval>
														<sci:legalval selected="true">Read Partial Array</sci:legalval>
													</sci:arg>
													<sci:arg name="Maximum Array Elements to Read" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Maximum elements to read in an array. &lt;/p&gt;</sci:help>
														<sci:validscript>parameter() &gt;= 1</sci:validscript>
														<sci:enabledscript>parameter(&apos;Array Values&apos;) eq &apos;Read partial array&apos;</sci:enabledscript>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Read Image As Raw" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>If set to &lt;i&gt;true&lt;/i&gt;, the image will be read as a raw file.</sci:help>
														<sci:member>Image Width</sci:member>
														<sci:member>Image Height</sci:member>
														<sci:member>Pixel Type</sci:member>
														<sci:member>Header Size</sci:member>
														<sci:member>Image Depth</sci:member>
														<sci:enabledscript>SetDisabledDetails( &apos;To enable &apos;.ParameterName().&apos;, set implementation to &quot;IPP&quot;.&apos;);
parameter(&apos;Implementation&apos;) eq &apos;IPP&apos;</sci:enabledscript>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Header Size" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>Header size in bytes. This many bytes will be skipped before the raw pixel data is read.</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Image Width" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>Width of the image in pixels.</sci:help>
													</sci:arg>
													<sci:arg name="Image Height" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>Height of the image in pixels.</sci:help>
													</sci:arg>
													<sci:arg name="Image Depth" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>Number of slices if we are reading a sequence (stack).</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Pixel Type" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Pixel type.</sci:help>
														<sci:legalval selected="true">unsigned char</sci:legalval>
														<sci:legalval>unsigned short</sci:legalval>
														<sci:legalval>short</sci:legalval>
														<sci:legalval>int </sci:legalval>
														<sci:legalval>float</sci:legalval>
													</sci:arg>
													<sci:arg name="Implementation" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:legalval selected="true">IPP</sci:legalval>
														<sci:legalval>ITK</sci:legalval>
													</sci:arg>
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>PassDataToPort</sci:value>
													</sci:arg>
													<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>the port to pass data to</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/imaging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Apr 16 16:46:54 2009</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Image Reader</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{2562F8B6-1F36-4081-A01B-227ED127144F}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data from image files creating one data record for each file</sci:value>
														<sci:value>&lt;p&gt;The file or files are specified by &lt;i&gt;Source&lt;/i&gt;. Images of types bmp, jpg, png, tif and raw are supported.&lt;/p&gt;

&lt;p&gt;For image files that contain a single image, the data record will contain a group node with one child image node. For image files that contain an image sequence, the data record will contain one group node with one child image node for each image in the sequence if the parameter &lt;i&gt;Output Sequence as Stack&lt;/i&gt; is set to false. Otherwise, the data record will contain one image stack.&lt;/p&gt;
&lt;p&gt;
All image types are supported.&lt;/p&gt;

&lt;B&gt;See Also:&lt;/B&gt;
&lt;ul&gt;
&lt;li&gt;If the file path is stored in a property, use &lt;a href=&quot;javascript:DoLink(&apos;{550671D1-C886-4a9d-ADD7-14297D0C59D9}&apos;)&quot;&gt;Image Record Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To group images as they are read in, use &lt;a href=&quot;javascript:DoLink(&apos;{0FEEA520-902C-4C8F-8458-40C6E5A7B04C}&apos;)&quot;&gt;Grouped Image Reader&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Output image group.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.5.2.300</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Imaging\Readers\Image Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.UngroupData.1">
												<sci:component name="Ungroup Data" version="2">
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>GroupName</sci:member>
													</sci:arg>
													<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>(Optional) Restricts the ungroup process to only those groups having the given name -- the same name as specified by the &quot;Group Data&quot; component</sci:help>
														<sci:value>Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jan 19 10:40:59 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Ungroup Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>GENERATORNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Ungroup Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{57833F08-BD53-42AE-A14C-87EED61B8FBD}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Separates data records previously grouped together into the original records</sci:value>
														<sci:value>&lt;p&gt;The input record is assumed to be a grouped data record.  The individual records are extracted from the group and sent out the Pass port.  The incoming data record is discarded.&lt;/p&gt;

&lt;p&gt;You would typically use Ungroup Data as the first component inside a &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocol that expects grouped data.  This executes the remainder of the subprotocol over the individual data records in the group.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;It is possible to have a group which in turn has another group as one of its members (nested groups). In this case, ungrouping will separate only the top level groups. Multiple Ungroup Data components operating in series are needed to separate nested groups.&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To group data records together use &lt;a href=&quot;javascript:DoLink(&apos;{3FDE8197-D86F-4EB0-99FF-82D6430AF466}&apos;)&quot;&gt;Group Data by Tag&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}&apos;)&quot;&gt;Group Data by Number&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To view the structure of grouped data records use &lt;a href=&quot;javascript:DoLink(&apos;{AA4369ED-A1A1-4949-8520-39B23096ACFD}&apos;)&quot;&gt;Data Record Tree Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To learn more about &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocols, see the parameter help on &lt;a href=&quot;javascript:DoLink(&apos;{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}&apos;)&quot;&gt;Subprotocol&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with a hierarchical group of other data records</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>The individual data records that were contained within a hierarchical group of the incoming data</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records on which the GroupName property is missing</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.6</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Ungroup Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>ImageIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>#temp := globalproperty(&apos;Output Image Tags&apos;);
ImageTag := #temp[ImageIndex];
ImageHistory := #temp[ImageIndex];</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Initialize</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="Remove Properties" version="2">
													<sci:arg name="PropertyList" type="TextType" required="true" visibility="visible" multi="false">
														<sci:help>The names of properties to remove from each data record entering the component</sci:help>
														<sci:value>ImageIndex</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>Remove</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 07 13:23:27 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Remove Properties</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>true</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Removes the specified properties</sci:value>
														<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records with the specified properties removed</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.31</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.GroupData.1">
												<sci:component name="Group Data by Number" version="2">
													<sci:arg name="NumDataToGroup" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>Number of separate incoming data records to group together onto a single record</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="GroupName" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>If given, a new property called &quot;GroupName&quot; is created with this value. It can aid in unpacking only selected groups by name.
</sci:help>
														<sci:value>data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Comment</sci:help>
														<sci:value>Groups a fixed number of data records together onto a single property list.</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Jul 22 10:59:25 2005</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Group Data by Number</sci:value>
													</sci:arg>
													<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Component Usage</sci:help>
														<sci:value>Data records are grouped together for collective treatment downstream.  Each incoming data record becomes a single item on the newly generated property list being output.  *Note that the Ungroup_Data component can be used to unpack these lists with no loss of any data.

Input             - Data records
Output Pass  - Property list records containing the grouped data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Group Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JoinNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Groups a specified number of data records together into a single record.</sci:value>
														<sci:value>Data records are grouped together for collective treatment downstream. Each N incoming data records are output as a single data record.  

Use this component to provide input to a subprotocol for which &lt;i&gt;Run To Completion&lt;/i&gt; has been set to True. By using the &lt;i&gt;Ungroup Data&lt;/i&gt; component as the first element of the subprotocol, subsequent actions of the subrotocol will act on each group one at a time.&lt;p&gt;
&lt;a href=&quot;javascript:DoLink(&apos;{57833F08-BD53-42AE-A14C-87EED61B8FBD}&apos;)&quot;&gt;See Also:&lt;/a&gt;The &lt;i&gt;Ungroup Data&lt;/i&gt; component can be used to unpack these lists without loss of data.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>5.0.0.113</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>5</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Group Data by Number</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Imaging.ImageRead_Component.1">
												<sci:component name="Image Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>Filename</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(SvrTempFiles)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>Maximum number of image files to read.</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
													</sci:arg>
													<sci:arg name="Output Image Tag" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>String value to place in &lt;i&gt;ImageTag&lt;/i&gt; property of images read by this component. 
&lt;p&gt;
All image types are supported.</sci:help>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>Tiff Header Options</sci:member>
														<sci:member>Read Image As Raw</sci:member>
														<sci:member>Image Stack Options</sci:member>
													</sci:arg>
													<sci:arg name="Image Stack Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
														<sci:help>Options specifying how to read 3D stacks.</sci:help>
														<sci:member>Read as One Image Stack</sci:member>
														<sci:member>Sub-stacks</sci:member>
													</sci:arg>
													<sci:arg name="Read as One Image Stack" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
														<sci:help>If set to true, an image file containing a sequence of images will be read into one image stack. If set to false, each image in the sequence will be added separately to the record.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Sub-stacks" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Parameters specifying how the substacks should be created.</sci:help>
														<sci:member>Depth</sci:member>
														<sci:member>Start Slice</sci:member>
														<sci:member>Spacing</sci:member>
														<sci:member>How Many to Read</sci:member>
														<sci:enabledscript>parameter(&apos;Read Image As Raw&apos;) eq &apos;True&apos; and parameter(&apos;Read as One Image Stack&apos;) eq &apos;False&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Depth" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>How many slices should be read into one sub-stack</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Start Slice" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>Start reading at the slice specified by the value of this parameter.</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Spacing" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>If the image stack is read &lt;i&gt;n&lt;/i&gt; slices at a time, value of this parameter will determine spacing, i.e. how many slices to skip to the next sub-stack. If this parameter is negative, the sub-stacks will overlap.&lt;i&gt;n&lt;/i&gt; is the value of the parameter &lt;i&gt;Number of Slices per Read Image&lt;/i&gt;.</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="How Many to Read" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>How many sub-stacks should be read.</sci:help>
														<sci:member>Number of Sub-Stacks to Read</sci:member>
														<sci:legalval selected="true">One</sci:legalval>
														<sci:legalval>All</sci:legalval>
														<sci:legalval>Specified by User</sci:legalval>
													</sci:arg>
													<sci:arg name="Number of Sub-Stacks to Read" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>Specify how many sub-stacks should be read.</sci:help>
														<sci:enabledscript>Parameter(&apos;How Many to Read&apos;) eq &apos;Specified by User&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Tiff Header Options" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies whether to parse the header for TIF files or not. &lt;/p&gt; 

&lt;p&gt;&lt;br&gt;&lt;ul&gt;
&lt;li&gt;Parse Header.
&lt;br&gt;Parses the header and adds corresponding properties to the &lt;i&gt;SciTegic.Image.Metadata&lt;/i&gt; node, a child node of the image node. &lt;/br&gt;
&lt;/li&gt;

&lt;li&gt;Do Not Parse Header.
&lt;br&gt;Reads only images. Metadata node is not added.&lt;/br&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
														<sci:member>Array Values</sci:member>
														<sci:legalval>Parse Header</sci:legalval>
														<sci:legalval selected="true">Do Not Parse Header</sci:legalval>
													</sci:arg>
													<sci:arg name="Array Values" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Sometimes the array values in the metadata contain too many elements. This option specifies whether to read the entire array or just a few elements. This parameter is enabled only for ITK implementation. &lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;ul&gt;
&lt;li&gt;Read All Array Elements.
&lt;br&gt;Reads all elements in the array and adds them to the corresponding property in the metadata. &lt;/br&gt;
&lt;/li&gt;

&lt;li&gt;Read Partial Array.
&lt;br&gt;If the array has more elements than the value specified in &lt;i&gt;Maximum Array Elements To Read&lt;/i&gt; parameter, only the maximum number of elements specified are added to the corresponding property in the metadata. It also appends the total number of elements in the array to the property value. If the array size is less than the maximum value specified, the entire array is added to the metadata node. 
&lt;/br&gt;&lt;/li&gt;&lt;/ul&gt; &lt;/p&gt;</sci:help>
														<sci:member>Maximum Array Elements to Read</sci:member>
														<sci:enabledscript>SetDisabledDetails( &apos;To enable &apos;.ParameterName().&apos;, set implementation to &quot;ITK&quot; and Tiff Header Optiont to &quot;Parse Header&quot;.&apos;);
#fileNames := tolower(parameter(&apos;Source&apos;));
parameter(&apos;Tiff Header Options&apos;) ne &apos;Do Not Parse Header&apos; and parameter(&apos;Implementation&apos;) eq &apos;ITK&apos;</sci:enabledscript>
														<sci:legalval>Read All Array Elements</sci:legalval>
														<sci:legalval selected="true">Read Partial Array</sci:legalval>
													</sci:arg>
													<sci:arg name="Maximum Array Elements to Read" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Maximum elements to read in an array. &lt;/p&gt;</sci:help>
														<sci:validscript>parameter() &gt;= 1</sci:validscript>
														<sci:enabledscript>parameter(&apos;Array Values&apos;) eq &apos;Read partial array&apos;</sci:enabledscript>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Read Image As Raw" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>If set to &lt;i&gt;true&lt;/i&gt;, the image will be read as a raw file.</sci:help>
														<sci:member>Image Width</sci:member>
														<sci:member>Image Height</sci:member>
														<sci:member>Pixel Type</sci:member>
														<sci:member>Header Size</sci:member>
														<sci:member>Image Depth</sci:member>
														<sci:enabledscript>SetDisabledDetails( &apos;To enable &apos;.ParameterName().&apos;, set implementation to &quot;IPP&quot;.&apos;);
parameter(&apos;Implementation&apos;) eq &apos;IPP&apos;</sci:enabledscript>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Header Size" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>Header size in bytes. This many bytes will be skipped before the raw pixel data is read.</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Image Width" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>Width of the image in pixels.</sci:help>
													</sci:arg>
													<sci:arg name="Image Height" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>Height of the image in pixels.</sci:help>
													</sci:arg>
													<sci:arg name="Image Depth" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>Number of slices if we are reading a sequence (stack).</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Pixel Type" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Pixel type.</sci:help>
														<sci:legalval selected="true">unsigned char</sci:legalval>
														<sci:legalval>unsigned short</sci:legalval>
														<sci:legalval>short</sci:legalval>
														<sci:legalval>int </sci:legalval>
														<sci:legalval>float</sci:legalval>
													</sci:arg>
													<sci:arg name="Implementation" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:legalval selected="true">IPP</sci:legalval>
														<sci:legalval>ITK</sci:legalval>
													</sci:arg>
													<sci:arg name="VersionImaging" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;strong&gt;NOTE:&lt;/strong&gt; this parameter should not be changed.</sci:help>
														<sci:legalval selected="true">4</sci:legalval>
													</sci:arg>
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>PassDataToPort</sci:value>
													</sci:arg>
													<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>the port to pass data to</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/imaging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Aug 17 16:05:19 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Image Reader</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{2562F8B6-1F36-4081-A01B-227ED127144F}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -395</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data from image files creating one data record for each file</sci:value>
														<sci:value>&lt;p&gt;The file or files are specified by &lt;i&gt;Source&lt;/i&gt;. Images of types bmp, jpg, png, tif and raw are supported.&lt;/p&gt;

&lt;p&gt;For image files that contain a single image, the data record will contain a group node with one child image node. For image files that contain an image sequence, the data record will contain one group node with one child image node for each image in the sequence if the parameter &lt;i&gt;Output Sequence as Stack&lt;/i&gt; is set to false. Otherwise, the data record will contain one image stack.&lt;/p&gt;
&lt;p&gt;
All image types are supported.&lt;/p&gt;

&lt;B&gt;See Also:&lt;/B&gt;
&lt;ul&gt;
&lt;li&gt;If the file path is stored in a property, use &lt;a href=&quot;javascript:DoLink(&apos;{550671D1-C886-4a9d-ADD7-14297D0C59D9}&apos;)&quot;&gt;Image Record Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To group images as they are read in, use &lt;a href=&quot;javascript:DoLink(&apos;{0FEEA520-902C-4C8F-8458-40C6E5A7B04C}&apos;)&quot;&gt;Grouped Image Reader&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Output image group.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1469</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>6</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Imaging\Readers\Image Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:connectid from="0" to="1" type="true"/>
											<sci:connectid from="1" to="2" type="true"/>
											<sci:connectid from="2" to="3" type="true"/>
											<sci:connectid from="3" to="4" type="true"/>
											<sci:connectid from="4" to="5" type="true"/>
											<sci:connectid from="6" to="1" type="true"/>
										</sci:protocol>
									</sci:data>
									<sci:connectid from="0" to="5" type="true"/>
									<sci:connectid from="1" to="2" type="true"/>
									<sci:connectid from="2" to="3" type="true"/>
									<sci:connectid from="3" to="0" type="true"/>
									<sci:connectid from="3" to="5" type="false"/>
									<sci:connectid from="5" to="6" type="true"/>
									<sci:connectid from="6" to="4" type="true"/>
									<sci:connectid from="6" to="7" type="false"/>
									<sci:connectid from="8" to="1" type="true"/>
									<sci:connectid from="8" to="9" type="true"/>
									<sci:connectid from="8" to="10" type="true"/>
									<sci:connectid from="8" to="14" type="true"/>
									<sci:connectid from="17" to="19" type="true"/>
									<sci:connectid from="14" to="18" type="true"/>
									<sci:connectid from="18" to="17" type="true"/>
									<sci:connectid from="18" to="19" type="false"/>
									<sci:connectid from="15" to="14" type="true"/>
								</sci:protocol>
							</sci:data>
							<sci:connectid from="8" to="9" type="false"/>
							<sci:connectid from="0" to="1" type="true"/>
							<sci:connectid from="1" to="8" type="true"/>
							<sci:connectid from="1" to="11" type="true"/>
							<sci:connectid from="1" to="13" type="true"/>
							<sci:connectid from="11" to="10" type="true"/>
							<sci:connectid from="11" to="12" type="false"/>
							<sci:connectid from="14" to="3" type="true"/>
							<sci:connectid from="3" to="4" type="true"/>
							<sci:connectid from="4" to="0" type="true"/>
							<sci:connectid from="4" to="5" type="true"/>
							<sci:version iVal="1"/>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.Imaging.ImageRecordWriter_Component.1">
						<sci:component name="Image Record Writer" version="2">
							<sci:arg name="Input Image Tag" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The input image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Input Image Test&lt;/i&gt; is used. If both are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.
&lt;p&gt;All image types are supported. &lt;/p&gt;
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format in &apos;Image Type&apos; parameter. &lt;/p&gt;</sci:help>
								<sci:member>Input Image Test</sci:member>
								<sci:value>Proj</sci:value>
							</sci:arg>
							<sci:arg name="Input Image Test" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired input image. &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Input Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.</sci:help>
								<sci:enabledscript>setDisabledDetails(&quot;Input Image Tag is set.&quot;);
parameter(&apos;Input Image Tag&apos;) eq &apos;&apos;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Transparency Image Tag" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
If specified, this image is used to provide the transparency for the input image.
&lt;p/&gt;
The transparency image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Transparency Image Test&lt;/i&gt; is used. If both parameters are empty, then full transparency is assumed over the entire input image.
&lt;/p&gt;</sci:help>
								<sci:member>Transparency Image Test</sci:member>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Image Type to &quot;png&quot; or &quot;tif&quot;&apos;);
Parameter(&apos;Image Type&apos;) eq &apos;png&apos; or Parameter(&apos;Image Type&apos;) eq &apos;tif&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Transparency Image Test" type="ExpressionType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired transparency image.  &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Transparency Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then full transparency is assumed over the entire input image.</sci:help>
								<sci:enabledscript>setDisabledDetails(&quot;Transparency Image Tag is set.&quot;);
parameter(&apos;Transparency Image Tag&apos;) eq &apos;&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Directory" type="DirectoryType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The destination directory to contain image files.</sci:help>
								<sci:value>\\CTCRFile1.ad.tamhsc.edu\CTCR-Stor2$\MX ImageStore2\NaZhao\20190501-T11Zcad-coat\2019-07-15_reformatted\Proj</sci:value>
							</sci:arg>
							<sci:arg name="Filename" type="ExpressionType" required="true" visibility="visible" multi="false">
								<sci:help>Pilotscript expression to construct the image filenames.</sci:help>
								<sci:value>@WellName</sci:value>
							</sci:arg>
							<sci:arg name="Image Type" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>Standard image types and raw type. If raw type is selected, the simple byte stream is saved to a binary file.
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format.&lt;/p&gt;
&lt;p&gt;NOTE: the raw format currently supports 2-d monochrome single plane images only - raw output of color images and other multi-plane images is not supported.&lt;/p&gt;</sci:help>
								<sci:legalval>bmp</sci:legalval>
								<sci:legalval selected="true">tif</sci:legalval>
								<sci:legalval>png</sci:legalval>
								<sci:legalval>jpg</sci:legalval>
								<sci:legalval>raw</sci:legalval>
							</sci:arg>
							<sci:arg name="Compression" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Compression method to be used. Only valid for TIF images.</sci:help>
								<sci:member>Quality</sci:member>
								<sci:enabledscript>SetDisabledDetails(	       &apos;To enable &apos;.ParameterName().&apos;, set Image Type to &quot;tif&quot;&apos;);
Parameter(&apos;Image Type&apos;) eq &apos;TIF&apos;;</sci:enabledscript>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>CCITT RLE</sci:legalval>
								<sci:legalval>CCITT RLE/W</sci:legalval>
								<sci:legalval>LZW</sci:legalval>
								<sci:legalval>JPEG</sci:legalval>
								<sci:legalval>PackBits RLE</sci:legalval>
								<sci:legalval>Deflate</sci:legalval>
								<sci:legalval>SGI Log Luminance RLE</sci:legalval>
								<sci:legalval>SGI Log 24-bit packed</sci:legalval>
							</sci:arg>
							<sci:arg name="Quality" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>Compression quality. Valid range for JPEG is 0-100, for Deflate is 1-9.</sci:help>
								<sci:enabledscript>parameter(&apos;Compression&apos;) eq &apos;JPEG&apos; or parameter(&apos;Compression&apos;) eq &apos;Deflate&apos;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Input Selection" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>This parameter defines which image is selected as input in cases of ambiguity.

&lt;br&gt;If both &lt;i&gt;Input Image Tag&lt;/i&gt; and &lt;i&gt;Input Image Test&lt;/i&gt; are empty, this parameter selects the input image from all the images found on the record.

&lt;br&gt;If &lt;i&gt;Input Image Test&lt;/i&gt; expression or &lt;i&gt;Input Image Tag&lt;/i&gt; match multiple images on the record, this parameter selects the input image from the set of matching images.

&lt;br&gt;&lt;i&gt;First&lt;/i&gt; and &lt;i&gt;Last&lt;/i&gt; refer to the place of the image on the record. Images are appended at the end of the record as they are created, so if the latest matching image is desired, the parameter should be set to &lt;i&gt;Last&lt;/i&gt;.</sci:help>
								<sci:legalval>First</sci:legalval>
								<sci:legalval selected="true">Last</sci:legalval>
							</sci:arg>
							<sci:arg name="Implementation" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="true">
								<sci:legalval selected="true">IPP</sci:legalval>
								<sci:legalval>ITK</sci:legalval>
							</sci:arg>
							<sci:arg name="VersionImaging" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;strong&gt;NOTE:&lt;/strong&gt; this parameter should not be changed.</sci:help>
								<sci:legalval selected="true">3</sci:legalval>
							</sci:arg>
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/imaging</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Mar 24 10:39:59 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Image Record Writer</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{B5BFA33F-9530-4459-AED1-4F6365EB2FAE}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>For each data record, writes one image to a file</sci:value>
								<sci:value>&lt;p&gt;The image to be written is specified by either &lt;i&gt;Input Image Tag&lt;/i&gt; or &lt;i&gt;Input Image Test&lt;/i&gt;. If no image is specified, the first image on the data record is written to the file.&lt;p&gt;

&lt;p&gt;The directory path of the output file is specified in &lt;i&gt;Destination Directory&lt;/i&gt;, the file name is specified in &lt;i&gt;Filename&lt;/i&gt;, and the file type is specified in &lt;i&gt;Image Type&lt;/i&gt;. 
&lt;/p&gt;
&lt;p&gt;All image types are supported. &lt;/p&gt;
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format in &lt;i&gt;Image Type&lt;/i&gt; parameter. &lt;/p&gt;
&lt;p&gt;NOTE: the raw format currently supports 2-d monochrome single plane images only - raw output of color images and other multi-plane images is not supported.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Group node containing child image node to be written to disk.</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Group nodes containing images successfully written.</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Group nodes containing images that failed to be written.</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>16.1.0.1119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>9</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Imaging\Writers\Image Record Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="0" to="1" type="true"/>
					<sci:connectid from="1" to="2" type="true"/>
					<sci:connectid from="2" to="3" type="true"/>
					<sci:connectid from="3" to="4" type="true"/>
					<sci:connectid from="5" to="3" type="true"/>
					<sci:connectid from="6" to="7" type="true"/>
					<sci:connectid from="7" to="8" type="true"/>
					<sci:connectid from="8" to="9" type="true"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Data Record Tree Viewer" version="2">
					<sci:arg name="Initial Expansion Level" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>This is the number of levels that will be in an expanded state when the window initially opens. Levels of any higher order than this are initially collapsed. 
  Note that this number can be changed in the viewer itself to affect subsequent appearances of the viewer.</sci:help>
						<sci:value>3</sci:value>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>Preserve White Space</sci:member>
						<sci:member>Array Value Layout</sci:member>
						<sci:member>Draw Sibling Bar</sci:member>
						<sci:member>Show Property Types</sci:member>
						<sci:member>Show Metadata</sci:member>
						<sci:member>Title</sci:member>
						<sci:member>Usage Mode</sci:member>
						<sci:member>Image Size</sci:member>
						<sci:member>Sort Properties</sci:member>
					</sci:arg>
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;
Text for the title bar of the viewer.
&lt;p/&gt;
A title can be useful to help distinguish different instances of the viewer in a protocol.
&lt;/p&gt;</sci:help>
						<sci:value>Data Record Tree View</sci:value>
					</sci:arg>
					<sci:arg name="Sort Properties" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>When set to True, properties at each node level will be sorted for display only. Otherwise, properties are shown in the order which they were added.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Preserve White Space" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>If set to True, the property values are displayed in a fixed-width font and all spaces and new lines are maintained. This can be useful for viewing highly structured property text values.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Value Layout" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The orientation for the display of array properties. The Vertical orientation displays the item values in a vertical list. The Horizontal orientation saves vertical space by displaying the array items in a single comma-separated line of text.</sci:help>
						<sci:legalval>Horizontal</sci:legalval>
						<sci:legalval selected="true">Vertical</sci:legalval>
					</sci:arg>
					<sci:arg name="Show Property Types" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>When set to true, there is a tooltip that displays the data type of a property when the mouse hovers over its name.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Show Metadata" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Set to True to include property metadata values in the tree display.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Draw Sibling Bar" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>When set to true, a vertical bar is drawn for each node child group within the hierarchy to aid the visual organization of a complex or deep data set.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Image Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The width and height of the square images displayed for some node types within the viewer.</sci:help>
						<sci:value>150</sci:value>
					</sci:arg>
					<sci:arg name="Usage Mode" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>The way in which this component is being used. As a Summary viewer, data
records are stored up and all displayed in one viewer. In the Inline mode, data records are displayed one at a time.</sci:help>
						<sci:member>Show When</sci:member>
						<sci:member>Maximum</sci:member>
						<sci:legalval selected="true">Inline</sci:legalval>
						<sci:legalval>Summary</sci:legalval>
					</sci:arg>
					<sci:arg name="Maximum" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The number of records to display in Summary usage mode.</sci:help>
						<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Usage Mode to &quot;Summary&quot;&apos;);
	Parameter(&apos;Usage Mode&apos;) eq &apos;Summary&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Show When" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;
The component will only display records for which the specified PilotScript expression evaluates to True. The default is to leave the condition blank, which means all data records will be displayed.
&lt;p/&gt;
Note that this conditional expression can be edited in the viewer itself to affect when the viewer will appear again.
&lt;p/&gt;
 There is an internal record counter value defined by this viewer, named @recordnum, which may be used in the expression. @recordnum starts counting at 1 for the first record. For example, to show the viewer every 1000 records, use the expression:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;samp&gt;@recordnum%1000=0;&lt;/samp&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other examples:&lt;/p&gt;
&lt;li&gt;&lt;samp&gt;newval = oldval - 3;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;logp &amp;gt; 10.0 ;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;rmatch(team, &apos;chi*&apos;,&apos;i&apos;) AND Pos = 1;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;@recordnum &amp;lt;= 10&lt;/samp&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Usage Mode to &quot;Inline&quot;&apos;);
	Parameter(&apos;Usage Mode&apos;) eq &apos;Inline&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>tmpName</sci:value>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>datafolder,imagepathproperty,imagelinkpathproperty,imagelinktitleproperty,imagedir,recordnum,levelcutoff,maxnodes,randomname,xmlrecordfile,xmlrecordfile_list,summaryfile,donesummary</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Write Globals" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Indicates whether this component is implemented as a global data viewer.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Oct 25 12:49:49 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Data Record Tree Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>VIEWERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{AA4369ED-A1A1-4949-8520-39B23096ACFD}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>990 -95</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays the hierarchical data record structure.</sci:value>
						<sci:value>&lt;p&gt; Data records in Pipeline Pilot can exhibit a hierarchical organization. This 
  viewer allows protocol designers to analyze this data record structure at any 
  point in a protocol; this may be a useful debugging and construction tool. &lt;/p&gt;
&lt;p&gt;The viewer is displayed once for each data record that is passed to it, until 
  the user presses the Hide button. In all cases, data is passed unchanged from 
  the component&apos;s output port. &lt;/p&gt;
&lt;p&gt;There are several display options that may be used to display different types 
  of data to greatest effect. &lt;/p&gt;
&lt;p&gt;Note that the viewer may be moved and resized on screen to customize the viewing 
  window on the data record contents. Each redisplay of the viewer &quot;remembers&quot; 
  its previous location and dimensions. &lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.2.0.1308</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>18</sci:value>
					</sci:arg>
					<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Component Comment</sci:help>
						<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
					</sci:arg>
					<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Component Usage</sci:help>
						<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol ShowComment</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Add Protocol Comment Here</sci:help>
						<sci:value>Add Protocol Comment Here</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Debug\Data Record Tree Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>PATH := @DIRECTORY;
expand(&apos;,&apos;,PATH);</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -455</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>19</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.SeparateValues.1">
				<sci:component name="Unmerge Data" version="2">
					<sci:arg name="PropertyNames" type="PropertyNameType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The names of the one or more properties to separate and return as separate data records.  If no property names are given, then all properties with
multiple values will be unmerged. If multiple properties are unmerged, the number of unmerged records is the number of values of a property with the maximum number of values.</sci:help>
					</sci:arg>
					<sci:arg name="Additional Options" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>Large Data Records</sci:member>
						<sci:member>Unmerge ByteArrayValues</sci:member>
					</sci:arg>
					<sci:arg name="Large Data Records" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each of your records are particularly large, setting this parameter to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Unmerge ByteArrayValues" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>ByteArrayValues are property representations of binary data.  Although they are technically arrays of bytes and could be unmerged, in most cases these properties should be treated as a single value rather than an array of bytes.  This parameter is available to restore the previous odd behavior, if desired.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Sep 13 07:08:33 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Unmerge Data</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Unmerge Data</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>GENERATORNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>390 -455</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Separates data records containing array properties into individual records with one array value per record</sci:value>
						<sci:value>&lt;p&gt;Each incoming data record with more than one value for the property or properties specified by &lt;i&gt;PropertyNames&lt;/i&gt; is duplicated for each of the values.  For example, an input data record with three values will generate three output data records.  Each output record will contain one of the values for the &lt;i&gt;PropertyNames&lt;/i&gt; property, and all other properties will be identical.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Large Data Records&lt;/i&gt;: When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each data record is particularly large, setting &lt;i&gt;Large Data Records&lt;/i&gt; to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.&lt;/p&gt;


&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If no property names are given, then all properties with multiple values are unmerged.  In this case, unexpected occurrences of arrays in a property will cause unintentional unmerge operations.  Try to specify a value for &lt;i&gt;PropertyNames&lt;/i&gt; if possible.&lt;/li&gt;
&lt;li&gt;If multiple unmerge properties are specified, the number of data records that result from unmerging a given incoming data record is equal to the number of values of the unmerge property that has the most values.  That is, if two unmerge properties, &quot;A&quot; and &quot;B&quot; are specified where A has 5 values and B has 7 values, then 7 data records will result.  The first 5 records will contain, in order, the 5 values of A.  For the last two records, A will be undefined.  All other properties will be duplicated on each record.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>20</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Data Manipulators\Unmerge Data</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="RegistrationVersion">17.1.0.119</sci:propval>
				</sci:proplist>
			</sci:data>
			<sci:data object="SciTegic.RangeScreen.1">
				<sci:component name="Range Filter" version="2">
					<sci:arg name="List" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>A list of which data records to pass:
  e.g.,  1,3-5,7,10-11
     will pass the first, third, fourth, fifth and so on.</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Dec 13 12:38:32 2002</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;List&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>if (strlength(parameter(&apos;List&apos;, 2)) &gt; 0) then
	&quot;Filter range &quot; . parameter(&apos;List&apos;, 2);
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0C71D911-BF35-4A1B-8B2C-B9A586BD39F3}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Range Filter</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>690 -455</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records within a specified range based on the order in which they arrive</sci:value>
						<sci:value>&lt;p&gt;Data records are numbered consecutively (from 1) as they arrive at the component.  The record numbers specified by &lt;i&gt;List&lt;/i&gt; are sent out the Pass port. Records not specified are sent out the Fail port.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;List&lt;/i&gt; items need to be entered as comma-separated values. &lt;i&gt;List&lt;/i&gt; can accept single item indices or ranges (such as &quot;1-5,7,9,13-15&quot;).&lt;/p&gt; 

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records whose indices match the specified list</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records whose indices do not match the specified list</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>38</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Data Filters\Range Filter</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Subprotocol" version="2">
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval>False</sci:legalval>
						<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Subprotocol 2</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>SUBPROTOCOLNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>990 -455</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.2.0.1267</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>90</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>37</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>@Save_to := PATH.&apos;_Proj&apos;;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.FolderNavigator.1">
						<sci:component name="List Files" version="2">
							<sci:arg name="Directory Path" type="LinkDataPropertyType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingRevertInfo" ishidden="true" base64="UI1">Al1HAALiAVRoZSBwYXRoIHRvIHRoZSBkaXJlY3RvcnkgdGhhdCB3aWxsIGJlIHNlYXJjaGVkIGZvciBmaWxlcyBvciBmb2xkZXJzLiBDYW4gYmUgYSBwYXRoIG9uIHRoZSBzZXJ2ZXIgb3IgYSBuZXR3b3JrIHJlc291cmNlLgo8cD4KPHVsPgo8bGk+Rm9yIGEgZGlyZWN0b3J5IG9uIG9yIGFjY2Vzc2libGUgdG8gdGhlIHNlcnZlciAoZS5nLiwgdmlhIE5GUyksIGVudGVyIGEgcGF0aC48L2xpPgo8bGk+Rm9yIGEgbmV0d29yayByZXNvdXJjZSwgZW50ZXIgYSBuZXR3b3JrIFVSTCBpbiB0aGUgZm9ybSA8Yj5wcm90b2NvbDovL3NlcnZlcjpwb3J0Ly4uLjwvYj4uIChJZiBwb3J0IGlzIG9taXR0ZWQsIGEgZGVmYXVsdCBpcyB1c2VkLikgUHJvdG9jb2xzIHN1cHBvcnRlZCBhcmU6Cgk8dWw+Cgk8bGk+aHR0cDwvbGk+Cgk8bGk+aHR0cHM8L2xpPgoJPGxpPmhkZnMgKEhhZG9vcCBEaXN0cmlidXRlZCBGaWxlIFN5c3RlbSk8L2xpPgoJPC91bD4KPC9saT4KPC91bD44RGlyZWN0b3J5VHlwZQAMAAAAAAEAAQAEAfwAAAAAAAAAAAA8RGlyZWN0b3J5IFBhdGgDzFPPuwFyXFxDVENSRmlsZTEuYWQudGFtaHNjLmVkdVxDVENSLVN0b3IyJFxNWCBJbWFnZVN0b3JlMlxOYVpoYW9cMjAxOTA1MDEtVDExWmNhZC1jb2F0XDIwMTktMDctMTVfcmVmb3JtYXR0ZWRcWl9zdGFja3MA</sci:propval>
									<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">DirectoryType</sci:propval>
									<sci:propval name="SCI_EvalOnInit" ishidden="true" boolVal="true"/>
									<sci:propval name="SCI_EvalOnInitType" ishidden="true">DirectoryType</sci:propval>
								</sci:metaproplist>
								<sci:help>The path to the directory that will be searched for files or folders. Can be a path on the server or a network resource.
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a directory on or accessible to the server (e.g., via NFS), enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http&lt;/li&gt;
	&lt;li&gt;https&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>Recurse Directories</sci:member>
								<sci:member>Directory Path Authentication Options</sci:member>
								<sci:value>Path</sci:value>
							</sci:arg>
							<sci:arg name="Directory Path Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>For http and https sources, you may optionally specify authentication information for the URL in the following parameters</sci:help>
								<sci:member>Directory Path Authentication Options Username</sci:member>
								<sci:member>Directory Path Authentication Options Password</sci:member>
								<sci:member>Directory Path Authentication Options Authentication Method</sci:member>
								<sci:member>Directory Path Authentication Options KDC Server</sci:member>
								<sci:member>Directory Path Authentication Options KDC Realm</sci:member>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Directory Path Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Determines which method to use during authentication with an HTTP or HTTPS directory.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
								<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
							</sci:arg>
							<sci:arg name="Directory Path Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Directory.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="Directory Path Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>The password used to authenticate with the Directory&apos;s server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Directory Path Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Directory Path Authentication Options KDC Server" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>When connecting to an HDFS URL, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Directory Path Authentication Options KDC Realm" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>When connecting to an HDFS URL, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Recurse Directories" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If True, the Directory Path will be searched recursively.  If False, the list will only include items contained directly by the specified Directory Path.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Filter" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;A regular expression used to identify the files or subdirectories that should be returned.  The component uses Perl regular expression syntax. 
&lt;p&gt;
&lt;b&gt;Examples:&lt;/b&gt;
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;.*&lt;/b&gt; will return all files or subdirectories&lt;/li&gt;
&lt;li&gt;&lt;b&gt;\.txt$&lt;/b&gt; will return all .txt files
&lt;li&gt;&lt;b&gt;\.(sd|sdf)$&lt;/b&gt; will return all .sd and .sdf files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;b&gt;^Assay&lt;/b&gt;&lt;/code&gt; will return all files whose names start with &quot;Assay&quot;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>.+</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Property</sci:member>
								<sci:member>Search Type</sci:member>
								<sci:member>Additional Properties</sci:member>
							</sci:arg>
							<sci:arg name="Property" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>Name of the property that will be added to the data stream which contains the path to the files or subdirectories.</sci:help>
								<sci:value>Path</sci:value>
							</sci:arg>
							<sci:arg name="Search Type" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Whether to search the Directory Path for files or for subdirectories</sci:help>
								<sci:legalval>Files</sci:legalval>
								<sci:legalval selected="true">Subdirectories</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Properties" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>Additional properties for each file or subdirectory that should be added to the property list. 

The size property is in bytes. If greater than 2147483647, the output property is a double precision value, otherwise an integer.
 
The date properties are pilot DateTimeValues and can be manipulated with the appropriate DateTime pilotscript functions. The utility of the Last Accessed Date depends on the operating system.

The file name property is extracted directly as the leaf item from the full path.

Note that adding file system properties will incur some additional overhead, so be sure to switch off any properties that you are not using.</sci:help>
								<sci:legalval>Size</sci:legalval>
								<sci:legalval>Owner</sci:legalval>
								<sci:legalval>Creation Date</sci:legalval>
								<sci:legalval>Last Accessed Date</sci:legalval>
								<sci:legalval>Last Modified Date</sci:legalval>
								<sci:legalval selected="true">File Name</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:value>ComponentReturnsPass</sci:value>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>List Files</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>List Files Internal</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>GENERATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DEF452A5-8A41-A363-C7ED-990B13235DE6}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Lists the files or folders in the specified directory on the server, from an HTTP WebDav server such as Microsoft SharePoint, or from Hadoop HDFS</sci:value>
								<sci:value>&lt;p&gt;Outputs a list of filenames in the specified directory. &lt;i&gt;Search Type&lt;/i&gt; can be switched to search for Subdirectory names as required.&lt;/p&gt;

&lt;p&gt;One data record is generated for each file found in &lt;i&gt;Directory Path&lt;/i&gt;.  To list files recursively in subfolders within &lt;i&gt;Directory Path&lt;/i&gt;, &lt;i&gt;Recurse Directories&lt;/i&gt; should be True.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Filter&lt;/i&gt; is a regular expression used to specify which files to return from each searched directory.&lt;/p&gt;

&lt;p&gt;The &lt;i&gt;Additional Properties&lt;/i&gt; parameter can be set to add selected meta data properties to the output, related to the named file or directory.&lt;/p&gt;

&lt;p&gt;For HTTP WebDav document repositories such as Microsoft SharePoint, you can specify an HTTP url as the &lt;i&gt;Directory Path&lt;/i&gt; and include authentication options for connecting to the remote server.&lt;/p&gt;</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1581</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 07 15:42:13 2017</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\File Utilities\List Files</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Subprotocol" version="2">
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval>False</sci:legalval>
								<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
								<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Subprotocol 1</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>SUBPROTOCOLNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -95</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
								<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.2.0.1267</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>50</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@Save_to_temp := @Save_to.&apos;\&apos;.%&apos;File Name&apos;;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.FolderNavigator.1">
								<sci:component name="List Files" version="2">
									<sci:arg name="Directory Path" type="LinkDataPropertyType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" ishidden="true" base64="UI1">Al1HAALiAVRoZSBwYXRoIHRvIHRoZSBkaXJlY3RvcnkgdGhhdCB3aWxsIGJlIHNlYXJjaGVkIGZvciBmaWxlcyBvciBmb2xkZXJzLiBDYW4gYmUgYSBwYXRoIG9uIHRoZSBzZXJ2ZXIgb3IgYSBuZXR3b3JrIHJlc291cmNlLgo8cD4KPHVsPgo8bGk+Rm9yIGEgZGlyZWN0b3J5IG9uIG9yIGFjY2Vzc2libGUgdG8gdGhlIHNlcnZlciAoZS5nLiwgdmlhIE5GUyksIGVudGVyIGEgcGF0aC48L2xpPgo8bGk+Rm9yIGEgbmV0d29yayByZXNvdXJjZSwgZW50ZXIgYSBuZXR3b3JrIFVSTCBpbiB0aGUgZm9ybSA8Yj5wcm90b2NvbDovL3NlcnZlcjpwb3J0Ly4uLjwvYj4uIChJZiBwb3J0IGlzIG9taXR0ZWQsIGEgZGVmYXVsdCBpcyB1c2VkLikgUHJvdG9jb2xzIHN1cHBvcnRlZCBhcmU6Cgk8dWw+Cgk8bGk+aHR0cDwvbGk+Cgk8bGk+aHR0cHM8L2xpPgoJPGxpPmhkZnMgKEhhZG9vcCBEaXN0cmlidXRlZCBGaWxlIFN5c3RlbSk8L2xpPgoJPC91bD4KPC9saT4KPC91bD44RGlyZWN0b3J5VHlwZQAMAAAAAAEAAAEcVGhpcyBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQuBAH8AAAAAAAAAAAAPERpcmVjdG9yeSBQYXRoA8xTz7sEAA==</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">DirectoryType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" ishidden="true" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType" ishidden="true">DirectoryType</sci:propval>
										</sci:metaproplist>
										<sci:help>The path to the directory that will be searched for files or folders. Can be a path on the server or a network resource.
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a directory on or accessible to the server (e.g., via NFS), enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http&lt;/li&gt;
	&lt;li&gt;https&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:member>Recurse Directories</sci:member>
										<sci:member>Directory Path Authentication Options</sci:member>
										<sci:value>Path</sci:value>
									</sci:arg>
									<sci:arg name="Directory Path Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>For http and https sources, you may optionally specify authentication information for the URL in the following parameters</sci:help>
										<sci:member>Directory Path Authentication Options Username</sci:member>
										<sci:member>Directory Path Authentication Options Password</sci:member>
										<sci:member>Directory Path Authentication Options Authentication Method</sci:member>
										<sci:member>Directory Path Authentication Options KDC Server</sci:member>
										<sci:member>Directory Path Authentication Options KDC Realm</sci:member>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Directory Path Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Determines which method to use during authentication with an HTTP or HTTPS directory.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
										<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
									</sci:arg>
									<sci:arg name="Directory Path Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Directory.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Directory Path Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>The password used to authenticate with the Directory&apos;s server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Directory Path Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Directory Path Authentication Options KDC Server" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>When connecting to an HDFS URL, KDC Server and Realm are also required</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Directory Path Authentication Options KDC Realm" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>When connecting to an HDFS URL, KDC Server and Realm are also required</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Recurse Directories" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>If True, the Directory Path will be searched recursively.  If False, the list will only include items contained directly by the specified Directory Path.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Filter" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;A regular expression used to identify the files or subdirectories that should be returned.  The component uses Perl regular expression syntax. 
&lt;p&gt;
&lt;b&gt;Examples:&lt;/b&gt;
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;.*&lt;/b&gt; will return all files or subdirectories&lt;/li&gt;
&lt;li&gt;&lt;b&gt;\.txt$&lt;/b&gt; will return all .txt files
&lt;li&gt;&lt;b&gt;\.(sd|sdf)$&lt;/b&gt; will return all .sd and .sdf files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;b&gt;^Assay&lt;/b&gt;&lt;/code&gt; will return all files whose names start with &quot;Assay&quot;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>.tif$</sci:value>
									</sci:arg>
									<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>Property</sci:member>
										<sci:member>Search Type</sci:member>
										<sci:member>Additional Properties</sci:member>
									</sci:arg>
									<sci:arg name="Property" type="PropertyNameType" required="true" visibility="visible" multi="false">
										<sci:help>Name of the property that will be added to the data stream which contains the path to the files or subdirectories.</sci:help>
										<sci:value>Path</sci:value>
									</sci:arg>
									<sci:arg name="Search Type" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to search the Directory Path for files or for subdirectories</sci:help>
										<sci:legalval selected="true">Files</sci:legalval>
										<sci:legalval>Subdirectories</sci:legalval>
									</sci:arg>
									<sci:arg name="Additional Properties" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Additional properties for each file or subdirectory that should be added to the property list. 

The size property is in bytes. If greater than 2147483647, the output property is a double precision value, otherwise an integer.
 
The date properties are pilot DateTimeValues and can be manipulated with the appropriate DateTime pilotscript functions. The utility of the Last Accessed Date depends on the operating system.

The file name property is extracted directly as the leaf item from the full path.

Note that adding file system properties will incur some additional overhead, so be sure to switch off any properties that you are not using.</sci:help>
										<sci:legalval>Size</sci:legalval>
										<sci:legalval>Owner</sci:legalval>
										<sci:legalval>Creation Date</sci:legalval>
										<sci:legalval>Last Accessed Date</sci:legalval>
										<sci:legalval>Last Modified Date</sci:legalval>
										<sci:legalval selected="true">File Name</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:value>ComponentReturnsPass</sci:value>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>List Files</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>List Files Internal</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>GENERATORNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DEF452A5-8A41-A363-C7ED-990B13235DE6}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Lists the files or folders in the specified directory on the server, from an HTTP WebDav server such as Microsoft SharePoint, or from Hadoop HDFS</sci:value>
										<sci:value>&lt;p&gt;Outputs a list of filenames in the specified directory. &lt;i&gt;Search Type&lt;/i&gt; can be switched to search for Subdirectory names as required.&lt;/p&gt;

&lt;p&gt;One data record is generated for each file found in &lt;i&gt;Directory Path&lt;/i&gt;.  To list files recursively in subfolders within &lt;i&gt;Directory Path&lt;/i&gt;, &lt;i&gt;Recurse Directories&lt;/i&gt; should be True.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Filter&lt;/i&gt; is a regular expression used to specify which files to return from each searched directory.&lt;/p&gt;

&lt;p&gt;The &lt;i&gt;Additional Properties&lt;/i&gt; parameter can be set to add selected meta data properties to the output, related to the named file or directory.&lt;/p&gt;

&lt;p&gt;For HTTP WebDav document repositories such as Microsoft SharePoint, you can specify an HTTP url as the &lt;i&gt;Directory Path&lt;/i&gt; and include authentication options for connecting to the remote server.&lt;/p&gt;</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1581</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Sep 07 15:42:13 2017</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\File Utilities\List Files</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Subprotocol" version="2">
									<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
										<sci:member>RunToCompletion Categorize Using</sci:member>
										<sci:legalval selected="true">False</sci:legalval>
										<sci:legalval>True - For Each Data Record</sci:legalval>
										<sci:legalval>True - For Each Category</sci:legalval>
									</sci:arg>
									<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
										<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>IXM file name parser</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>SUBPROTOCOLNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>790</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>666 -95</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
										<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.2.0.1267</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/coreutils</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>#row := &apos;A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF&apos;;
EXPAND(&apos;,&apos;,#ROW);

FOR #i in 1 .. numvalues(#Row) LOOP
	FOR #j in 1 .. 48 LOOP
		append(@GenericWells,#Row[#i].format(&apos;%02d&apos;,#j));
	END LOOP;
END LOOP;

@FIRST := TRUE;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>property(&apos;Path&apos;) RLIKE(&apos;ZStep_&apos;)</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -470</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>NOT property(&apos;File Name&apos;) RLIKE(&apos;thumb&apos;)</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -470</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>#temp := property(&apos;File Name&apos;);
expand(&apos;_&apos;,#temp);

PlateID:=#temp[1];

FOR #i in 1 .. numvalues(#temp) LOOP
	IF contains(@GenericWells, #temp[#i]) OR
	   contains(@GenericWells, substring(#temp[#i],1,3))THEN
		WellID:=#temp[#i];
		Row := substring(WellID,1,1);
		Col := integer(substring(WellID,2,2));
	END IF;
END LOOP;

Field := 1;
FOR #i in 1 .. numvalues(#temp) LOOP
	IF substring(#temp[#i],1,1) eq &apos;s&apos; THEN
		Field:=integer(strReplace(#temp[#i],&apos;s&apos;,&apos;&apos;));
	END IF;
END LOOP;

Channel := &apos;ch00&apos;;
@MultiWV := false;
FOR #i in 1 .. numvalues(#temp) LOOP
	IF substring(#temp[#i],1,1) eq &apos;w&apos; THEN
		@MultiWV := true;
		Channel := &apos;ch0&apos;.integer(substring(#temp[#i],2,1));
	END IF;
END LOOP;

IF PATH RLIKE(&apos;ZStep_&apos;) THEN
	#Path := Path;
	expand(&apos;\&apos;,#Path);
	zPlane := format(&apos;%02i&apos;,subString(#Path[numvalues(#Path)-1],7));
ELSE
	zPlane := 1;
END IF;

Cp := &apos;$(Cp_to)\Z_stacks\&apos;.Row.&apos;_&apos;.Col.&apos;\Image_z&apos;.zPlane.&apos;_&apos;.Channel.&apos;_t&apos;.Field.&apos;.tif&apos;;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -470</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:connectid from="2" to="3" type="true"/>
									<sci:connectid from="3" to="1" type="true"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.SortData.1">
								<sci:component name="Sort Data" version="2">
									<sci:arg name="Sort By" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
										<sci:help>Defines properties for sorting. Use this parameter to add, remove and reorder properties to be used for sorting.</sci:help>
										<sci:member>Property 1</sci:member>
										<sci:member>Property 2</sci:member>
										<sci:member>Property 3</sci:member>
										<sci:member>Property 4</sci:member>
									</sci:arg>
									<sci:arg name="Property 1" type="PropertyNameType" required="true" visibility="visible" multi="false">
										<sci:help>The property to sort by.</sci:help>
										<sci:member>Property 1 Sort Order</sci:member>
										<sci:member>Property 1 Sort As</sci:member>
										<sci:value>Row</sci:value>
									</sci:arg>
									<sci:arg name="Property 1 Sort Order" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to sort in ascending or descending order.</sci:help>
										<sci:legalval selected="true">Ascending</sci:legalval>
										<sci:legalval>Descending</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 1 Sort As" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
										<sci:legalval>Numbers</sci:legalval>
										<sci:legalval selected="true">Text</sci:legalval>
										<sci:legalval>Case Sensitive Text</sci:legalval>
										<sci:legalval>Text Containing Numbers</sci:legalval>
										<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
										<sci:legalval>Dates</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 2" type="PropertyNameType" required="false" visibility="visible" multi="false">
										<sci:help>The property to sort by.</sci:help>
										<sci:member>Property 2 Sort Order</sci:member>
										<sci:member>Property 2 Sort As</sci:member>
										<sci:value>Col</sci:value>
									</sci:arg>
									<sci:arg name="Property 2 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to sort in ascending or descending order.</sci:help>
										<sci:legalval selected="true">Ascending</sci:legalval>
										<sci:legalval>Descending</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 2 Sort As" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">Numbers</sci:legalval>
										<sci:legalval>Text</sci:legalval>
										<sci:legalval>Case Sensitive Text</sci:legalval>
										<sci:legalval>Text Containing Numbers</sci:legalval>
										<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
										<sci:legalval>Dates</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 3" type="PropertyNameType" required="false" visibility="visible" multi="false">
										<sci:help>The property to sort by.</sci:help>
										<sci:member>Property 3 Sort Order</sci:member>
										<sci:member>Property 3 Sort As</sci:member>
										<sci:value>Field</sci:value>
									</sci:arg>
									<sci:arg name="Property 3 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to sort in ascending or descending order.</sci:help>
										<sci:legalval selected="true">Ascending</sci:legalval>
										<sci:legalval>Descending</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 3 Sort As" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">Numbers</sci:legalval>
										<sci:legalval>Text</sci:legalval>
										<sci:legalval>Case Sensitive Text</sci:legalval>
										<sci:legalval>Text Containing Numbers</sci:legalval>
										<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
										<sci:legalval>Dates</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 4" type="PropertyNameType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>The property to sort by.</sci:help>
										<sci:member>Property 4 Sort Order</sci:member>
										<sci:member>Property 4 Sort As</sci:member>
										<sci:value>zPlane</sci:value>
									</sci:arg>
									<sci:arg name="Property 4 Sort Order" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Whether to sort in ascending or descending order.</sci:help>
										<sci:legalval selected="true">Ascending</sci:legalval>
										<sci:legalval>Descending</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 4 Sort As" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">Numbers</sci:legalval>
										<sci:legalval>Text</sci:legalval>
										<sci:legalval>Case Sensitive Text</sci:legalval>
										<sci:legalval>Text Containing Numbers</sci:legalval>
										<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
										<sci:legalval>Dates</sci:legalval>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>You can provide this to only return this number of records. This is useful when you only want to see the &quot;best&quot; record or records.</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Mar 27 13:39:02 2017</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>/* Start from &apos;Property 1&apos; since it must be defined.
   Keep this following line for the client auto-rename to use.
	 Parameter(&apos;Property 1&apos;), 
     Parameter(&apos;Property 2&apos;), 
	 Parameter(&apos;Property 3&apos;)
	 Parameter(&apos;Property 4&apos;)
	 Parameter(&apos;Property 5&apos;)
 */
if (trim(strlength(parameter(&apos;Property 1&apos;, 2))) &gt; 0) then
	#name := &quot;Sort on &quot; . trim(parameter(&apos;Property 1&apos;, 2));
	
	/* Get other sort properties that have values */
	#paramKey := &apos;Property &apos;;
	#count := 2;
	#paramName := #paramKey . #count;

	while (#count &lt;= 5 and parameter(#paramName, 2) is defined)
	loop
		if (strlength(parameter(#paramName, 2)) &gt; 0) then		
			#name := #name . &apos;, &apos;;
			#name := #name . parameter(#paramName, 2);
		end if;
	
		#count++;
		#paramName := #paramKey . #count;
	end loop;
	#name;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Sort Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{BC934106-6EA5-44e1-93C3-8787DECA9D15}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>954 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Sorts data records according to one or more properties</sci:value>
										<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sort By&lt;/i&gt; parameter to add more properties for sorting.&lt;/p&gt;

&lt;p&gt;When multiple properties are used by sorting, the property values of &lt;i&gt;Property 1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;Property 2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;Property 3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The order of sorting can be changed using &lt;i&gt;Sort Order&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;li&gt;Records containing Null or undefined &lt;i&gt;Sort By&lt;/i&gt; properties will be output to the Fail Port.
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records in sorted order</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records that do not contain the sort field(s)</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1396</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Sort Data</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>Save := @Save_to</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1242 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>4</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.GroupData.1">
								<sci:component name="Group Data by Tag" version="2">
									<sci:arg name="GroupUsing" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The name of a property or list of properties separated by commas that act as a common key for those records to be grouped
</sci:help>
										<sci:member>GroupUsingListType</sci:member>
										<sci:value>Row,Col,Field,Channel</sci:value>
									</sci:arg>
									<sci:arg name="GroupUsingListType" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Indicates how &quot;GroupUsing&quot; properties are interpreted when  more than one property is listed:
 
    - UseFirstDefinedValue: Group using only the first property in the list with a defined value for a record.
 
  - UseAllValues: Groups using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.</sci:help>
										<sci:legalval>UseFirstDefinedValue</sci:legalval>
										<sci:legalval selected="true">UseAllValues</sci:legalval>
									</sci:arg>
									<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>GroupName</sci:member>
										<sci:member>Data Are Sorted</sci:member>
									</sci:arg>
									<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>If given, a new property called &quot;GroupName&quot; is created with this value. It can aid in unpacking only selected groups by name.
</sci:help>
										<sci:value>Data</sci:value>
									</sci:arg>
									<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;GroupUsing&lt;/i&gt; properties. If so, then the grouping can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Mar 16 08:27:06 2011</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{3FDE8197-D86F-4EB0-99FF-82D6430AF466}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;GroupUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>if (strlength(trim(parameter(&apos;GroupUsing&apos;, 2))) &gt; 0) then
	&quot;Group on &quot; . trim(parameter(&apos;GroupUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>JOINNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Group Data by Tag</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1530 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Groups all data records with the same property value into a single data record</sci:value>
										<sci:value>&lt;p&gt;&lt;i&gt;GroupUsing&lt;/i&gt; specifies the property or comma separated list of properties to use for determining which records will be grouped together.  These grouped data records can later be unbundled by &lt;i&gt;Ungroup Data&lt;/i&gt;.  Any records lacking the &lt;i&gt;GroupUsing&lt;/i&gt; key are sent out the Fail port.&lt;/p&gt;

&lt;p&gt;
One use of grouped data is to provide input to a subprotocol for which &lt;i&gt;RunToCompletion&lt;/i&gt; has been set to True. The subprotocol will then operate on each group independently. You would typically use &lt;i&gt;Ungroup Data&lt;/i&gt; as the first component of the subprotocol.
&lt;p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;No data are lost or changed when you create a grouped record from separate data records.  Grouping is simply a way to bundle records together.
&lt;li&gt;For the purpose of matching records to be grouped, the &lt;i&gt;GroupUsing&lt;/i&gt; property is treated as a string. (Thus, for example, the values &quot;1.0&quot; and &quot;1&quot; do not match.)
&lt;li&gt;The new data record has three properties defined at the top level:
	&lt;ul&gt;
	&lt;li&gt;&lt;b&gt;GroupName&lt;/b&gt; contains the name of the group as specified by the parameter &lt;i&gt;GroupName&lt;/i&gt;.&lt;/li&gt;  
	&lt;li&gt;&lt;b&gt;NumberInGroup&lt;/b&gt; contains the number of records in the group. 
	&lt;li&gt; The properties named by &lt;i&gt;GroupUsing&lt;/i&gt; contain the values of these properties shared by all members of the group.&lt;/li&gt;
	&lt;/ul&gt;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To group every N data records together as an alternative to using a &lt;i&gt;GroupUsing&lt;/i&gt; property, use &lt;a href=&quot;javascript:DoLink(&apos;{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}&apos;)&quot;&gt;Group Data by Number&lt;/a&gt;
&lt;li&gt;To separate the grouped data into the original records, use &lt;a href=&quot;javascript:DoLink(&apos;{57833F08-BD53-42AE-A14C-87EED61B8FBD}&apos;)&quot;&gt;Ungroup Data&lt;/a&gt;.  You would typically use Ungroup Data as the first component of a &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocol designed to operate on grouped data.
&lt;li&gt;For a different approach to combining data records, analogous to a database join operation, see &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records, each containing a collection of grouped records stored in a hierarchy</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records that lack the &lt;i&gt;GroupUsing&lt;/i&gt; property</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>8.4.5.20</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Group Data by Tag</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.RangeScreen.1">
								<sci:component name="Range Filter" version="2">
									<sci:arg name="List" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>A list of which data records to pass:
  e.g.,  1,3-5,7,10-11
     will pass the first, third, fourth, fifth and so on.</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Fri Dec 13 12:38:32 2002</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;List&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>if (strlength(parameter(&apos;List&apos;, 2)) &gt; 0) then
	&quot;Filter range &quot; . parameter(&apos;List&apos;, 2);
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0C71D911-BF35-4A1B-8B2C-B9A586BD39F3}</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Range Filter</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1818 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records within a specified range based on the order in which they arrive</sci:value>
										<sci:value>&lt;p&gt;Data records are numbered consecutively (from 1) as they arrive at the component.  The record numbers specified by &lt;i&gt;List&lt;/i&gt; are sent out the Pass port. Records not specified are sent out the Fail port.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;List&lt;/i&gt; items need to be entered as comma-separated values. &lt;i&gt;List&lt;/i&gt; can accept single item indices or ranges (such as &quot;1-5,7,9,13-15&quot;).&lt;/p&gt; 

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records whose indices match the specified list</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records whose indices do not match the specified list</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>7</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Filters\Range Filter</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Subprotocol" version="2">
									<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
										<sci:member>RunToCompletion Categorize Using</sci:member>
										<sci:legalval>False</sci:legalval>
										<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
										<sci:legalval>True - For Each Category</sci:legalval>
									</sci:arg>
									<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
										<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>66.64.66.200:9918</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>30</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Subprotocol 1</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>SUBPROTOCOLNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>790</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>2106 -95</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
										<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.2.0.1267</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/coreutils</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>6</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@WellName := Channel.&apos;_&apos;.Row.&apos;_&apos;.Col.&apos;_t&apos;.Field</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.UngroupData.1">
										<sci:component name="Ungroup Data" version="2">
											<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
												<sci:help>Contains less commonly used parameters</sci:help>
												<sci:member>GroupName</sci:member>
											</sci:arg>
											<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>(Optional) Restricts the ungroup process to only those groups having the given name -- the same name as specified by the &quot;Group Data&quot; component</sci:help>
												<sci:value>Data</sci:value>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Jan 19 10:40:59 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Ungroup Data</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>GENERATORNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Ungroup Data</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{57833F08-BD53-42AE-A14C-87EED61B8FBD}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Separates data records previously grouped together into the original records</sci:value>
												<sci:value>&lt;p&gt;The input record is assumed to be a grouped data record.  The individual records are extracted from the group and sent out the Pass port.  The incoming data record is discarded.&lt;/p&gt;

&lt;p&gt;You would typically use Ungroup Data as the first component inside a &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocol that expects grouped data.  This executes the remainder of the subprotocol over the individual data records in the group.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;It is possible to have a group which in turn has another group as one of its members (nested groups). In this case, ungrouping will separate only the top level groups. Multiple Ungroup Data components operating in series are needed to separate nested groups.&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To group data records together use &lt;a href=&quot;javascript:DoLink(&apos;{3FDE8197-D86F-4EB0-99FF-82D6430AF466}&apos;)&quot;&gt;Group Data by Tag&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}&apos;)&quot;&gt;Group Data by Number&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To view the structure of grouped data records use &lt;a href=&quot;javascript:DoLink(&apos;{AA4369ED-A1A1-4949-8520-39B23096ACFD}&apos;)&quot;&gt;Data Record Tree Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To learn more about &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocols, see the parameter help on &lt;a href=&quot;javascript:DoLink(&apos;{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}&apos;)&quot;&gt;Subprotocol&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value>Data records with a hierarchical group of other data records</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value>The individual data records that were contained within a hierarchical group of the incoming data</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value>Data records on which the GroupName property is missing</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.0.0.6</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>10</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Data Manipulators\Ungroup Data</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>Text := &apos;open(&quot;&apos;.strReplace(Path,&apos;\&apos;,&apos;/&apos;).&apos;&quot;);
run(&quot;Invert&quot;);
run(&quot;Subtract Background...&quot;, &quot;rolling=10 stack&quot;);

&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="Keep Properties" version="2">
											<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
												<sci:help>The list of property names to keep</sci:help>
												<sci:member>RenameList</sci:member>
												<sci:value>text</sci:value>
											</sci:arg>
											<sci:arg name="RenameList" type="PropertyNameType" required="false" visibility="visible" multi="true">
												<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>Keep</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue Sep 13 07:18:38 2016</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Keep &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Keeps only the specified properties</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>With only the specified properties remaining</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>17.1.0.119</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep Properties</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.TextWriter.1">
										<sci:component name="Text Writer" version="2">
											<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
												<sci:help>The location to which to write the data. Can be a file, a network resource, a global property, or a data record property.
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot; and add an output port.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
												<sci:member>Maximum</sci:member>
												<sci:member>IfFileExists</sci:member>
												<sci:member>CharacterEncoding</sci:member>
												<sci:member>Authentication Options</sci:member>
												<sci:value>$(JobDir)\macro.ijm</sci:value>
											</sci:arg>
											<sci:arg name="Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
												<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
												<sci:member>Username</sci:member>
												<sci:member>Password</sci:member>
												<sci:member>Authentication Method</sci:member>
												<sci:member>KDC Server</sci:member>
												<sci:member>KDC Realm</sci:member>
												<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
												<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
												<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
												<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
											</sci:arg>
											<sci:arg name="Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
												<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
											</sci:arg>
											<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
												<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
												<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
												<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
												<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
												<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>The maximum number of data records to write. If empty, all records are written out.</sci:help>
											</sci:arg>
											<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Specifies action to take if a file specified by &lt;i&gt;Destination&lt;/i&gt; already exists. Options are:
&lt;ul&gt;
&lt;li&gt;Overwrite: Replace the existing file with the new content.
&lt;li&gt;Append: Append the new content to the end of the existing file.
&lt;li&gt;Halt: Raise an error and halt the protocol.
&lt;/ul&gt;
</sci:help>
												<sci:legalval selected="true">Overwrite</sci:legalval>
												<sci:legalval>Append</sci:legalval>
												<sci:legalval>Halt</sci:legalval>
											</sci:arg>
											<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>Specifies the character set encoding to use within the destination file. Options are:
&lt;ul&gt;
&lt;li&gt;ANSI: an encoding where each character is defined by a single byte. This allows the Latin-1 (ISO-8859-1) character set to be written to the file. Virtually all applications can read these files.
&lt;li&gt;UTF-8: a variable length encoding supporting all Unicode characters. Each character is represented by 1 to 6 bytes. This allows writing out any extended characters specified in the Unicode character sets while minimizing the size of the file when most characters are from the ANSI set. Some applications do not support UTF-8 files.
&lt;li&gt;Unicode: (also known as UCS-2) represents each character by exactly 2 bytes in &quot;little-endian&quot; order. Many applications do not support this encoding.
&lt;li&gt;Unicode big endian: represents each character by exactly 2 bytes in &quot;big-endian&quot; order. Many applications do not support this encoding.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you choose an option other than ANSI, then take note of the &lt;i&gt;UseByteOrderMark&lt;/i&gt; setting.
&lt;li&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;.
&lt;li&gt;The UCS-2 encoding has been superseded by &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/UTF-16&apos;)&quot;&gt;UTF-16&lt;/a&gt; but the two 
are equivalent for all characters in the &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane&apos;)&quot;&gt;Basic Multilingual Plane&lt;/a&gt; .
&lt;/ul&gt;
</sci:help>
												<sci:member>UseByteOrderMark</sci:member>
												<sci:legalval selected="true">ANSI</sci:legalval>
												<sci:legalval>UTF-8</sci:legalval>
												<sci:legalval>Unicode</sci:legalval>
												<sci:legalval>Unicode big endian</sci:legalval>
											</sci:arg>
											<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Specifies whether to use a byte order mark (BOM) when writing a file with a &lt;i&gt;CharacterEncoding&lt;/i&gt; other than ANSI. The BOM is a set of 2 or 3 bytes written to the start of a file or data stream to indicate the character encoding of the following data. BOMs are more widely used in Windows than in Linux environments. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;p&gt;
Options are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always: For non-ANSI encodings, always writes a BOM at the start of the output stream.
&lt;li&gt;Never: Never writes a BOM at the start of the output stream.
&lt;li&gt;Native: Equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.
&lt;/ul&gt;</sci:help>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a value other than &quot;ANSI&quot;&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
												<sci:legalval selected="true">Always</sci:legalval>
												<sci:legalval>Never</sci:legalval>
												<sci:legalval>Native</sci:legalval>
											</sci:arg>
											<sci:arg name="Delimiter Options" type="GroupType" required="false" visibility="visible" multi="false">
												<sci:member>BeginningText</sci:member>
												<sci:member>EndingText</sci:member>
											</sci:arg>
											<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Text that should precede each record written out.</sci:help>
											</sci:arg>
											<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Any text to be included after each record written out.</sci:help>
											</sci:arg>
											<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
												<sci:help>Contains less commonly used parameters</sci:help>
												<sci:member>PropertyNames</sci:member>
												<sci:member>IncludePropertyNames</sci:member>
												<sci:member>HierarchyDepth</sci:member>
												<sci:member>NewlineStyle</sci:member>
											</sci:arg>
											<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>List of properties to write (separated by commas). &quot;*&quot; indicates to write all properties.</sci:help>
												<sci:value>*</sci:value>
											</sci:arg>
											<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
												<sci:help>Display the name of each property along with its values</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="HierarchyDepth" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>Controls the maximum depth within hierarchical data records to display node and property information.  No hierarchical information will be displayed if depth is set to -1.  If no value is set, the default is 0.</sci:help>
											</sci:arg>
											<sci:arg name="NewlineStyle" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;
Set this value to define the line ending character(s) in the output file. The default value is the Windows-standard carriage return plus line feed (CR+LF), but you may need to change this, especially in a non-Windows environment. Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CR+LF (Traditional Windows text file line ending)&lt;/li&gt;
&lt;li&gt;LF (Line feed, &apos;\n&apos;, 0x0A)&lt;/li&gt;
&lt;li&gt;CR (Carriage return, &apos;\r&apos;, 0x0D)&lt;/li&gt;
&lt;li&gt;Native (CR+LF on Windows, LF on Linux)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
												<sci:legalval selected="true">CR+LF</sci:legalval>
												<sci:legalval>LF</sci:legalval>
												<sci:legalval>CR</sci:legalval>
												<sci:legalval>Native</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Sep 07 15:31:10 2017</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DOCUMENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1242 -95</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Text Writer</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Writes data records to a text file</sci:value>
												<sci:value>&lt;p&gt;Data records are formatted as text and written to the file specified by &lt;i&gt;Destination&lt;/i&gt;. Each property value is separated by a new line. Separation of data records can be controlled using the parameters under &lt;i&gt;Delimiter Options&lt;/i&gt;.
&lt;/p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;HierarchyDepth&lt;/i&gt; to control the display of deep properties and nodes from hierarchical data records.&lt;/li&gt; 
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To write a file formatted with one data record per row with delimiters 
  between the property values, use the
&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;Delimited Text Writer&lt;/a&gt;.  &lt;/li&gt;
&lt;li&gt;To write out binary data (such as a .png file),
use the &lt;a href=&quot;javascript:DoLink(&apos;{BF2A2E90-418A-4C0B-8550-B2C4D5554628}&apos;)&quot;&gt;Binary Writer&lt;/a&gt;.
 &lt;/li&gt;
&lt;/ul&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>18.1.0.1581</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>text := &apos;
run(&quot;Concatenate...&quot;, &quot;all_open&quot;);

run(&quot;Stack Focuser &quot;, &quot;enter=11&quot;);
run(&quot;Invert&quot;);

saveAs(&quot;Tiff&quot;, &quot;$(Save_temp)/temp/Focused_Untitled.tif&quot;);&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
												<sci:value>@Save_temp := strReplace(@JobDir,&apos;\&apos;,&apos;/&apos;);</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -470</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>5</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.GenerateData.1">
										<sci:component name="Create Empty Data" version="2">
											<sci:arg name="NumberToGenerate" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>The number of empty data records to generate</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Initialize Condition" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>PilotScript expression to initialize any values.  When run in mode &quot;After Each Process&quot; this expression is evaluated for each incoming data item.  When run in mode &quot;NoMoreData&quot; this expression is evaluated a single time.</sci:help>
												<sci:value>#Count := 0;
#MaxCount := $(NumberToGenerate);</sci:value>
											</sci:arg>
											<sci:arg name="Condition" type="ExpressionType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>PilotScript boolean expression which determines the conditions under which to continue to generate data.</sci:help>
												<sci:value>#Count++;
#Count &lt;= #MaxCount;</sci:value>
											</sci:arg>
											<sci:arg name="WhenToGenerate" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>When to generate the new data records:
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;AfterEachProcess&lt;/i&gt; - Once for each incoming data record (i.e., after each process call).  This option causes each input data record to be duplicated (cloned) &lt;i&gt;NumberToGenerate&lt;/i&gt; times.
&lt;li&gt;&lt;i&gt;OnNoMoreData&lt;/i&gt; - Once all incoming data has passed through (or if none is ever expected).
&lt;/ul&gt;</sci:help>
												<sci:legalval selected="true">OnNoMoreData</sci:legalval>
												<sci:legalval>AfterEachProcess</sci:legalval>
											</sci:arg>
											<sci:arg name="ProcessDataAction" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>Indicates fate of incoming data when &lt;i&gt;WhenToGenerate&lt;/i&gt; is set to OnNoMoreData:
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;PassData&lt;/i&gt; - The data is sent out the Pass port
&lt;li&gt;&lt;i&gt;FailData&lt;/i&gt; - The data is sent out the Fail port
&lt;li&gt;&lt;i&gt;DeleteData&lt;/i&gt; - The data is deleted and not sent out any port
&lt;/ul&gt;</sci:help>
												<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenToGenerate to OnNoMoreData&apos;);
Parameter(&apos;WhenToGenerate&apos;) eq &apos;OnNoMoreData&apos;</sci:enabledscript>
												<sci:legalval selected="true">PassData</sci:legalval>
												<sci:legalval>FailData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Fri Nov 10 15:47:05 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;NumberToGenerate&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>
#number := Parameter(&apos;NumberToGenerate&apos;, 2);
if(StrLength(String(#number)) &gt; 0 AND #number &gt; 1) then
	&apos;Create &apos; . #number . &apos; data records&apos;;
else
	&apos;&apos;;
end if;
			</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DOCUMENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{ABC452F1-9E41-4A63-A8ED-744A13235DE6}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -820</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Creates empty generic data records (formerly called &quot;Generate Empty Data&quot;)</sci:value>
												<sci:value>&lt;p&gt;&lt;i&gt;NumberToGenerate&lt;/i&gt; specifies the number of empty records to generate.
&lt;/p&gt;</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.0.1.8</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>6</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Create Empty Data</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Imaging.CreateEmptyImage_Component.1">
										<sci:component name="Create Empty Image" version="2">
											<sci:arg name="Width" type="ExpressionType" required="true" visibility="visible" multi="false">
												<sci:help>Width of the image to be created.</sci:help>
												<sci:value>10</sci:value>
											</sci:arg>
											<sci:arg name="Height" type="ExpressionType" required="true" visibility="visible" multi="false">
												<sci:help>Height of the image to be created.</sci:help>
												<sci:value>10</sci:value>
											</sci:arg>
											<sci:arg name="Pixel Type" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Pixel type for the image to be created.</sci:help>
												<sci:legalval>unsigned char</sci:legalval>
												<sci:legalval>unsigned short</sci:legalval>
												<sci:legalval selected="true">short</sci:legalval>
												<sci:legalval>int</sci:legalval>
												<sci:legalval>float</sci:legalval>
												<sci:legalval>color</sci:legalval>
												<sci:legalval>48 bit color</sci:legalval>
											</sci:arg>
											<sci:arg name="Constant" type="ExpressionType" required="true" visibility="visible" multi="false">
												<sci:help>The value to set all the pixels to. It will be converted to the type specified by &lt;i&gt;Pixel Type&lt;/i&gt;.</sci:help>
												<sci:value>15</sci:value>
											</sci:arg>
											<sci:arg name="Output Image Tag" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>String value to place in &lt;i&gt;ImageTag&lt;/i&gt; property of images created by this component. Value is also appended to the &lt;i&gt;ImageHistory&lt;/i&gt; property.</sci:help>
												<sci:value>CreateEmptyImage</sci:value>
											</sci:arg>
											<sci:arg name="Implementation" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="true">
												<sci:legalval selected="true">IPP</sci:legalval>
											</sci:arg>
											<sci:arg name="VersionImaging" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;strong&gt;NOTE:&lt;/strong&gt; this parameter should not be changed.</sci:help>
												<sci:legalval selected="true">2</sci:legalval>
											</sci:arg>
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:value>ComponentReturnsPass</sci:value>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/imaging</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Dec 02 10:43:12 2013</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Create Empty Image</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{580A31CB-4132-468b-B294-8DFB6D940A15}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -820</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Creates an empty image and adds it to the data record</sci:value>
												<sci:value>Creates an empty image of dimensions &lt;i&gt;Width&lt;/i&gt;,&lt;i&gt;Height&lt;/i&gt; and type &lt;i&gt;Pixel Type&lt;/i&gt;. Sets all pixels to the same value, equal to &lt;i&gt;Constant&lt;/i&gt;.

&lt;p&gt;&lt;b&gt;Output Image Type&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Output Type: User selected non-color image type &lt;/p&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Input image group.</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Output image group.</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>9.1.0.13</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>7</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Imaging\Utilities\Create Empty Image</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="ImageJ (on Server)" version="2">
											<sci:arg name="Input Image Tags" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Comma separated list of &lt;i&gt;Input Image Tags&lt;/i&gt; of images to be opened in ImageJ.
 </sci:help>
												<sci:value>CreateEmptyImage</sci:value>
											</sci:arg>
											<sci:arg name="Macro" type="URLType" required="true" visibility="visible" multi="false" uimpl="false">
												<sci:help>The location of an ImageJ macro file on the server system.</sci:help>
												<sci:value>$(JobDir)\macro.ijm</sci:value>
											</sci:arg>
											<sci:arg name="Output Image Tags" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
												<sci:help>Comma separated list of strings to use as &lt;i&gt;ImageTag&lt;/i&gt; properties of images created by this component. This parameter needs to have the same number of entries as the &lt;i&gt;Output Image Filenames&lt;/i&gt;.
 </sci:help>
												<sci:validscript>(parameter(&apos;Output Image Tags&apos;) not eq &apos;&apos; and parameter(&apos;Output Image Filenames&apos;) not eq &apos;&apos;) or (parameter(&apos;Output Image Tags&apos;) eq &apos;&apos; and parameter(&apos;Output Image Filenames&apos;) eq &apos;&apos;)</sci:validscript>
												<sci:value>Proj</sci:value>
											</sci:arg>
											<sci:arg name="Output Image Filenames" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
												<sci:help>Comma separated list of filenames that will be created by ImageJ application. This parameter needs to have the same number of entries as the &lt;i&gt;Output Image Tags&lt;/i&gt;. 
 </sci:help>
												<sci:validscript>(parameter(&apos;Output Image Tags&apos;) not eq &apos;&apos; and parameter(&apos;Output Image Filenames&apos;) not eq &apos;&apos;) or (parameter(&apos;Output Image Tags&apos;) eq &apos;&apos; and parameter(&apos;Output Image Filenames&apos;) eq &apos;&apos;)</sci:validscript>
												<sci:value>Focused_Untitled.tif</sci:value>
											</sci:arg>
											<sci:arg name="ImageJ Output Property Name" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>Name of the property to be added to the current record which holds the standard output of the ImageJ macro.</sci:help>
												<sci:value>IJoutput</sci:value>
											</sci:arg>
											<sci:arg name="ImageJ JAR Path on Server" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
												<sci:help>Specify the &apos;method&apos; to use to determine the full-path to the ImageJ &lt;i&gt;ij.jar&lt;/i&gt; file on the Pipeline Pilot server.
&lt;br&gt;
&lt;br&gt;
The methods are outlined below:
&lt;ul&gt;
&lt;li&gt;Package Global: An &apos;Imaging&apos; package global can be used to specify the ImageJ &apos;ij.jar&apos; full-path for all users on the server.  You can configure this package global in the Pipeline Pilot Administrative Portal.
&lt;br&gt;
This &apos;Imaging&apos; package global can be accessed directly using the Pilotscript command below:
&lt;br&gt;
&amp;nbsp &amp;nbsp globalproperty(&quot;/scitegic/imaging/ImageJ_Installation_jar_path&quot;);
&lt;/li&gt;
&lt;li&gt;Component Specified:  This component must specify the full-path to the ImageJ &lt;i&gt;ij.jar&lt;/i&gt; file on the Pipeline Pilot server.
&lt;br&gt;
If this &apos;method&apos; is selected, the child parameter named &lt;i&gt;Component Specified ImageJ JAR Full-Path on Server&lt;/i&gt; must be configured to a valid full-path to the &lt;i&gt;ij.jar&lt;/i&gt; file on the server.
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
												<sci:member>Component Specified ImageJ JAR Full-Path on Server</sci:member>
												<sci:legalval>Use Package Global ImageJ JAR Path</sci:legalval>
												<sci:legalval selected="true">Use Component Specified ImageJ JAR Full-Path</sci:legalval>
											</sci:arg>
											<sci:arg name="Component Specified ImageJ JAR Full-Path on Server" type="URLType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
												<sci:help>The full-path to the ImageJ &apos;ij.jar&apos; file on the Pipeline Pilot server.
&lt;br&gt;
&lt;br&gt;
This parameter must be set to a valid path if the parent parameter is using the setting &lt;i&gt;Use Component Specified ImageJ JAR Full-Path&lt;/i&gt;.</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Specify the full-path to the ImageJ &apos;ij.jar&apos; file on the Pipeline Pilot server.&quot;);

( parameter() not eq &apos;&apos; ) OR ( parameter(&apos;ImageJ JAR Path on Server&apos;) eq &apos;Use Package Global ImageJ JAR Path&apos;  );</sci:validscript>
												<sci:enabledscript>parameter(&quot;ImageJ JAR Path on Server&quot;) eq &quot;Use Component Specified ImageJ JAR Full-Path&quot;</sci:enabledscript>
												<sci:value>C:\ImageJ\ij.jar</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
												<sci:value>SvrTempFiles,ImageJViewerArgs,RecordIndex,imageJInstallPath_g,PluginPath,ImageJ_JAR_FullPath_on_Server_g</sci:value>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Shortcut Version" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Used to maintain backwards compatibility for older protocols with this shortcut component.</sci:help>
												<sci:legalval selected="true">5</sci:legalval>
												<sci:legalval>4</sci:legalval>
												<sci:legalval>3</sci:legalval>
												<sci:legalval>2</sci:legalval>
												<sci:legalval>1</sci:legalval>
											</sci:arg>
											<sci:arg name="VersionImaging" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
												<sci:help>&lt;strong&gt;NOTE:&lt;/strong&gt; this parameter should not be changed.</sci:help>
												<sci:legalval selected="true">5</sci:legalval>
											</sci:arg>
											<sci:arg name="Internals Debug Settings" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;strong&gt;Do not adjust any of the settings in this group.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;These settings in this group should not never be adjusted in &quot;Production Environments.&quot;
&lt;/p&gt;</sci:help>
												<sci:member>Enable Debug Checks and Messages</sci:member>
												<sci:member>Expected Runtime Type</sci:member>
												<sci:member>Platform Determination Type</sci:member>
											</sci:arg>
											<sci:arg name="Enable Debug Checks and Messages" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;strong&gt;Do not adjust any of these settings.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;These settings in this group should not never be adjusted in &quot;Production Environments.&quot;
&lt;/p&gt;</sci:help>
												<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
												<sci:legalval selected="true">0</sci:legalval>
												<sci:legalval>1</sci:legalval>
												<sci:legalval>2</sci:legalval>
												<sci:legalval>3</sci:legalval>
												<sci:legalval>4</sci:legalval>
											</sci:arg>
											<sci:arg name="Expected Runtime Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;strong&gt;Do not adjust any of these settings.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;These settings in this group should not never be adjusted in &quot;Production Environments.&quot;
&lt;/p&gt;</sci:help>
												<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
												<sci:legalval selected="true">OnServer</sci:legalval>
												<sci:legalval>OnClient</sci:legalval>
											</sci:arg>
											<sci:arg name="Platform Determination Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;strong&gt;Do not adjust any of these settings.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;These settings in this group should not never be adjusted in &quot;Production Environments.&quot;
&lt;/p&gt;</sci:help>
												<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
												<sci:legalval selected="true">Automatic</sci:legalval>
												<sci:legalval>Windows</sci:legalval>
												<sci:legalval>Linux</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ComponentNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0AFE6927-1C43-414E-B8FF-714AFAFB3D3F}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -820</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Run ImageJ application on server</sci:value>
												<sci:value>&lt;br&gt;
&lt;p&gt;The &lt;i&gt;Input Image Tags&lt;/i&gt; specify the images to pass to ImageJ. All images are written to a temporary jobs folder on server either as tif or raw files. Images of type char, short, int and float are written in raw format. Unsigned char, color images and image stacks are written as tif files.&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The ImageJ application launches in batch process mode as the user must provide an ImageJ macro. The names of input image files and the filenames specified by the &lt;i&gt;Output Image Filenames&lt;/i&gt; are passed into the ImageJ macro as the comma-separated argument list. The macro code opens these temporary images and does the processing. The macro code should save the resulting images back to the server temporary folder with the output filenames provided. &lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;After the ImageJ application is closed, the protocol inserts the output image files into the current record with the corresponding Image Tags provided by &lt;i&gt;Output Image Tags&lt;/i&gt;. The number of filenames in &lt;i&gt;Output Image Filenames&lt;/i&gt; has to be equal to the number of image tags in &lt;i&gt;Output Image Tags&lt;/i&gt;. The protocol also adds a property with name specified in &lt;i&gt;ImageJ Output Property Name&lt;/i&gt;, which holds the standard output of the ImageJ macro.
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt; Note that char images are first converted to short before they are written to the temporary jobs folder to preserve the actual pixel values. ImageJ converts 8-bit signed to 8-bit unsigned images.&lt;br&gt;&lt;br&gt;&lt;p&gt;

&lt;p class=&quot;important&quot;&gt;&lt;b&gt;IMPORTANT!&lt;/b&gt;  You must have ImageJ 1.41 or later installed on the server side. You must install the version of ImageJ that comes &lt;b&gt;&apos;bundled with Java&apos;&lt;/b&gt;.
&lt;br&gt;
&lt;br&gt;
&lt;p&gt;

&lt;p class=&quot;important&quot;&gt;
&lt;b&gt;Server Configuration&lt;/b&gt;  
(Package Global): An &apos;Imaging&apos; package global can be used to specify the ImageJ &apos;ij.jar&apos; full-path for all users on the server.  You can configure this package global in the Pipeline Pilot Administrative Portal.
&lt;p&gt;See the parameter &lt;i&gt;ImageJ JAR Path on Server&lt;/i&gt; for details.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;

&lt;strong&gt;See Also&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&quot;javascript:DoLink(&apos;http://rsbweb.nih.gov/ij/&apos;)&quot;&gt;ImageJ&lt;/a&gt; website for details and updates for the ImageJ program. ( http://rsbweb.nih.gov/ij/ )
&lt;/li&gt;
&lt;/ul&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>18.1.0.1579</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/imaging</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Fri Sep 08 13:08:21 2017</sci:value>
											</sci:arg>
											<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Component Comment</sci:help>
												<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
											</sci:arg>
											<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Component Usage</sci:help>
												<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol ShowComment</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Add Protocol Comment Here</sci:help>
												<sci:value>Add Protocol Comment Here</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>ImageJ
(on Server)</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Imaging\Application Integration\ImageJ (on Server)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>FileExists(@&apos;ImageJ_JAR_FullPath_on_Server_g&apos;)</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>FileExists(@&apos;ImageJ_JAR_FullPath...&apos;)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>8</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>#msg := &apos;Unable to locate ImageJ application at &apos;.@&apos;ImageJ_JAR_FullPath_on_Server_g&apos;;
Error(#msg);</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Unable to locate ImageJ</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1818 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>9</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.ServerAction.1">
												<sci:component name="Copy File" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The source file path, relative to the server machine. This file is unaffected by the copy operation.

Internet files (http, https and ftp protocols) are supported as sources for copying.  When copying from http and https URLs you may optionally specify Authentication Options for the connection in the appropriate group parameters.</sci:help>
														<sci:member>Source Authentication Options</sci:member>
														<sci:value>$(ServerRoot)/imaging/bin/client/lang/java/jars/ImageJViewer.jar</sci:value>
													</sci:arg>
													<sci:arg name="Source Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>For http and https sources, you may optionally specify authentication information for the URL in the following parameters</sci:help>
														<sci:member>Source Authentication Options Username</sci:member>
														<sci:member>Source Authentication Options Password</sci:member>
														<sci:member>Source Authentication Options Authentication Method</sci:member>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^https?:&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Source Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Determines which method to use during authentication with an HTTP or HTTPS source.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
														<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
														<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
													</sci:arg>
													<sci:arg name="Source Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Source.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
													</sci:arg>
													<sci:arg name="Source Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>The password used to authenticate with the Source server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Source Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The destination file path relative to the server machine.  This file may or may not exist before the copy operation.  If it does exist already, the existing file will be overwritten by the copied file. If it does not exist, then any necessary new intermediate folders are also created.

WebDav repository files such as for Microsoft Sharepoint servers (using http and https protocols) are supported as destinations for copying.  When copying to an http or https URL, you may optionally specify Authentication Options for the connection in the Authentication Options parameter group.</sci:help>
														<sci:member>Destination Authentication Options</sci:member>
														<sci:value>$(TempDir)/ImageJViewer.jar</sci:value>
													</sci:arg>
													<sci:arg name="Destination Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>For http and https destinations, you may optionally specify authentication information for the URL in the following parameters</sci:help>
														<sci:member>Destination Authentication Options Username</sci:member>
														<sci:member>Destination Authentication Options Password</sci:member>
														<sci:member>Destination Authentication Options Authentication Method</sci:member>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^https?:&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Destination Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Determines which method to use during authentication with an HTTP or HTTPS destination.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
														<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
														<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
													</sci:arg>
													<sci:arg name="Destination Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Destination.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
													</sci:arg>
													<sci:arg name="Destination Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>The password used to authenticate with the Destination server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;To enable, set the Destination Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Destination Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Make Copy Writable" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Componet Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{38A20EDC-AAAA-42EF-97BA-D1B40B74FFE0}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Copy File</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1818 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Copies a file and saves it to the specified location.  Can be used to retrieve files from HTTP or HTTPS servers and can also be used to upload files to HTTP WebDav repositories such as Sharepoint and other document repositories.</sci:value>
														<sci:value>&lt;p&gt;A copy of &lt;i&gt;Source&lt;/i&gt; is created and saved to &lt;i&gt;Destination&lt;/i&gt;. The original file is left in place.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;All file locations are relative to the server.&lt;/li&gt;
&lt;li&gt;You can copy to FTP, HTTP and HTTPS servers using this component and to WebDav document repositories such as Sharepoint or Apache WebDav.&lt;/li&gt;
&lt;li&gt;For HTTP and HTTPS servers, you can specify authentication options to control username and password information for the connection.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To copy a file from the client to the server, use &lt;a href=&quot;javascript:DoLink(&apos;{BBBC3189-A239-45BD-98A7-6FD3982D8282}&apos;)&quot;&gt;Copy to Server&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To copy a file from the server to the client, use &lt;a href=&quot;javascript:DoLink(&apos;{DC38B2F0-B8B1-4114-92F0-5EE15A9E969C}&apos;)&quot;&gt;Copy To Client&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To move a file, use &lt;a href=&quot;javascript:DoLink(&apos;{40A2ACDC-AABB-42EF-970A-D1340B748FE0}&apos;)&quot;&gt;Move File&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
 
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>5.0.0.103</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>%VERSION 3%</sci:value>
														<sci:value>2114 -345 529 483</sci:value>
														<sci:value>255 255 0</sci:value>
														<sci:value>Only Copy the first time -- per protocol run.

Added special property
&apos;Make Copy Writable&apos; -- just in case

Changed Location to &quot;TempDir&quot; from &quot;JobDir&quot;</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Argument2" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>The destination file, relative to the server</sci:help>
														<sci:value>$(Destination)</sci:value>
													</sci:arg>
													<sci:arg name="Argument1" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>The source file, relative to the server</sci:help>
														<sci:value>$(Source)</sci:value>
													</sci:arg>
													<sci:arg name="Action" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Parameter Help</sci:help>
														<sci:value>CopyFile</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Feb 23 10:56:01 2010</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Copy File - ImageJView Jar File</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\File Utilities\Copy File</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@RecordIndex = 1</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Is first record?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -645</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>Expand(&apos;,&apos;, globalproperty(&apos;Output Image Tags&apos;));
Expand(&apos;,&apos;, globalproperty(&apos;Output Image Filenames&apos;));

#ImageTagArray := globalproperty(&apos;Output Image Tags&apos;);
#ImageNameArray := globalproperty(&apos;Output Image Filenames&apos;);

if numValues(#ImageTagArray) not eq numValues(#ImageNameArray) then
	Error(&apos;Number of output image tags and number of ImageJ output image names mismatch&apos;);
end if;


Expand(&apos;,&apos;,globalproperty(&apos;Input Image Tags&apos;));
#temp := globalproperty(&apos;Input Image Tags&apos;);
for #i in 1 .. numvalues(globalproperty(&apos;Input Image Tags&apos;)) loop
	#temp[#i] := toupper(trim(#temp[#i]));
end loop;
globalproperty(&apos;Input Image Tags&apos;) := #temp;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Initialize</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -645</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>#jarFileNotFound := not FileExists(&apos;$(JobDir)/ImageJViewer.jar&apos;);
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>#jarFileNotFound := not FileExists()</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -645</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>11</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="Dont Pass Data" version="2">
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>PassDataToPort</sci:value>
													</sci:arg>
													<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>the port to pass data to</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Sep 20 08:16:06 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Don&apos;t Pass Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{F70D3185-8B78-4211-AF3E-D5427C306F87}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1818 -820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Prevents records exiting an internal component from being passed out of a subprotocol</sci:value>
														<sci:value>&lt;p&gt;This component is useful inside subprotocols to keep data from being passed out. It is an alternative to disabling components.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/comps/disable_comps.htm&apos;)&quot;&gt;Disabling Components&lt;/a&gt;&lt;/p&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.1.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>12</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Dont Pass Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>//For 2018r1, the Component interface now uses NEW  &quot;ImageJ JAR Path on Server&quot; params
//We use the &apos;Shortcut Version&apos; in implemetaion tab -- to ensure backward compatible
ShortCut_Version := -1;
VersionImaging_Version := -1;
globalproperty(&apos;ImageJ_JAR_FullPath_on_Server_g&apos;) := &quot;&quot;;
method01_package_global := &quot;Use Package Global ImageJ JAR Path&quot;;
method02_userSpecified_fullPath := &quot;Use Component Specified ImageJ JAR Full-Path&quot;;
method_selector_ImageJ_JAR_Path_on_Server := &quot;&quot;;

if @&apos;Shortcut Version&apos; is defined then
	ShortCut_Version := integer( parentparameter(&apos;Shortcut Version&apos;) ); 
else
	debugmessage(&quot;WARNING: forcing &apos;ShortCut_Version&apos; to 5.&quot;);
	ShortCut_Version := 5;
end if;

if @&apos;VersionImaging&apos; is defined then
	VersionImaging_Version := integer( parentparameter(&apos;VersionImaging&apos;) );
else
	debugmessage(&quot;WARNING: forcing &apos;VersionImaging_Version&apos; to 5.&quot;);
	VersionImaging_Version := 5;
end if;

if(5 &gt; ShortCut_Version) then
	//We have a pre-2018 component -- so use OLD varable name
	if( parentparameter(&quot;ImageJ Location&quot;) is defined) then
		debugmessage(&quot;INFO: using version-4 interface parameter (&apos;ImageJ Location&apos;).&quot;);
		globalproperty(&apos;ImageJ_JAR_FullPath_on_Server_g&apos;) := parentparameter(&quot;ImageJ Location&quot;);
	else
		error(&quot;ERROR: Failed to find component parameter (&apos;ImageJ Location&apos;) for a pre-2018 component.&quot;);
	end if;
else
	//We have a 2018+ component [ Newer Style Interface ]
	method_selector_ImageJ_JAR_Path_on_Server := parentparameter(&quot;ImageJ JAR Path on Server&quot;);
	if( method01_package_global eq method_selector_ImageJ_JAR_Path_on_Server) then
		//Use Package global
		debugmessage(&quot;INFO: using version-5 interface parameter (&apos;&quot; . method01_package_global . &quot;&apos;).&quot;);
		globalproperty(&apos;ImageJ_JAR_FullPath_on_Server_g&apos;) := globalproperty(&quot;/scitegic/imaging/ImageJ_Installation_jar_path&quot;);
	elsif( method02_userSpecified_fullPath eq method_selector_ImageJ_JAR_Path_on_Server) then
		//User specified full-path
		debugmessage(&quot;INFO: using version-5 interface parameter (&apos;&quot; . method02_userSpecified_fullPath . &quot;&apos;).&quot;);
		globalproperty(&apos;ImageJ_JAR_FullPath_on_Server_g&apos;) := parentparameter(&quot;Component Specified ImageJ JAR Full-Path on Server&quot;);
	else
		error(&quot;ERROR: Failed to find valid setting for component parameter (&apos;ImageJ JAR Path on Server&apos;) .&quot;);
	end if;
end if;

if(&apos;&apos; eq globalproperty(&apos;ImageJ_JAR_FullPath_on_Server_g&apos;)) then
	//__This should never happen, but check for it anyways
	error(&quot;ERROR: Empty path for &apos;ImageJ_JAR_FullPath_on_Server&apos;.&quot;);
end if;

ImageJ_JAR_FullPath_on_Server := globalproperty(&apos;ImageJ_JAR_FullPath_on_Server_g&apos;);
//Cleanup the data-record vars not needed downstream -- can be commented out for debugging, if needed
remove(&apos;ImageJ_JAR_FullPath_on_Server&apos;);
remove(&apos;ShortCut_Version&apos;, &apos;VersionImaging_Version&apos;, &apos;method01_package_global&apos;, &apos;method02_userSpecified_fullPath&apos;, &apos;method_selector_ImageJ_JAR_Path_on_Server&apos;);
//After cleanup -- the only added property should be &apos;ImageJ_JAR_FullPath_on_Server&apos; 
//The LOCAL GLOBAL property &apos;ImageJ_JAR_FullPath_on_Server_g&apos; works for both v4(old) and v5(2018+) based short-cut components

	

	</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Determine ImageJ JAR full-path (v4,v5)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -995</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>%VERSION 3%</sci:value>
														<sci:value>98 -670 644 177</sci:value>
														<sci:value>255 255 0</sci:value>
														<sci:value>For backward compatability -- look at &quot;Shortcut Version&quot; ( v4, v5 )</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>14</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>#imageJ_jar_fullPath := @&apos;ImageJ_JAR_FullPath_on_Server_g&apos;;
#imageJ_BasePath := rsubst(#imageJ_jar_fullPath, &apos;ij.jar&apos;, &apos;&apos;, &apos;i&apos;);

@imageJInstallPath_g := #imageJ_BasePath; //__This should always end with either &apos;\&apos; or &apos;/&apos; due to rsubst() above
@PluginPath := #imageJ_BasePath . &quot;plugins&quot;; //__Already had dir-char -- don&apos;t need to add one.</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Get ImageJ install path from  jar path</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -995</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>@RecordIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -995</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.ServerAction.1">
												<sci:component name="Copy File" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The source file path, relative to the server machine. This file is unaffected by the copy operation.

Internet files (http, https and ftp protocols) are supported as sources for copying.  When copying from http and https URLs you may optionally specify Authentication Options for the connection in the appropriate group parameters.</sci:help>
														<sci:member>Source Authentication Options</sci:member>
														<sci:value>$(Macro)</sci:value>
													</sci:arg>
													<sci:arg name="Source Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>For http and https sources, you may optionally specify authentication information for the URL in the following parameters</sci:help>
														<sci:member>Source Authentication Options Username</sci:member>
														<sci:member>Source Authentication Options Password</sci:member>
														<sci:member>Source Authentication Options Authentication Method</sci:member>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^https?:&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Source Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Determines which method to use during authentication with an HTTP or HTTPS source.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
														<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
														<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
													</sci:arg>
													<sci:arg name="Source Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Source.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
													</sci:arg>
													<sci:arg name="Source Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>The password used to authenticate with the Source server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Source Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The destination file path relative to the server machine.  This file may or may not exist before the copy operation.  If it does exist already, the existing file will be overwritten by the copied file. If it does not exist, then any necessary new intermediate folders are also created.

WebDav repository files such as for Microsoft Sharepoint servers (using http and https protocols) are supported as destinations for copying.  When copying to an http or https URL, you may optionally specify Authentication Options for the connection in the Authentication Options parameter group.</sci:help>
														<sci:member>Destination Authentication Options</sci:member>
														<sci:value>$(JobDir)\macro.txt</sci:value>
													</sci:arg>
													<sci:arg name="Destination Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>For http and https destinations, you may optionally specify authentication information for the URL in the following parameters</sci:help>
														<sci:member>Destination Authentication Options Username</sci:member>
														<sci:member>Destination Authentication Options Password</sci:member>
														<sci:member>Destination Authentication Options Authentication Method</sci:member>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^https?:&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Destination Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Determines which method to use during authentication with an HTTP or HTTPS destination.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
														<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
														<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
													</sci:arg>
													<sci:arg name="Destination Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Destination.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
													</sci:arg>
													<sci:arg name="Destination Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>The password used to authenticate with the Destination server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;To enable, set the Destination Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Destination Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Make Copy Writable" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Componet Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{38A20EDC-AAAA-42EF-97BA-D1B40B74FFE0}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Copy File</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -1170</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Copies a file and saves it to the specified location.  Can be used to retrieve files from HTTP or HTTPS servers and can also be used to upload files to HTTP WebDav repositories such as Sharepoint and other document repositories.</sci:value>
														<sci:value>&lt;p&gt;A copy of &lt;i&gt;Source&lt;/i&gt; is created and saved to &lt;i&gt;Destination&lt;/i&gt;. The original file is left in place.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;All file locations are relative to the server.&lt;/li&gt;
&lt;li&gt;You can copy to FTP, HTTP and HTTPS servers using this component and to WebDav document repositories such as Sharepoint or Apache WebDav.&lt;/li&gt;
&lt;li&gt;For HTTP and HTTPS servers, you can specify authentication options to control username and password information for the connection.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To copy a file from the client to the server, use &lt;a href=&quot;javascript:DoLink(&apos;{BBBC3189-A239-45BD-98A7-6FD3982D8282}&apos;)&quot;&gt;Copy to Server&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To copy a file from the server to the client, use &lt;a href=&quot;javascript:DoLink(&apos;{DC38B2F0-B8B1-4114-92F0-5EE15A9E969C}&apos;)&quot;&gt;Copy To Client&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To move a file, use &lt;a href=&quot;javascript:DoLink(&apos;{40A2ACDC-AABB-42EF-970A-D1340B748FE0}&apos;)&quot;&gt;Move File&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
 
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>5.0.0.103</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>%VERSION 3%</sci:value>
														<sci:value>1922 -1170 457 264</sci:value>
														<sci:value>255 255 0</sci:value>
														<sci:value>Added special property
&apos;Make Copy Writable&apos; so that read-only macros will be overwritten</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>13</sci:value>
													</sci:arg>
													<sci:arg name="Argument2" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>The destination file, relative to the server</sci:help>
														<sci:value>$(Destination)</sci:value>
													</sci:arg>
													<sci:arg name="Argument1" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>The source file, relative to the server</sci:help>
														<sci:value>$(Source)</sci:value>
													</sci:arg>
													<sci:arg name="Action" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Parameter Help</sci:help>
														<sci:value>CopyFile</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Feb 23 10:56:01 2010</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Copy File - Copy To JobDir</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\File Utilities\Copy File</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Subprotocol" version="2">
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
														<sci:value>StdOutput</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:value>25</sci:value>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
														<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Run ImageJ</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>SUBPROTOCOLNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -1545</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
														<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.48</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Make Shortcut by Default</sci:legalval>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>5</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Subprotocol" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:value>25</sci:value>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Convert to short</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>SUBPROTOCOLNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1242 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.48</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
																<sci:value>%VERSION 3%</sci:value>
																<sci:value>98 -395 650 220</sci:value>
																<sci:value>255 255 0</sci:value>
																<sci:value>ImageJ converts 8-bit signed to unsigned image. Convert to short image before opening in ImageJ</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Manipulator (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>OriginalImageTag := ImageTag;</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Store ImageTag</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>EXPRESSIONNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>90 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																		<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.0.0.35</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.Imaging.ChangeBitDepth_Component.1">
																<sci:component name="Convert Pixel Type" version="2">
																	<sci:arg name="Input Image Tag" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>The input image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Input Image Test&lt;/i&gt; is used. If both are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.

&lt;p&gt;&lt;b&gt;Input and Output Image Type&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Input Type: Any non-color image &lt;/p&gt;
&lt;p&gt;Output Type: User selected non-color image type &lt;/p&gt;
</sci:help>
																		<sci:member>Input Image Test</sci:member>
																	</sci:arg>
																	<sci:arg name="Input Image Test" type="ExpressionType" required="false" visibility="visible" multi="false">
																		<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired input image property list. &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Input Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.</sci:help>
																		<sci:enabledscript>setDisabledDetails(&quot;Input Image Tag is set.&quot;);

parameter(&apos;Input Image Tag&apos;) eq &apos;&apos;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Pixel Type" type="StringType" required="true" visibility="visible" multi="false">
																		<sci:help>Output image pixel type.</sci:help>
																		<sci:legalval>unsigned char</sci:legalval>
																		<sci:legalval>char</sci:legalval>
																		<sci:legalval>unsigned short</sci:legalval>
																		<sci:legalval selected="true">short</sci:legalval>
																		<sci:legalval>int</sci:legalval>
																		<sci:legalval>float</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Output Image Tag" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>String value to place in &lt;i&gt;ImageTag&lt;/i&gt; property of images read by this component. Value is also appended to the &lt;i&gt;ImageHistory&lt;/i&gt; property.

&lt;p&gt;&lt;b&gt;Input and Output Image Type&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Input Type: Any non-color image &lt;/p&gt;
&lt;p&gt;Output Type: User selected non-color image type &lt;/p&gt;
</sci:help>
																		<sci:value>ConvertPixelType</sci:value>
																	</sci:arg>
																	<sci:arg name="Output Behavior" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																		<sci:help>Determines whether the operation is performed in place or a new output image is created to hold the results of the operation.
</sci:help>
																		<sci:member>Properties To Copy</sci:member>
																		<sci:legalval selected="true">Overwrite Input Image</sci:legalval>
																		<sci:legalval>Create Sibling Image</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Properties To Copy" type="StringType" required="true" visibility="visible" multi="false">
																		<sci:help>Specifies which properties to copy from the input image to the output image. Use &amp;quot;All&amp;quot; to replicate the entire list, &amp;quot;None&amp;quot;, or &amp;quot;From List&amp;quot; to specify the parameters to copy from the nested &lt;i&gt;List&lt;/i&gt; parameter.</sci:help>
																		<sci:member>Properties To Copy List</sci:member>
																		<sci:member>Properties To Copy Prefix</sci:member>
																		<sci:enabledscript>parameter(&apos;Output Behavior&apos;) eq &apos;Create Sibling Image&apos;</sci:enabledscript>
																		<sci:legalval selected="true">None</sci:legalval>
																		<sci:legalval>All</sci:legalval>
																		<sci:legalval>From List</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Properties To Copy Prefix" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>A string to prefix the properties specified for copying.</sci:help>
																		<sci:enabledscript>parameter(&apos;Properties To Copy&apos;) ne &apos;None&apos;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Properties To Copy List" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>Comma separated list of properties to copy to the output image.</sci:help>
																		<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
																		<sci:enabledscript>parameter(&apos;Properties To Copy&apos;) eq &apos;From List&apos;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Implementation" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:legalval selected="true">IPP</sci:legalval>
																		<sci:legalval>ITK</sci:legalval>
																	</sci:arg>
																	<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																		<sci:legalval selected="true">LeaveData</sci:legalval>
																		<sci:legalval>ClearData</sci:legalval>
																		<sci:legalval>DeleteData</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/imaging</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Fri Mar 12 21:30:01 2010</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{ED6FFE1D-D8DB-4bf8-BA73-68CA3583AE08}</sci:value>
																	</sci:arg>
																	<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the action to perform</sci:help>
																		<sci:value>PassDataToPort</sci:value>
																	</sci:arg>
																	<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the port to pass data to</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>COMPONENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Convert Pixel Type</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Evaluate Expression</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>378 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Changes the pixel data type of an image.</sci:value>
																		<sci:value>&lt;p&gt;
Transforms the input image into pixels of type &lt;i&gt;Pixel Type&lt;/i&gt;. When increasing the size of integral pixel types, zeros are appended. When decreasing the size of integral pixel types, the least significant bits are rounded and the most significant bits are kept. When converting from a floating type to an integral type, data is rounded to the nearest integer.
&lt;/p&gt;
&lt;p&gt;
When converting to a pixel type with a value range smaller than the original type, intensity values are not scaled, ie. a large proportion of pixels will have intensity values that represent that maximum/minimum of the new pixel type. Use the &lt;a href=&quot;javascript:DoLink(&apos;{804DD5BA-DE55-49ec-97D4-7D02435826A0}&apos;)&quot;&gt;Rescale Image Intensities&lt;/a&gt; component to prepare the image for type conversion.&lt;/p&gt;
&lt;p&gt;The image to be analyzed is specified by either &lt;i&gt;Input Image Tag&lt;/i&gt; or &lt;i&gt;Input Image Test&lt;/i&gt;. If no image is specified, the first image on the data record is used.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Output Image Tag&lt;/i&gt; specifies the ImageTag property value for the output image.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Output Behavior&lt;/i&gt; specifies whether the input image should be overwritten or if a sibling image should be appended to the data record.&lt;p&gt;

&lt;p&gt;&lt;b&gt;Input and Output Image Type&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Input Type: Any non-color image &lt;/p&gt;
&lt;p&gt;Output Type: User selected non-color image type &lt;/p&gt;



</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Input image group.</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Output image group.</sci:value>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>6.1.0.18</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>3</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Components\Imaging\Utilities\Convert Pixel Type</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Manipulator (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>ImageTag := OriginalImageTag;</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Restore ImageTag</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>EXPRESSIONNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>666 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																		<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.0.0.35</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:connectid from="0" to="3" type="true"/>
															<sci:connectid from="3" to="2" type="true"/>
														</sci:protocol>
													</sci:data>
													<sci:data object="SciTegic.UnpackChildren.1">
														<sci:component name="Unpack Children" version="2">
															<sci:arg name="Location To Unpack" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The location of a node in the hierarchy; the children of this node will be unpacked, and
passed out the Pass port, annotated with properties PackId and Location. The remaining parts of the data record 
will be passed out the Fail port, annotated with PackId.</sci:help>
																<sci:value>/*/</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="What to Output" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>Whether to output the parent structure or the children</sci:help>
																<sci:legalval>Parent</sci:legalval>
																<sci:legalval selected="true">Children</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Nov 19 09:32:47 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Unpack Children</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{ACCDEEEF-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -295</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Unpacks the children beneath a specified location in the hierarchy into individual nodes</sci:value>
																<sci:value>This component unpacks the children (if any) underneath the specified node and returns them through the Pass port.  If the location is not found, the data record is passed unchanged through the Fail port.

The property &lt;I&gt;PackId&lt;/I&gt; will be defined on the children.  It will contain a number that is the sequence number of the original incoming data record.  (If &lt;i&gt;PackId&lt;/i&gt; is already defined on the incoming data record, then the current sequence number will be added as another element in the &lt;i&gt;PackId&lt;/i&gt; array.  This is useful in multiple unpack/repack steps.)

The property &lt;I&gt;Location&lt;/I&gt; will be defined on the children, and will contain the location in the original record where it was detached from. (If &lt;i&gt;Location&lt;/i&gt; is already defined, then the current location will be added as another element in the &lt;i&gt;Location&lt;/i&gt; array.  This is useful in multiple unpack/repack steps.)

These annotations give the information needed to repack the children back onto a copy of the parent (which can be gotten using a Delete Children component with the same location, in parallel).

See also &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{FEFEAAAA-1ED7-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Pack Children&lt;/a&gt;.</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value>Hierarchical data records</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records containing the children nodes</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value>The remaining data record after removing the children</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.5.2.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Data Tree Manipulators\Deprecated\Unpack Children</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>#pass := false;
#numTags := numvalues(globalproperty(&apos;Input Image Tags&apos;));
if (ImageTag is defined and #numTags &gt; 0) then
	if (contains(globalproperty(&apos;Input Image Tags&apos;), ToUpper(ImageTag))) then
		#pass := true;
	end if;
end if;
#pass

</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Opened in ImageJ?</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FILTERNODE</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -295</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
														<sci:proplist>
															<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
														</sci:proplist>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>PixelType eq &apos;char&apos;
</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Is char image?</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FILTERNODE</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>954 -295</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
														<sci:proplist>
															<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
														</sci:proplist>
													</sci:data>
													<sci:data object="SciTegic.Imaging.ImageRecordWriter_Component.1">
														<sci:component name="Image Record Writer" version="2">
															<sci:arg name="Input Image Tag" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>The input image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Input Image Test&lt;/i&gt; is used. If both are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.
&lt;p&gt;All image types are supported. &lt;/p&gt;
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format in &apos;Image Type&apos; parameter. &lt;/p&gt;</sci:help>
																<sci:member>Input Image Test</sci:member>
																<sci:value>ImageToWrite</sci:value>
															</sci:arg>
															<sci:arg name="Input Image Test" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired input image. &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Input Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.</sci:help>
																<sci:enabledscript>setDisabledDetails(&quot;Input Image Tag is set.&quot;);
parameter(&apos;Input Image Tag&apos;) eq &apos;&apos;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Transparency Mask Image Tag" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;
If specified, this mask image is used to provide an alpha plane for PNG output.
&lt;p/&gt;
The transparency mask image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Transparency Mask Image Test&lt;/i&gt; is used. If both are empty, then there is no transparency plane applied to the written image.
&lt;/p&gt;</sci:help>
																<sci:member>Transparency Mask Image Test</sci:member>
																<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Image Type to &quot;png&quot;&apos;);
	Parameter(&apos;Image Type&apos;) eq &apos;PNG&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Transparency Mask Image Test" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired transparency mask image.  &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Transparency Mask Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then no transparency mask is applied for the written image.</sci:help>
																<sci:enabledscript>setDisabledDetails(&quot;Transparency Mask Image Tag is set.&quot;);
parameter(&apos;Transparency Mask Image Tag&apos;) eq &apos;&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Destination Directory" type="DirectoryType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>The destination directory to contain image files.</sci:help>
																<sci:value>$(TempDir)</sci:value>
															</sci:arg>
															<sci:arg name="Filename" type="ExpressionType" required="true" visibility="visible" multi="false">
																<sci:help>Pilotscript expression to construct the image filenames.</sci:help>
																<sci:value>filename</sci:value>
															</sci:arg>
															<sci:arg name="Image Type" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>Standard image types and raw type. If raw type is selected, the simple byte stream is saved to a binary file.
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format.&lt;/p&gt;
&lt;p&gt;NOTE: the raw format currently supports 2-d monochrome single plane images only - raw output of color images and other multi-plane images is not supported.&lt;/p&gt;</sci:help>
																<sci:legalval>bmp</sci:legalval>
																<sci:legalval selected="true">tif</sci:legalval>
																<sci:legalval>png</sci:legalval>
																<sci:legalval>jpg</sci:legalval>
																<sci:legalval>raw</sci:legalval>
															</sci:arg>
															<sci:arg name="Output Image Tag" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>String value to place in &lt;i&gt;ImageTag&lt;/i&gt; property of images read by this component. Value is also appended to the &lt;i&gt;ImageHistory&lt;/i&gt; property.</sci:help>
																<sci:value>ImageRecordWriter</sci:value>
															</sci:arg>
															<sci:arg name="Implementation" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="true">
																<sci:legalval selected="true">IPP</sci:legalval>
																<sci:legalval>ITK</sci:legalval>
															</sci:arg>
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DOCUMENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/imaging</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Nov 12 15:21:10 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Image Record Writer</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{B5BFA33F-9530-4459-AED1-4F6365EB2FAE}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1818 -470</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>For each data record, writes one image to a file</sci:value>
																<sci:value>&lt;p&gt;The image to be written is specified by either &lt;i&gt;Input Image Tag&lt;/i&gt; or &lt;i&gt;Input Image Test&lt;/i&gt;. If no image is specified, the first image on the data record is written to the file.&lt;p&gt;

&lt;p&gt;The directory path of the output file is specified in &lt;i&gt;Destination Directory&lt;/i&gt;, the file name is specified in &lt;i&gt;Filename&lt;/i&gt;, and the file type is specified in &lt;i&gt;Image Type&lt;/i&gt;. 
&lt;/p&gt;
&lt;p&gt;All image types are supported. &lt;/p&gt;
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format in &lt;i&gt;Image Type&lt;/i&gt; parameter. &lt;/p&gt;
&lt;p&gt;NOTE: the raw format currently supports 2-d monochrome single plane images only - raw output of color images and other multi-plane images is not supported.&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Group node containing child image node to be written to disk.</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Group nodes containing images successfully written.</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Group nodes containing images that failed to be written.</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.5.1.7</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Imaging\Writers\Image Record Writer</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>#currentImageTag := ImageTag;
filename := #currentImageTag;
ImageTag := &apos;ImageToWrite&apos;;

if (PixelType eq &apos;float&apos; or PixelType eq &apos;int&apos; or PixelType eq &apos;short&apos; or PixelType eq &apos;char&apos;) then
    /*if (PixelType not eq &apos;color&apos;) then send to client as raw */
	#ext := &apos;raw&apos;;
	WriteAsTif := false;
else
	/* for unsigned char, unsigned short and color images*/
	#ext := &apos;tif&apos;;
	WriteAsTif := true;
end if;

serverFilePath := @TempDir;
#serverTempFile := serverFilePath.&apos;/&apos;.filename.&apos;.&apos;.#ext;

if (@SvrTempFiles not eq &apos;&apos;) then
	@SvrTempFiles := @SvrTempFiles.&apos;,&apos;.#serverTempFile;
else
	@SvrTempFiles := #serverTempFile;
end if;

if (@ImageJViewerArgs not eq &apos;&apos;) then
	@ImageJViewerArgs := @ImageJViewerArgs.&apos;,&apos;.#serverTempFile;
else 
	@ImageJViewerArgs := #serverTempFile;
end if;



</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1242 -645</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>WriteAsTif</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Write as tif?</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FILTERNODE</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1530 -645</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
														<sci:proplist>
															<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
														</sci:proplist>
													</sci:data>
													<sci:data object="SciTegic.Imaging.ImageRecordWriter_Component.1">
														<sci:component name="Image Record Writer" version="2">
															<sci:arg name="Input Image Tag" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>The input image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Input Image Test&lt;/i&gt; is used. If both are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.
&lt;p&gt;All image types are supported. &lt;/p&gt;
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format in &apos;Image Type&apos; parameter. &lt;/p&gt;</sci:help>
																<sci:member>Input Image Test</sci:member>
																<sci:value>ImageToWrite</sci:value>
															</sci:arg>
															<sci:arg name="Input Image Test" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired input image. &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Input Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.</sci:help>
																<sci:enabledscript>setDisabledDetails(&quot;Input Image Tag is set.&quot;);
parameter(&apos;Input Image Tag&apos;) eq &apos;&apos;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Transparency Mask Image Tag" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;
If specified, this mask image is used to provide an alpha plane for PNG output.
&lt;p/&gt;
The transparency mask image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Transparency Mask Image Test&lt;/i&gt; is used. If both are empty, then there is no transparency plane applied to the written image.
&lt;/p&gt;</sci:help>
																<sci:member>Transparency Mask Image Test</sci:member>
																<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Image Type to &quot;png&quot;&apos;);
	Parameter(&apos;Image Type&apos;) eq &apos;PNG&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Transparency Mask Image Test" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired transparency mask image.  &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Transparency Mask Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then no transparency mask is applied for the written image.</sci:help>
																<sci:enabledscript>setDisabledDetails(&quot;Transparency Mask Image Tag is set.&quot;);
parameter(&apos;Transparency Mask Image Tag&apos;) eq &apos;&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Destination Directory" type="DirectoryType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>The destination directory to contain image files.</sci:help>
																<sci:value>$(TempDir)</sci:value>
															</sci:arg>
															<sci:arg name="Filename" type="ExpressionType" required="true" visibility="visible" multi="false">
																<sci:help>Pilotscript expression to construct the image filenames.</sci:help>
																<sci:value>filename</sci:value>
															</sci:arg>
															<sci:arg name="Image Type" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>Standard image types and raw type. If raw type is selected, the simple byte stream is saved to a binary file.
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format.&lt;/p&gt;
&lt;p&gt;NOTE: the raw format currently supports 2-d monochrome single plane images only - raw output of color images and other multi-plane images is not supported.&lt;/p&gt;</sci:help>
																<sci:legalval>bmp</sci:legalval>
																<sci:legalval>tif</sci:legalval>
																<sci:legalval>png</sci:legalval>
																<sci:legalval>jpg</sci:legalval>
																<sci:legalval selected="true">raw</sci:legalval>
															</sci:arg>
															<sci:arg name="Output Image Tag" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>String value to place in &lt;i&gt;ImageTag&lt;/i&gt; property of images read by this component. Value is also appended to the &lt;i&gt;ImageHistory&lt;/i&gt; property.</sci:help>
																<sci:value>ImageRecordWriter</sci:value>
															</sci:arg>
															<sci:arg name="Implementation" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="true">
																<sci:legalval selected="true">IPP</sci:legalval>
																<sci:legalval>ITK</sci:legalval>
															</sci:arg>
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DOCUMENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/imaging</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Nov 12 15:21:10 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Image Record Writer</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{B5BFA33F-9530-4459-AED1-4F6365EB2FAE}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1818 -820</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>For each data record, writes one image to a file</sci:value>
																<sci:value>&lt;p&gt;The image to be written is specified by either &lt;i&gt;Input Image Tag&lt;/i&gt; or &lt;i&gt;Input Image Test&lt;/i&gt;. If no image is specified, the first image on the data record is written to the file.&lt;p&gt;

&lt;p&gt;The directory path of the output file is specified in &lt;i&gt;Destination Directory&lt;/i&gt;, the file name is specified in &lt;i&gt;Filename&lt;/i&gt;, and the file type is specified in &lt;i&gt;Image Type&lt;/i&gt;. 
&lt;/p&gt;
&lt;p&gt;All image types are supported. &lt;/p&gt;
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format in &lt;i&gt;Image Type&lt;/i&gt; parameter. &lt;/p&gt;
&lt;p&gt;NOTE: the raw format currently supports 2-d monochrome single plane images only - raw output of color images and other multi-plane images is not supported.&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Group node containing child image node to be written to disk.</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Group nodes containing images successfully written.</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Group nodes containing images that failed to be written.</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.5.1.7</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>7</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Imaging\Writers\Image Record Writer</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>@SvrTempFiles := &apos;&apos;;
@ImageJViewerArgs := &apos;&apos;;</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Initialize Globals</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -1170</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>8</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Subprotocol" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:value>25</sci:value>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Run ImageJ</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>SUBPROTOCOLNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -1170</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.48</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>9</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Manipulator (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>haltprotocol();</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Custom Error Message</sci:help>
																	</sci:arg>
																	<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
																		<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>EXPRESSIONNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>2082 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																		<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.0.0.35</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>19</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.RunProgram.1">
																<sci:component name="Run Program (on Server)" version="2">
																	<sci:arg name="CommandLine" type="LinkDataPropertyType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
																		<sci:metaproplist>
																			<sci:propval name="SCI_InitializeUsingRevertInfo" ishidden="true" base64="UI1">Al1HAAFHQ29tbWFuZCBsaW5lIGZvciBhcHBsaWNhdGlvbiBvciBmaWxlIHRvIGV4ZWN1dGUgb24gdGhlIHNlcnZlciBtYWNoaW5lLiRUZXh0VHlwZQAMAAAAAQEAAAEcVGhpcyBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQuBAD8AAAAAAAAAAAAMENvbW1hbmRMaW5lA8xTz7sEAA==</sci:propval>
																			<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">TextType</sci:propval>
																			<sci:propval name="SCI_EvalOnInit" ishidden="true" boolVal="true"/>
																			<sci:propval name="SCI_EvalOnInitType" ishidden="true">TextType</sci:propval>
																		</sci:metaproplist>
																		<sci:help>Command line for application or file to execute on the server machine.</sci:help>
																		<sci:value>local_ImageJ_command_line</sci:value>
																	</sci:arg>
																	<sci:arg name="Result Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:help>Parameters for assigning results to properties.</sci:help>
																		<sci:member>PropertyForExitStatus</sci:member>
																		<sci:member>StderrProperty</sci:member>
																		<sci:member>StdoutProperty</sci:member>
																		<sci:member>StdinProperty</sci:member>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="StdinProperty" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>Defines the property name that holds the desired value of the program&apos;s standard input (stdin). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="StdoutProperty" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>Defines the property name that will hold the program&apos;s standard output (stdout). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
																		<sci:value>StdOutput</sci:value>
																	</sci:arg>
																	<sci:arg name="StderrProperty" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>Defines the property name that will hold the program&apos;s standard error (stderr). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
																		<sci:value>StdError</sci:value>
																	</sci:arg>
																	<sci:arg name="PropertyForExitStatus" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>Defines the property name to hold the value of the program exit status code. Denote a global property with a leading @ character.
Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
																		<sci:value>StdExit_Status_RC</sci:value>
																	</sci:arg>
																	<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:help>Contains less commonly used parameters</sci:help>
																		<sci:member>UseCommandInterpreter</sci:member>
																		<sci:member>Environment</sci:member>
																		<sci:member>WaitForExit</sci:member>
																		<sci:member>Evaluate Parameters for Each Record</sci:member>
																	</sci:arg>
																	<sci:arg name="WaitForExit" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:help>Whether or not to wait for the program to finish before returning from the process call.  This parameter must be set to True for StdinProperty, StdoutProperty, StderrProperty, or PropertyForExitStatus to function.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Environment" type="TextType" required="false" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &lt;br&gt;&lt;samp&gt;variable=name&lt;/samp&gt;&lt;p/&gt;
The spawned process will inherit the existing environment of the protocol job process, and any settings here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. to prepend, use something like&lt;br/&gt; &lt;samp&gt;PATH=c:\mydir;%PATH%&lt;/samp&gt;&lt;p/&gt;
Note that this syntax should be used with both Windows and Linux servers.  Due to OS designs, environment variables are case insensitive on Windows servers and case sensitive on Linux servers.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="UseCommandInterpreter" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:help>Whether or not to add &quot;cmd.exe /c&quot; (or &quot;/bin/sh -c&quot; on Linux servers) to the command line.  This causes the command line to be interpreted through the operating systems standard command shell allowing the use of redirection specifiers such as &apos;&amp;gt;&apos; and &apos;&amp;lt;&apos; and piping via &apos;|&apos;.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Evaluate Parameters for Each Record" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;
Set this parameter to True if the component has an input port and you need to re-evaluate the values of the other parameters for each record that is passed into the component.&lt;p/&gt;
This allows you to set a different command line for each record. You can do this by using a global property token in the command line.&lt;br/&gt;
Example (where &lt;samp&gt;dataname&lt;/samp&gt; is a global property):&lt;br/&gt;
&lt;samp&gt;/home/goober/bin/calibrate $(dataname)&lt;/samp&gt;
&lt;p&gt;
If you change the parameter type of the CommandLine parameter to be an Expression, you can define an expression that includes values of data properties on each incoming record.&lt;br/&gt;
Example (where &lt;samp&gt;dataset_id&lt;/samp&gt; and &lt;samp&gt;limit&lt;/samp&gt; are data record properties):&lt;br/&gt;
&lt;samp&gt;&apos;/home/goober/bin/calibrate &apos;.dataset_id.&apos; -max &apos;.limit&lt;/samp&gt;
&lt;/p&gt;</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Componet Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/integration</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue Apr 03 17:17:22 2007</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{1479A29D-F184-4979-BF60-2AA823D48831}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Run Program (on Server)</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Run Program</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>2370 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>COMPONENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Runs a command line application on the server machine.</sci:value>
																		<sci:value>&lt;p&gt;Define the command line by entering text as you would in a command prompt window.  On Windows servers, the component includes facilities for looking up a program name in the Windows registry. It can interpret a program name as a ProgID, such as &quot;InternetExplorer.Application&quot;, or as a shell command, such as &quot;IsisServer&quot;, or as a document to load into an associated program, such as &quot;c:\spreadsheet.xls&quot;.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;CommandLine&lt;/i&gt;: The command that the component will run. The correct syntax is the full command line exactly as you would type it in a shell command window. On Windows servers, the first space- or quote-delimited item of the command line can be a ProgId, such as &quot;InternetExplorer.Application&quot;.  This starts up Internet Explorer (IE) without having to specify the path to IE explicitly. Shell command associations are also supported, so &quot;IsisServer&quot; will start Isis Draw. Finally, there is support for file associations, so the path &quot;D:\docs\notes.doc&quot; will start Microsoft Word and load the specified document.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;WaitForExit&lt;/i&gt;: When TRUE, the data pipeline is blocked until the command has completed.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;PropertyForExitStatus&lt;/i&gt;: Allows you to assign the exit status of the command to a global property or to a data record property. Use either a global or local property reference, such as @status or status.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;UseCommandInterpreter&lt;/i&gt;: When True, parses the command line through the command interpreter on the remote server (with a shell such as csh or bash on Linux servers or the interpreter cmd.exe on Windows servers). In particular, this needs to be set to True if the CommandLine utilizes standard output or input (such as cmd.exe /c &amp;quot;c:\Program Files\R\rterm.exe&amp;quot; &amp;quot;0&amp;lt;$(CommandFile)&amp;quot;).&lt;/p&gt;
&lt;p&gt;&lt;i&gt;StdinProperty, StdoutProperty, and StderrProperty&lt;/i&gt;: Allows you to redirect standard communications to global properties or to data record properties. Use either a global or local property reference, such as @stdin or stdin.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Environment&lt;/i&gt;: Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the PipelinePilot process, and any settings defined here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;).  Due to differences in the operating systems, these variables are case insensitive on Windows servers, but case sensitive on Linux servers.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt; If your command line includes a file path, create a new parameter for the component, of type URL, so the user can enter the path. Then use a token replacement in the CommandLine to pick up the value. For example: Notepad.exe &quot;$(SciTegicRoot)\$(Path)&quot;. &lt;/li&gt;
&lt;li&gt;When the component is separated from any other pipeline, the command line is run just once.&lt;/li&gt; 
&lt;li&gt;You can add an input or output pass port to the component, to integrate it with a pipeline. If there is an output port, but no input port, the command is run once and a single new record is generated. If there is an input port, then the command is run once for each data record passed in.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/integration_command_line.pdf&apos;)&quot;&gt;
Command-line Integration Guide&lt;/a&gt;&lt;/p&gt;
</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic Data</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>%VERSION 3%</sci:value>
																		<sci:value>2858 -470 444 134</sci:value>
																		<sci:value>255 255 0</sci:value>
																		<sci:value>NEW style -- Win64</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>6.1.0.14</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>20</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Database and Application Integration\Application Integration\Command Line\Run Program (on Server)</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Manipulator (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>@StdOutput := StdOutput;</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Custom Error Message</sci:help>
																	</sci:arg>
																	<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
																		<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>EXPRESSIONNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>2658 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																		<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.0.0.35</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>15</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Conditional ImageJ Debug Viewer (v2)" version="2">
																	<sci:arg name="Force Always Show" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
																		<sci:metaproplist>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Force Always Show</sci:value>
																				<sci:value>Force Always Show</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>Force Always Show</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Debug Level Min in Property" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Debug Level Min in Property</sci:value>
																				<sci:value>Debug Level Min in Property</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:help>Debug Level Min in Property</sci:help>
																		<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Property Name Containing Debug Level" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Property Name Containing Debug Level</sci:value>
																				<sci:value>Property Name Containing Debug Level</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:help>Property Name Containing Debug Level</sci:help>
																		<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
																		<sci:value>g_param_Enable_Debug_Checks_and_Messages</sci:value>
																	</sci:arg>
																	<sci:arg name="Viewer Settings" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Viewer Settings</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:member>Initial Expansion Level</sci:member>
																		<sci:member>Additional Options</sci:member>
																	</sci:arg>
																	<sci:arg name="Initial Expansion Level" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Initial Expansion Level</sci:value>
																				<sci:value>Initial Expansion Level</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:help>This is the number of levels that will be in an expanded state when the window initially opens. Levels of any higher order than this are initially collapsed. 
  Note that this number can be changed in the viewer itself to affect subsequent appearances of the viewer.</sci:help>
																		<sci:value>3</sci:value>
																	</sci:arg>
																	<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Additional Options</sci:value>
																				<sci:value>Additional Options</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:help>Contains less commonly used parameters</sci:help>
																		<sci:member>Preserve White Space</sci:member>
																		<sci:member>Array Value Layout</sci:member>
																		<sci:member>Draw Sibling Bar</sci:member>
																		<sci:member>Show Property Types</sci:member>
																		<sci:member>Show Metadata</sci:member>
																		<sci:member>Title</sci:member>
																		<sci:member>Usage Mode</sci:member>
																		<sci:member>Image Size</sci:member>
																		<sci:member>Sort Properties</sci:member>
																	</sci:arg>
																	<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Title</sci:value>
																				<sci:value>Title</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>&lt;p&gt;
Text for the title bar of the viewer.
&lt;p/&gt;
A title can be useful to help distinguish different instances of the viewer in a protocol.
&lt;/p&gt;</sci:help>
																		<sci:value>02 RunContext -- OnServer [Macro] After &apos;Run ImageJ&apos; -- Debug (NonProduction) Viewer</sci:value>
																	</sci:arg>
																	<sci:arg name="Sort Properties" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Sort Properties</sci:value>
																				<sci:value>Sort Properties</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>When set to True, properties at each node level will be sorted for display only. Otherwise, properties are shown in the order which they were added.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Preserve White Space" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Preserve White Space</sci:value>
																				<sci:value>Preserve White Space</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>If set to True, the property values are displayed in a fixed-width font and all spaces and new lines are maintained. This can be useful for viewing highly structured property text values.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Array Value Layout" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Array Value Layout</sci:value>
																				<sci:value>Array Value Layout</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>The orientation for the display of array properties. The Vertical orientation displays the item values in a vertical list. The Horizontal orientation saves vertical space by displaying the array items in a single comma-separated line of text.</sci:help>
																		<sci:legalval>Horizontal</sci:legalval>
																		<sci:legalval selected="true">Vertical</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Show Property Types" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Show Property Types</sci:value>
																				<sci:value>Show Property Types</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>When set to true, there is a tooltip that displays the data type of a property when the mouse hovers over its name.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Show Metadata" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Show Metadata</sci:value>
																				<sci:value>Show Metadata</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>Set to True to include property metadata values in the tree display.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Draw Sibling Bar" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Draw Sibling Bar</sci:value>
																				<sci:value>Draw Sibling Bar</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>When set to true, a vertical bar is drawn for each node child group within the hierarchy to aid the visual organization of a complex or deep data set.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Image Size" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Image Size</sci:value>
																				<sci:value>Image Size</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>The width and height of the square images displayed for some node types within the viewer.</sci:help>
																		<sci:value>150</sci:value>
																	</sci:arg>
																	<sci:arg name="Usage Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Usage Mode</sci:value>
																				<sci:value>Usage Mode</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>The way in which this component is being used. As a Summary viewer, data
records are stored up and all displayed in one viewer. In the Inline mode, data records are displayed one at a time.</sci:help>
																		<sci:member>Show When</sci:member>
																		<sci:member>Maximum</sci:member>
																		<sci:legalval selected="true">Inline</sci:legalval>
																		<sci:legalval>Summary</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Maximum" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Maximum</sci:value>
																				<sci:value>Maximum</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>The number of records to display in Summary usage mode.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Usage Mode to &quot;Summary&quot;&apos;);
	Parameter(&apos;Usage Mode&apos;) eq &apos;Summary&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Show When" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Show When</sci:value>
																				<sci:value>Show When</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>&lt;p&gt;
The component will only display records for which the specified PilotScript expression evaluates to True. The default is to leave the condition blank, which means all data records will be displayed.
&lt;p/&gt;
Note that this conditional expression can be edited in the viewer itself to affect when the viewer will appear again.
&lt;p/&gt;
 There is an internal record counter value defined by this viewer, named @recordnum, which may be used in the expression. @recordnum starts counting at 1 for the first record. For example, to show the viewer every 1000 records, use the expression:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;samp&gt;@recordnum%1000=0;&lt;/samp&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other examples:&lt;/p&gt;
&lt;li&gt;&lt;samp&gt;newval = oldval - 3;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;logp &amp;gt; 10.0 ;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;rmatch(team, &apos;chi*&apos;,&apos;i&apos;) AND Pos = 1;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;@recordnum &amp;lt;= 10&lt;/samp&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Usage Mode to &quot;Inline&quot;&apos;);
	Parameter(&apos;Usage Mode&apos;) eq &apos;Inline&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																		<sci:member>RunToCompletion Categorize Using</sci:member>
																		<sci:legalval selected="true">False</sci:legalval>
																		<sci:legalval>True - For Each Data Record</sci:legalval>
																		<sci:legalval>True - For Each Category</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
																		<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																		<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
																		<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Run subprotocol on grid engine if available.</sci:help>
																		<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
																		<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval selected="true">Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval selected="true">Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Custom Error Message</sci:help>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Conditional ImageJ Debug Viewer (v2)</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>SUBPROTOCOLNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>790</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{C20585F7-14D3-4284-957B-450CBD9717ED}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>2994 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Conditional ImageJ Debug Viewer (v2)</sci:value>
																		<sci:value>
&lt;br&gt;
&lt;strong&gt;Note to Customers:  &lt;/strong&gt;
&lt;p&gt;This is an &apos;internals&apos; component and is NOT intended for direct customer use.&lt;/p&gt;

&lt;p&gt;Please contact support if you have any questions or would like further information.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;This is an &lt;strong&gt;internal component&lt;/strong&gt; and is not meant for direct external use.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; this component could change or go away in a future release.
&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																		<sci:value>None</sci:value>
																		<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>16.1.0.1209</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/imaging</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue May 03 22:30:20 2016</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>25</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Made Link Into Copy</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Modified</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Imaging\Utilities\Internals\ImageJ\Conditional ImageJ Debug Viewer (v2)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol/>
															</sci:data>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Manipulator (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>/*Throw error if anything wrong happens -- StdError should always exist on data-record */
if ( (StdError is not defined) or (StdError not eq &apos;&apos;) ) then
	#New_StdError_String_PrePend := &quot;Error from ImageJ runtime.  Error returned is &lt;&quot; . StdError . &quot;&gt;&quot;;
	Error(#New_StdError_String_PrePend);
end if;</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval>ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>If (StdError) then ERROR()</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>EXPRESSIONNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>3282 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Applies a PilotScript expression to each data record</sci:value>
																		<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.0.0.35</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>17</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Expand token replacement (v2)" version="2">
																	<sci:arg name="Expand_Token_Rep_Glob" type="TextType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
																		<sci:help>For &apos;Global&apos; token replacement for text containing $(VarName) globals.</sci:help>
																		<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
																		<sci:value>&quot;$(imageJInstallPath_g)jre\bin\javaw&quot; -cp &quot;$(ImageJ_JAR_FullPath_on_Server_g)&quot;;&quot;$(JobDir)/ImageJViewer.jar&quot; com.scitegic.imaging.ij.ImageJViewer -plugin &quot;$(PluginPath)&quot; -batch &quot;$(JobDir)\macro.txt&quot; &quot;$(ImageJViewerArgs)&quot;</sci:value>
																	</sci:arg>
																	<sci:arg name="Property Name for Expanded Token Replaced String" type="StringType" required="true" visibility="visible" multi="false">
																		<sci:help>Property Name for Expanded Token Replaced String</sci:help>
																		<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
																		<sci:value>local_OLD_Pre2017_ImageJ_OnClient_NO_Macro_command_line_DONT_USE_Debugging_Only</sci:value>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																		<sci:member>RunToCompletion Categorize Using</sci:member>
																		<sci:legalval>False</sci:legalval>
																		<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
																		<sci:legalval>True - For Each Category</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
																		<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																		<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
																		<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Run subprotocol on grid engine if available.</sci:help>
																		<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
																		<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Custom Error Message</sci:help>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Expand token replacement (v2)</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>SUBPROTOCOLNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>790</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{50E5160D-68FD-4FCF-9733-EA02DDDC3A29}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>954 -295</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Expand token replacement (v2)</sci:value>
																		<sci:value>&lt;br&gt;
&lt;strong&gt;Note to Customers:  &lt;/strong&gt;
&lt;p&gt;This is an &apos;internals&apos; component and is NOT intended for direct customer use.&lt;/p&gt;

&lt;p&gt;Please contact support if you have any questions or would like further information.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;This is an &lt;strong&gt;internal component&lt;/strong&gt; and is not meant for direct external use.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; this component could change or go away in a future release.
&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>16.1.0.1209</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>%VERSION 3%</sci:value>
																		<sci:value>1273 -820 532 177</sci:value>
																		<sci:value>0 255 0</sci:value>
																		<sci:value>Only used for traces.
 NO Runtime side-effects.</sci:value>
																		<sci:value>362 -95 304 177</sci:value>
																		<sci:value>255 255 0</sci:value>
																		<sci:value>Server MUST 
have MACRO</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/imaging</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue May 03 22:30:06 2016</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>9</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Made Link Into Copy</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Modified</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>OriginalPackage</sci:help>
																		<sci:value>scitegic/coreutils</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Imaging\Utilities\Internals\ImageJ\Expand token replacement (v2)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol/>
															</sci:data>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Create ImageJ cmd-line (quoted) (v2)" version="2">
																	<sci:arg name="OnServer or OnClient - ImageJ" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>OnServer or OnClient - ImageJ</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:help>OnServer or OnClient - ImageJ</sci:help>
																		<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
																		<sci:legalval selected="true">OnServer</sci:legalval>
																		<sci:legalval>OnClient</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Property Name for ImageJ Command Line" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Property Name for ImageJ Command Line</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:help>&lt;p&gt;Property Name for ImageJ Command Line&lt;/p&gt;
&lt;p&gt;This &lt;u&gt;&apos;output&apos; property is created&lt;/u&gt; or overwritten if it exists.&lt;/p&gt;
</sci:help>
																		<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
																		<sci:value>local_ImageJ_command_line</sci:value>
																	</sci:arg>
																	<sci:arg name="Not Used" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
																		<sci:help>not used at this point</sci:help>
																		<sci:member>Property Name for Server Platfrom</sci:member>
																		<sci:member>Has Macro</sci:member>
																	</sci:arg>
																	<sci:arg name="Property Name for Server Platfrom" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																		<sci:help>&lt;p&gt;Property Name for Server Platfrom
&lt;/p&gt;

&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Values to Expect:&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Windows64&lt;/strong&gt;  **  Forced to &apos;Windows64&apos; if cant be determined&lt;/li&gt;
&lt;li&gt;Linux64 -- new support in 2017&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;</sci:help>
																		<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
																		<sci:value>kkk</sci:value>
																	</sci:arg>
																	<sci:arg name="Has Macro" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
																		<sci:help>Has Macro
&lt;br&gt;
&lt;p&gt;NOTE_01: OnServer MUST have a &quot;Macro&quot; and this must be set to &apos;TRUE&quot;.
&lt;p&gt;&lt;strong&gt;The Macro string must not be empty&lt;/strong&gt;, or else this is an runtime error.
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;
&lt;p&gt;NOTE_02: OnClient may or may-NOT have a &quot;Macro&quot;
&lt;/p&gt;</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																		<sci:member>RunToCompletion Categorize Using</sci:member>
																		<sci:legalval selected="true">False</sci:legalval>
																		<sci:legalval>True - For Each Data Record</sci:legalval>
																		<sci:legalval>True - For Each Category</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
																		<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																		<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
																		<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Run subprotocol on grid engine if available.</sci:help>
																		<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
																		<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Shortcut Version" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Used to maintain backwards compatibility for older protocols with this shortcut component.</sci:help>
																		<sci:legalval selected="true">3</sci:legalval>
																		<sci:legalval>2</sci:legalval>
																		<sci:legalval>1</sci:legalval>
																	</sci:arg>
																	<sci:arg name="VersionImaging" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
																		<sci:help>&lt;strong&gt;NOTE:&lt;/strong&gt; this parameter should not be changed.</sci:help>
																		<sci:legalval selected="true">3</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Custom Error Message</sci:help>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Create ImageJ cmd-line (quoted) (v2)</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>SUBPROTOCOLNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>790</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{E892F31E-B1B1-4F72-B785-300A231908D8}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>1242 -295</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Create ImageJ cmd-line (quoted) (v2)</sci:value>
																		<sci:value>&lt;br&gt;
&lt;strong&gt;Note to Customers:  &lt;/strong&gt;
&lt;p&gt;This is an &apos;internals&apos; component and is NOT intended for direct customer use.&lt;/p&gt;

&lt;p&gt;Please contact support if you have any questions or would like further information.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;This is an &lt;strong&gt;internal component&lt;/strong&gt; and is not meant for direct external use.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; this component could change or go away in a future release.
&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																		<sci:value>None</sci:value>
																		<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>18.1.0.1580</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																		<sci:value>%VERSION 3%</sci:value>
																		<sci:value>98 -470 617 220</sci:value>
																		<sci:value>255 0 0</sci:value>
																		<sci:value>Not using 
 interface parameters
-- assume global exist</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/imaging</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Thu Sep 07 14:31:48 2017</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>10</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Made Link Into Copy</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Modified</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Imaging\Utilities\Internals\ImageJ\Create ImageJ cmd-line (quoted) (v2)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.EvaluateExpression.1">
																		<sci:component name="Custom Manipulator (PilotScript)" version="2">
																			<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																				<sci:member>Initial Expression</sci:member>
																				<sci:member>Final Expression</sci:member>
																				<sci:member>Keep Calculated Properties</sci:member>
																				<sci:value>ImageJ_PLP_Component_type := parameter(&apos;OnServer or OnClient - ImageJ&apos;);

//__NOTE: for the v5 version of &quot;ImageJ on Server&quot;, we use the global &apos;ImageJ_JAR_FullPath_on_Server_g&apos; 
//__NOTE2: for v4 version of &quot;ImageJ on Server&quot;, we use OLD global &apos;ImageJ Location&apos;
//__NOTE3:  So, if we find global &apos;ImageJ_JAR_FullPath_on_Server_g&apos; -- we use it.
#ImageJ_JAR_FullPath_on_Server_for_cmd_line := &quot;&quot;;
if( globalproperty(&quot;ImageJ_JAR_FullPath_on_Server_g&quot;) is defined  ) then
	#ImageJ_JAR_FullPath_on_Server_for_cmd_line := globalproperty(&quot;ImageJ_JAR_FullPath_on_Server_g&quot;);
elsif( globalproperty(&quot;ImageJ Location&quot;) is defined  ) then
	#ImageJ_JAR_FullPath_on_Server_for_cmd_line := globalproperty(&quot;ImageJ Location&quot;);
else
	error(&quot;Error: Failed to find property for &apos;ImageJ JAR&apos; full-path in globals.&quot;);
end if;

if ( (&apos;Windows64&apos; eq gsys_ServerOS) OR (&apos;OnClient&apos; eq %ImageJ_PLP_Component_type) )then
	//_Two Cases: OnServer(Win64)  OR  OnClient
	//   #1  -- we are OnServer and OS is Win64
	//   #2  -- we are OnClient and the code will run on Win64 AND we don&apos;t care about the Server side OS (Win64 or Linux64) 
	java_executable_name := &apos;javaw&apos;;
	ij_jar_to_custom_jar_sep_char := &apos;;&apos;;  //__Win uses (;) char
else
	//__Linux is slightly different 
	java_executable_name := &apos;java&apos;;
	ij_jar_to_custom_jar_sep_char := &apos;:&apos;; //__UNIX uses (:) char
end if;


if(&apos;OnClient&apos; eq %ImageJ_PLP_Component_type) then
	dirPath_OurPLPComponents_non_imagej_stuff := local_OnClient_OurPLPComponents_stuff_is_ClientRunDirectory;
	//__For OnClient the &apos;remote&apos; ClientDir is the &apos;JobDir&apos; -- the Macro and files all go in same place
	dirPath_OurPLPComponents_non_imagej_JobDir_stuff := dirPath_OurPLPComponents_non_imagej_stuff; 
else
	dirPath_OurPLPComponents_non_imagej_stuff := local_OnServer_OurPLPComponents_stuff_FilePath_is_TempDir;
	//__For OnServer, Only the MACRO goes in the &apos;JobDir&apos; -- the rest of the files go in &apos;tempDir&apos; so they get cleaned up AND don&apos;t show up in JOBS in proClient.
	dirPath_OurPLPComponents_non_imagej_JobDir_stuff := local_OnServer_OurPLPComponents_stuff_FilePath_is_JobDir; 
end if;

//_This &quot;Name&quot;is used for &apos;Output Property&apos; created
cmd_line_OutputPropertyName := parameter(&apos;Property Name for ImageJ Command Line&apos;);

//__For OnClient and No_Macro ; we don&apos;t (&quot;) quote the args --&gt; cmd_line_ij_file_args_optional_quote_char := &apos;&apos;;
if (true == local_macro_Exists ) then
	cmd_line_batch_option_for_Macro__Required_For_OnServer := &quot; -batch &quot; . &apos;&quot;&apos; . %dirPath_OurPLPComponents_non_imagej_JobDir_stuff . &quot;/macro.txt&quot; . &apos;&quot; &apos; ;
	cmd_line_ij_file_args_optional_quote_char := &apos;&quot;&apos;;
else 
	//__We have NO_MACRO -- we better be OnClient
	cmd_line_batch_option_for_Macro__Required_For_OnServer := &quot;&quot;;
	if(&apos;OnClient&apos; eq %ImageJ_PLP_Component_type) then
		cmd_line_ij_file_args_optional_quote_char := &apos;&apos;; //__Only for OnClient and NO_MACRO
	else
		local_FLAG_ERROR__We_have_NO_MACRO_OnServer := &quot;Flag_Error:  You must have a MACRO defined for OnServer.&quot;;
	end if;
end if;



property(%cmd_line_OutputPropertyName) :=    &apos;&quot;&apos; . @imageJInstallPath_g . &quot;jre/bin/&quot; . %java_executable_name . &apos;&quot;&apos; . &quot; -cp &quot; //__windows &apos;javaw&apos; and linux &apos;java&apos; -- javaws


					.  &apos;&quot;&apos; . #ImageJ_JAR_FullPath_on_Server_for_cmd_line . &apos;&quot;&apos;  //__path includes the &apos;ij.jar&apos; file --  we quote the entire path -- for spaces
					. %ij_jar_to_custom_jar_sep_char    //__Windows uses &apos;;&apos;  and Linux uses &apos;:&apos;
					.  &apos;&quot;&apos;  . %dirPath_OurPLPComponents_non_imagej_stuff . &quot;/ImageJViewer.jar&quot; . &apos;&quot;&apos; 
					.  &quot; com.scitegic.imaging.ij.ImageJViewer -plugin &quot; 
					.  &apos;&quot;&apos; . @&apos;PluginPath&apos; . &apos;&quot; &apos; 
					.	%cmd_line_batch_option_for_Macro__Required_For_OnServer 
					.   %cmd_line_ij_file_args_optional_quote_char . @&apos;ImageJViewerArgs&apos; . &apos; &apos; . %cmd_line_ij_file_args_optional_quote_char ; //__The Image Full-Paths -- The END of command-line


</sci:value>
																			</sci:arg>
																			<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnServer or OnClient - ImageJ" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																				<sci:metaproplist>
																					<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
																				</sci:metaproplist>
																				<sci:help>OnServer or OnClient - ImageJ</sci:help>
																				<sci:value>OnServer or OnClient - ImageJ</sci:value>
																			</sci:arg>
																			<sci:arg name="Property Name for ImageJ Command Line" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																				<sci:metaproplist>
																					<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
																				</sci:metaproplist>
																				<sci:help>&lt;p&gt;Property Name for ImageJ Command Line&lt;/p&gt;
&lt;p&gt;This &lt;u&gt;&apos;output&apos; property is created&lt;/u&gt; or overwritten if it exists.&lt;/p&gt;
</sci:help>
																				<sci:value>Property Name for ImageJ Command Line</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Custom Error Message</sci:help>
																			</sci:arg>
																			<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Version of expression parser to use.</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Create ImageJ cmd-line (worker)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
																				<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>EXPRESSIONNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Applies a PilotScript expression to each data record</sci:value>
																				<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.35</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:version iVal="1"/>
																</sci:protocol>
															</sci:data>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Conditional ImageJ Debug Viewer (v2)" version="2">
																	<sci:arg name="Force Always Show" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
																		<sci:metaproplist>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Force Always Show</sci:value>
																				<sci:value>Force Always Show</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>Force Always Show</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Debug Level Min in Property" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Debug Level Min in Property</sci:value>
																				<sci:value>Debug Level Min in Property</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:help>Debug Level Min in Property</sci:help>
																		<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
																		<sci:value>3</sci:value>
																	</sci:arg>
																	<sci:arg name="Property Name Containing Debug Level" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Property Name Containing Debug Level</sci:value>
																				<sci:value>Property Name Containing Debug Level</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:help>Property Name Containing Debug Level</sci:help>
																		<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
																		<sci:value>g_param_Enable_Debug_Checks_and_Messages</sci:value>
																	</sci:arg>
																	<sci:arg name="Viewer Settings" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Viewer Settings</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:member>Initial Expansion Level</sci:member>
																		<sci:member>Additional Options</sci:member>
																	</sci:arg>
																	<sci:arg name="Initial Expansion Level" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Initial Expansion Level</sci:value>
																				<sci:value>Initial Expansion Level</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:help>This is the number of levels that will be in an expanded state when the window initially opens. Levels of any higher order than this are initially collapsed. 
  Note that this number can be changed in the viewer itself to affect subsequent appearances of the viewer.</sci:help>
																		<sci:value>3</sci:value>
																	</sci:arg>
																	<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Additional Options</sci:value>
																				<sci:value>Additional Options</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:help>Contains less commonly used parameters</sci:help>
																		<sci:member>Preserve White Space</sci:member>
																		<sci:member>Array Value Layout</sci:member>
																		<sci:member>Draw Sibling Bar</sci:member>
																		<sci:member>Show Property Types</sci:member>
																		<sci:member>Show Metadata</sci:member>
																		<sci:member>Title</sci:member>
																		<sci:member>Usage Mode</sci:member>
																		<sci:member>Image Size</sci:member>
																		<sci:member>Sort Properties</sci:member>
																	</sci:arg>
																	<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Title</sci:value>
																				<sci:value>Title</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>&lt;p&gt;
Text for the title bar of the viewer.
&lt;p/&gt;
A title can be useful to help distinguish different instances of the viewer in a protocol.
&lt;/p&gt;</sci:help>
																		<sci:value>01 RunContext -- OnServer [Macro] Before &apos;Run ImageJ&apos; -- Debug (NonProduction) Viewer</sci:value>
																	</sci:arg>
																	<sci:arg name="Sort Properties" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Sort Properties</sci:value>
																				<sci:value>Sort Properties</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>When set to True, properties at each node level will be sorted for display only. Otherwise, properties are shown in the order which they were added.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Preserve White Space" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Preserve White Space</sci:value>
																				<sci:value>Preserve White Space</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>If set to True, the property values are displayed in a fixed-width font and all spaces and new lines are maintained. This can be useful for viewing highly structured property text values.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Array Value Layout" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Array Value Layout</sci:value>
																				<sci:value>Array Value Layout</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>The orientation for the display of array properties. The Vertical orientation displays the item values in a vertical list. The Horizontal orientation saves vertical space by displaying the array items in a single comma-separated line of text.</sci:help>
																		<sci:legalval>Horizontal</sci:legalval>
																		<sci:legalval selected="true">Vertical</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Show Property Types" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Show Property Types</sci:value>
																				<sci:value>Show Property Types</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>When set to true, there is a tooltip that displays the data type of a property when the mouse hovers over its name.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Show Metadata" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Show Metadata</sci:value>
																				<sci:value>Show Metadata</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>Set to True to include property metadata values in the tree display.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Draw Sibling Bar" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Draw Sibling Bar</sci:value>
																				<sci:value>Draw Sibling Bar</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>When set to true, a vertical bar is drawn for each node child group within the hierarchy to aid the visual organization of a complex or deep data set.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Image Size" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Image Size</sci:value>
																				<sci:value>Image Size</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>The width and height of the square images displayed for some node types within the viewer.</sci:help>
																		<sci:value>150</sci:value>
																	</sci:arg>
																	<sci:arg name="Usage Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Usage Mode</sci:value>
																				<sci:value>Usage Mode</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>The way in which this component is being used. As a Summary viewer, data
records are stored up and all displayed in one viewer. In the Inline mode, data records are displayed one at a time.</sci:help>
																		<sci:member>Show When</sci:member>
																		<sci:member>Maximum</sci:member>
																		<sci:legalval selected="true">Inline</sci:legalval>
																		<sci:legalval>Summary</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Maximum" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Maximum</sci:value>
																				<sci:value>Maximum</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>The number of records to display in Summary usage mode.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Usage Mode to &quot;Summary&quot;&apos;);
	Parameter(&apos;Usage Mode&apos;) eq &apos;Summary&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Show When" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																				<sci:value>Show When</sci:value>
																				<sci:value>Show When</sci:value>
																			</sci:mpropval>
																		</sci:metaproplist>
																		<sci:help>&lt;p&gt;
The component will only display records for which the specified PilotScript expression evaluates to True. The default is to leave the condition blank, which means all data records will be displayed.
&lt;p/&gt;
Note that this conditional expression can be edited in the viewer itself to affect when the viewer will appear again.
&lt;p/&gt;
 There is an internal record counter value defined by this viewer, named @recordnum, which may be used in the expression. @recordnum starts counting at 1 for the first record. For example, to show the viewer every 1000 records, use the expression:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;samp&gt;@recordnum%1000=0;&lt;/samp&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other examples:&lt;/p&gt;
&lt;li&gt;&lt;samp&gt;newval = oldval - 3;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;logp &amp;gt; 10.0 ;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;rmatch(team, &apos;chi*&apos;,&apos;i&apos;) AND Pos = 1;&lt;/samp&gt;&lt;/li&gt;
&lt;li&gt;&lt;samp&gt;@recordnum &amp;lt;= 10&lt;/samp&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Usage Mode to &quot;Inline&quot;&apos;);
	Parameter(&apos;Usage Mode&apos;) eq &apos;Inline&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																		<sci:member>RunToCompletion Categorize Using</sci:member>
																		<sci:legalval selected="true">False</sci:legalval>
																		<sci:legalval>True - For Each Data Record</sci:legalval>
																		<sci:legalval>True - For Each Category</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
																		<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																		<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
																		<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Run subprotocol on grid engine if available.</sci:help>
																		<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
																		<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval selected="true">Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval selected="true">Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Custom Error Message</sci:help>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Conditional ImageJ Debug Viewer (v2)</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>SUBPROTOCOLNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>790</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{C20585F7-14D3-4284-957B-450CBD9717ED}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>1506 -295</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Conditional ImageJ Debug Viewer (v2)</sci:value>
																		<sci:value>
&lt;br&gt;
&lt;strong&gt;Note to Customers:  &lt;/strong&gt;
&lt;p&gt;This is an &apos;internals&apos; component and is NOT intended for direct customer use.&lt;/p&gt;

&lt;p&gt;Please contact support if you have any questions or would like further information.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;This is an &lt;strong&gt;internal component&lt;/strong&gt; and is not meant for direct external use.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; this component could change or go away in a future release.
&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																		<sci:value>None</sci:value>
																		<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>16.1.0.1209</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/imaging</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue May 03 22:30:20 2016</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>24</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Made Link Into Copy</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Modified</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Imaging\Utilities\Internals\ImageJ\Conditional ImageJ Debug Viewer (v2)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol/>
															</sci:data>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Filter (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>The PilotScript expression used to filter the data.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>#doWindowsProcessing := false; //__the default

if( gsys_ServerOS is not defined) then
	#doWindowsProcessing := true; //__if something was missed - force Windows Style
	DebugMessage(&quot;Warning: Did not find &apos;gsys_ServerOS&apos; property as expected&quot;);
else
	DebugMessage(&quot;Info: The Platform is &lt;&quot; . %gsys_ServerOS . &quot;&gt;&quot;);
	if(&quot;Windows64&quot; eq gsys_ServerOS) then
		#doWindowsProcessing := true;
	elsif(&quot;Linux64&quot; eq gsys_ServerOS) then
		#doWindowsProcessing := false;
	else
		#doWindowsProcessing := true;
		DebugMessage(&quot;Warning: The &apos;gsys_ServerOS&apos; = &lt;&quot; . %gsys_ServerOS . &quot;&gt;&quot;);
	end if;

end if;





#doWindowsProcessing;</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Custom Error Message</sci:help>
																	</sci:arg>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Win64 ??</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
																		<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>FILTERNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Filter (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>1794 -295</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																		<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>18</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:proplist>
																	<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																</sci:proplist>
															</sci:data>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Filter (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>The PilotScript expression used to filter the data.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>@ImageJViewerArgs not eq &apos;&apos;

</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:value>ComponentReturnsPass</sci:value>
																		<sci:value>ComponentReturnsFail</sci:value>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval>ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Is Image Node?</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>FILTERNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Filter (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>90 -470</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Passes data records for which a PilotScript expression evaluates to True</sci:value>
																		<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:proplist>
																	<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																</sci:proplist>
															</sci:data>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="ImageJ Args and Props OnClient (v2)" version="2">
																	<sci:arg name="OnServer or OnClient - ImageJ" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																		<sci:metaproplist>
																			<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
																				<sci:value>OnServer or OnClient - ImageJ</sci:value>
																				<sci:value>OnServer or OnClient - ImageJ</sci:value>
																			</sci:mpropval>
																			<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
																		</sci:metaproplist>
																		<sci:help>OnServer or OnClient - ImageJ</sci:help>
																		<sci:validscript>parameter() ne &apos;&apos;</sci:validscript>
																		<sci:legalval selected="true">OnServer</sci:legalval>
																		<sci:legalval>OnClient</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																		<sci:member>RunToCompletion Categorize Using</sci:member>
																		<sci:legalval selected="true">False</sci:legalval>
																		<sci:legalval>True - For Each Data Record</sci:legalval>
																		<sci:legalval>True - For Each Category</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
																		<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																		<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
																		<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Run subprotocol on grid engine if available.</sci:help>
																		<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
																		<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Custom Error Message</sci:help>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>ImageJ Args and Props OnClient (v2)</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>SUBPROTOCOLNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>790</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{C6016AB1-DB83-4DC9-A7C5-E7B440A3C39A}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>378 -470</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>ImageJ Args and Props OnClient (v2)</sci:value>
																		<sci:value>&lt;br&gt;
&lt;strong&gt;Note to Customers:  &lt;/strong&gt;
&lt;p&gt;This is an &apos;internals&apos; component and is NOT intended for direct customer use.&lt;/p&gt;

&lt;p&gt;Please contact support if you have any questions or would like further information.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;This is an &lt;strong&gt;internal component&lt;/strong&gt; and is not meant for direct external use.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; this component could change or go away in a future release.
&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																		<sci:value>None</sci:value>
																		<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>16.1.0.1209</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/imaging</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue May 03 22:29:58 2016</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>6</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Made Link Into Copy</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Modified</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>OriginalPackage</sci:help>
																		<sci:value>scitegic/coreutils</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Imaging\Utilities\Internals\ImageJ\ImageJ Args and Props OnClient (v2)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.EvaluateExpression.1">
																		<sci:component name="Custom Manipulator (PilotScript)" version="2">
																			<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																				<sci:member>Initial Expression</sci:member>
																				<sci:member>Final Expression</sci:member>
																				<sci:member>Keep Calculated Properties</sci:member>
																				<sci:value>ImageJ_PLP_Component_type := parameter(&apos;OnServer or OnClient - ImageJ&apos;);
local_OnClient_OurPLPComponents_stuff_is_ClientRunDirectory := &apos;&apos;;
local_OnServer_OurPLPComponents_stuff_FilePath_is_TempDir := &apos;&apos;;
local_OnServer_OurPLPComponents_stuff_FilePath_is_JobDir := &apos;&apos;;
local_OnServer_FilePath_is_TempDir := &apos;&apos;;
#directoryFullPathForFiles := &apos;&apos;;

//__NOTE:  OnClient uses &apos;clientFilePath&apos;(@ClientRunDirectory)   AND  OnServer uses &apos;serverFilePath&apos;(@TempDir)
//__We are attempting to merge the logic here to resolve some of the bugs and Linux cross-platform issues
if(&apos;OnClient&apos; eq %ImageJ_PLP_Component_type) then
	#directoryFullPathForFiles := @ClientRunDirectory;  //__OnClient uses &apos;clientFilePath&apos;(@ClientRunDirectory)   AND  OnServer uses &apos;serverFilePath&apos;(@TempDir)  
	local_OnClient_OurPLPComponents_stuff_is_ClientRunDirectory := #directoryFullPathForFiles;
else
	#directoryFullPathForFiles := @TempDir;  //__OnClient uses &apos;clientFilePath&apos;(@ClientRunDirectory)   AND  OnServer uses &apos;serverFilePath&apos;(@TempDir)  
	local_OnServer_OurPLPComponents_stuff_FilePath_is_TempDir := #directoryFullPathForFiles;
	local_OnServer_OurPLPComponents_stuff_FilePath_is_JobDir := @JobDir;
end if;
  

//__Determine the &apos;Debug Tracing&apos; and &apos;Version&apos; related details -- not used in production path
if ( @&apos;Shortcut Version&apos; is defined) then
	g_param_imp_Shortcut_Version := integer( @&apos;Shortcut Version&apos; );
else
	g_param_imp_Shortcut_Version := -1;
end if;
if ( @&apos;VersionImaging&apos; is defined) then
	g_param_imp_VersionImaging := integer( @&apos;VersionImaging&apos; );
else
	g_param_imp_VersionImaging := -1;
end if;
if ( @&apos;Enable Debug Checks and Messages&apos; is defined) then
	g_param_Enable_Debug_Checks_and_Messages := integer( @&apos;Enable Debug Checks and Messages&apos; );
else
	g_param_Enable_Debug_Checks_and_Messages := -1;
end if;
if ( @&apos;Expected Runtime Type&apos; is defined) then
	g_param_Expected_Runtime_Type :=  @&apos;Expected Runtime Type&apos;;
else
	g_param_Expected_Runtime_Type := &apos;OLD_VERSION_PRE_2017&apos;;
end if;
if ( @&apos;Platform Determination Type&apos; is defined) then
	g_param_Platform_Determination_Type :=  @&apos;Platform Determination Type&apos;;
else
	g_param_Platform_Determination_Type := &apos;OLD_VERSION_PRE_2017&apos;;
end if;

if ( @&apos;ServerOS&apos; is defined) then
	gsys_ServerOS :=  @&apos;ServerOS&apos;;
	//__ONLY for testing -- gsys_ServerOS :=  gsys_ServerOS . &quot;__TEST_Error_CASE&quot;;
	if(&apos;Windows64&apos; != gsys_ServerOS) and (&apos;Linux64&apos; != gsys_ServerOS) then
		gsys_ServerOS_before_Force := gsys_ServerOS;
		gsys_ServerOS := &apos;Windows64&apos;; //__Something went wrong; try to recover -- FORCE windows
		local_FLAG_ERROR_But_Continue_systemGlob_ServerOS := &quot;Warning: Property &lt;@ServeOS&gt; has value &lt;&quot; . %&apos;gsys_ServerOS_before_Force&apos; . &quot;&gt; -- not expected. FORCE windows.&quot;;
	end if;
else
	gsys_ServerOS := &apos;OLD_VERSION_PRE_2017__unknown_global_ServerOS&apos;;
end if;


local_macro_Parameter := globalproperty(&apos;Macro&apos;);
local_macro_Exists := ( 0 &lt; StringLen(trim( local_macro_Parameter)) );
#tempNames := globalproperty(&apos;Output Image Filenames&apos;);


resize(local_tempNames_array,0); 
local_tempNames_array := #tempNames;
local_tempNames_count := numvalues(#tempNames);

local_ArgsInitial := @ImageJViewerArgs;
if ( (&apos;&apos; not eq %local_macro_Parameter) and (&apos;&apos; not eq #tempNames) ) then
	for #i in 1 .. numvalues(#tempNames) loop
		#inputArgTempFiles := #directoryFullPathForFiles . &apos;/&apos; . #tempNames[#i];
		if (@ImageJViewerArgs not eq &apos;&apos;) then
			@ImageJViewerArgs := @ImageJViewerArgs . &apos;,&apos; . #inputArgTempFiles;
		else 
			//__The first one to add -- don&apos;t add a &apos;,&apos; (comma) yet
			@ImageJViewerArgs := #inputArgTempFiles;
		end if;
	end loop;
end if;
//__NOTE: [@ImageJViewerArgs] is a &apos;,&apos; (comma) separated file-list of Args
//__  This list will later be surrounded with quotes (&quot;) to deal with &apos; &apos; (spaces), etc.

local_ArgsFinal := @ImageJViewerArgs;
expand(&apos;,&apos;, local_ArgsFinal);
resize(local_ArgsFinal__FilesExist_MacroMode_Flag_array, 0); //__Test for fileexists() below
local_ArgsFinal__FilesExist_MacroMode_AsString := &apos;&apos;;

//__Solely for debugging issues that might occur for customer -- does not affect behavior
for #i in 1 .. numvalues(local_ArgsFinal)  loop
	#exists := fileexists(local_ArgsFinal[#i]) ;
	append(local_ArgsFinal__FilesExist_MacroMode_Flag_array, #exists);
	
	if(1 &lt; #i) then
		local_ArgsFinal__FilesExist_MacroMode_AsString := local_ArgsFinal__FilesExist_MacroMode_AsString . &quot;, &quot; . string(#exists) ;
	else
		local_ArgsFinal__FilesExist_MacroMode_AsString := string(#exists);
	end if;
end loop;

if ( 1 &lt;= g_param_Enable_Debug_Checks_and_Messages)  then
	DebugMessage(&quot;## Running protocol with &apos;Debugging&apos;  [Shift-F5].  Generate Traces.&quot;);
	DebugMessage(&quot;##&quot;);
	DebugMessage(&quot;## &apos;Macro&apos; Parameter = &lt;&quot; . local_macro_Parameter . &quot;&gt;&quot;);
	DebugMessage(&quot;## inputArgTempFiles_array =  &lt;&quot; . @ImageJViewerArgs . &quot;&gt;&quot;); //__use real-one used in command-line
	DebugMessage(&quot;## inputArgTempFiles_FileExists =  &lt;&quot; . local_ArgsFinal__FilesExist_MacroMode_AsString . &quot;&gt;&quot;);
end if;
</sci:value>
																			</sci:arg>
																			<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnServer or OnClient - ImageJ" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																				<sci:metaproplist>
																					<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">StringType</sci:propval>
																				</sci:metaproplist>
																				<sci:help>OnServer or OnClient - ImageJ</sci:help>
																				<sci:value>OnServer or OnClient - ImageJ</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Version of expression parser to use.</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>ImageJ Args OnClient (worker )</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>EXPRESSIONNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Applies a PilotScript expression to each data record</sci:value>
																				<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.35</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:version iVal="1"/>
																</sci:protocol>
															</sci:data>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Filter (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>The PilotScript expression used to filter the data.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>globalproperty(&apos;Macro&apos;) not eq &apos;&apos;
</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:value>ComponentReturnsPass</sci:value>
																		<sci:value>ComponentReturnsFail</sci:value>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval>ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Check IF &quot;Run&quot;  Macro (ImageJ)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>FILTERNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Filter (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>666 -470</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Passes data records for which a PilotScript expression evaluates to True</sci:value>
																		<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>7</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:proplist>
																	<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																</sci:proplist>
															</sci:data>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Manipulator (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>haltprotocol();</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Custom Error Message</sci:help>
																	</sci:arg>
																	<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
																		<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>EXPRESSIONNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>2082 -470</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																		<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.0.0.35</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>22</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.RunProgram.1">
																<sci:component name="Run Program (on Server)" version="2">
																	<sci:arg name="CommandLine" type="LinkDataPropertyType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
																		<sci:metaproplist>
																			<sci:propval name="SCI_InitializeUsingRevertInfo" ishidden="true" base64="UI1">Al1HAAFHQ29tbWFuZCBsaW5lIGZvciBhcHBsaWNhdGlvbiBvciBmaWxlIHRvIGV4ZWN1dGUgb24gdGhlIHNlcnZlciBtYWNoaW5lLiRUZXh0VHlwZQAMAAAAAQEAAAEcVGhpcyBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQuBAD8AAAAAAAAAAAAMENvbW1hbmRMaW5lA8xTz7sEAA==</sci:propval>
																			<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">TextType</sci:propval>
																			<sci:propval name="SCI_EvalOnInit" ishidden="true" boolVal="true"/>
																			<sci:propval name="SCI_EvalOnInitType" ishidden="true">TextType</sci:propval>
																		</sci:metaproplist>
																		<sci:help>Command line for application or file to execute on the server machine.</sci:help>
																		<sci:value>local_ImageJ_command_line</sci:value>
																	</sci:arg>
																	<sci:arg name="Result Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:help>Parameters for assigning results to properties.</sci:help>
																		<sci:member>PropertyForExitStatus</sci:member>
																		<sci:member>StderrProperty</sci:member>
																		<sci:member>StdoutProperty</sci:member>
																		<sci:member>StdinProperty</sci:member>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="StdinProperty" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>Defines the property name that holds the desired value of the program&apos;s standard input (stdin). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="StdoutProperty" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>Defines the property name that will hold the program&apos;s standard output (stdout). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
																		<sci:value>StdOutput</sci:value>
																	</sci:arg>
																	<sci:arg name="StderrProperty" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>Defines the property name that will hold the program&apos;s standard error (stderr). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
																		<sci:value>StdError</sci:value>
																	</sci:arg>
																	<sci:arg name="PropertyForExitStatus" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>Defines the property name to hold the value of the program exit status code. Denote a global property with a leading @ character.
Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
																		<sci:value>StdExit_Status_RC</sci:value>
																	</sci:arg>
																	<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:help>Contains less commonly used parameters</sci:help>
																		<sci:member>UseCommandInterpreter</sci:member>
																		<sci:member>Environment</sci:member>
																		<sci:member>WaitForExit</sci:member>
																		<sci:member>Evaluate Parameters for Each Record</sci:member>
																	</sci:arg>
																	<sci:arg name="WaitForExit" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:help>Whether or not to wait for the program to finish before returning from the process call.  This parameter must be set to True for StdinProperty, StdoutProperty, StderrProperty, or PropertyForExitStatus to function.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Environment" type="TextType" required="false" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &lt;br&gt;&lt;samp&gt;variable=name&lt;/samp&gt;&lt;p/&gt;
The spawned process will inherit the existing environment of the protocol job process, and any settings here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. to prepend, use something like&lt;br/&gt; &lt;samp&gt;PATH=c:\mydir;%PATH%&lt;/samp&gt;&lt;p/&gt;
Note that this syntax should be used with both Windows and Linux servers.  Due to OS designs, environment variables are case insensitive on Windows servers and case sensitive on Linux servers.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="UseCommandInterpreter" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:help>Whether or not to add &quot;cmd.exe /c&quot; (or &quot;/bin/sh -c&quot; on Linux servers) to the command line.  This causes the command line to be interpreted through the operating systems standard command shell allowing the use of redirection specifiers such as &apos;&amp;gt;&apos; and &apos;&amp;lt;&apos; and piping via &apos;|&apos;.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Evaluate Parameters for Each Record" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;
Set this parameter to True if the component has an input port and you need to re-evaluate the values of the other parameters for each record that is passed into the component.&lt;p/&gt;
This allows you to set a different command line for each record. You can do this by using a global property token in the command line.&lt;br/&gt;
Example (where &lt;samp&gt;dataname&lt;/samp&gt; is a global property):&lt;br/&gt;
&lt;samp&gt;/home/goober/bin/calibrate $(dataname)&lt;/samp&gt;
&lt;p&gt;
If you change the parameter type of the CommandLine parameter to be an Expression, you can define an expression that includes values of data properties on each incoming record.&lt;br/&gt;
Example (where &lt;samp&gt;dataset_id&lt;/samp&gt; and &lt;samp&gt;limit&lt;/samp&gt; are data record properties):&lt;br/&gt;
&lt;samp&gt;&apos;/home/goober/bin/calibrate &apos;.dataset_id.&apos; -max &apos;.limit&lt;/samp&gt;
&lt;/p&gt;</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Componet Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/integration</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue Apr 03 17:17:22 2007</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{1479A29D-F184-4979-BF60-2AA823D48831}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Run Program (on Server)</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Run Program</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>2370 -470</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>COMPONENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Runs a command line application on the server machine.</sci:value>
																		<sci:value>&lt;p&gt;Define the command line by entering text as you would in a command prompt window.  On Windows servers, the component includes facilities for looking up a program name in the Windows registry. It can interpret a program name as a ProgID, such as &quot;InternetExplorer.Application&quot;, or as a shell command, such as &quot;IsisServer&quot;, or as a document to load into an associated program, such as &quot;c:\spreadsheet.xls&quot;.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;CommandLine&lt;/i&gt;: The command that the component will run. The correct syntax is the full command line exactly as you would type it in a shell command window. On Windows servers, the first space- or quote-delimited item of the command line can be a ProgId, such as &quot;InternetExplorer.Application&quot;.  This starts up Internet Explorer (IE) without having to specify the path to IE explicitly. Shell command associations are also supported, so &quot;IsisServer&quot; will start Isis Draw. Finally, there is support for file associations, so the path &quot;D:\docs\notes.doc&quot; will start Microsoft Word and load the specified document.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;WaitForExit&lt;/i&gt;: When TRUE, the data pipeline is blocked until the command has completed.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;PropertyForExitStatus&lt;/i&gt;: Allows you to assign the exit status of the command to a global property or to a data record property. Use either a global or local property reference, such as @status or status.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;UseCommandInterpreter&lt;/i&gt;: When True, parses the command line through the command interpreter on the remote server (with a shell such as csh or bash on Linux servers or the interpreter cmd.exe on Windows servers). In particular, this needs to be set to True if the CommandLine utilizes standard output or input (such as cmd.exe /c &amp;quot;c:\Program Files\R\rterm.exe&amp;quot; &amp;quot;0&amp;lt;$(CommandFile)&amp;quot;).&lt;/p&gt;
&lt;p&gt;&lt;i&gt;StdinProperty, StdoutProperty, and StderrProperty&lt;/i&gt;: Allows you to redirect standard communications to global properties or to data record properties. Use either a global or local property reference, such as @stdin or stdin.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Environment&lt;/i&gt;: Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the PipelinePilot process, and any settings defined here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;).  Due to differences in the operating systems, these variables are case insensitive on Windows servers, but case sensitive on Linux servers.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt; If your command line includes a file path, create a new parameter for the component, of type URL, so the user can enter the path. Then use a token replacement in the CommandLine to pick up the value. For example: Notepad.exe &quot;$(SciTegicRoot)\$(Path)&quot;. &lt;/li&gt;
&lt;li&gt;When the component is separated from any other pipeline, the command line is run just once.&lt;/li&gt; 
&lt;li&gt;You can add an input or output pass port to the component, to integrate it with a pipeline. If there is an output port, but no input port, the command is run once and a single new record is generated. If there is an input port, then the command is run once for each data record passed in.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/integration_command_line.pdf&apos;)&quot;&gt;
Command-line Integration Guide&lt;/a&gt;&lt;/p&gt;
</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic Data</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>%VERSION 3%</sci:value>
																		<sci:value>2282 -745 672 264</sci:value>
																		<sci:value>255 255 0</sci:value>
																		<sci:value>NEW style -- LINUX

NEEDs
UseCommandInterpreter == TRUE</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>6.1.0.14</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>21</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Database and Application Integration\Application Integration\Command Line\Run Program (on Server)</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Manipulator (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>&quot;Error: The component &quot;ImageJ (on Server)&quot; requires the &quot;Macro&quot; parameter to be set.&quot;</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval>ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Custom Error Message</sci:help>
																	</sci:arg>
																	<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Error: No Macro</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
																		<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>EXPRESSIONNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>930 -820</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																		<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.0.0.35</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>8</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.PropertyFunctions.1">
																<sci:component name="Dont Pass Data" version="2">
																	<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																		<sci:legalval selected="true">LeaveData</sci:legalval>
																		<sci:legalval>ClearData</sci:legalval>
																		<sci:legalval>DeleteData</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval>ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>CustomErrorText</sci:help>
																	</sci:arg>
																	<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the action to perform</sci:help>
																		<sci:value>PassDataToPort</sci:value>
																	</sci:arg>
																	<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the port to pass data to</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>COMPONENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Wed Sep 20 08:16:06 2006</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Eat record ; we never did anything here
Don&apos;t Pass Data</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Evaluate Expression</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{F70D3185-8B78-4211-AF3E-D5427C306F87}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>378 -845</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Prevents records exiting an internal component from being passed out of a subprotocol</sci:value>
																		<sci:value>&lt;p&gt;This component is useful inside subprotocols to keep data from being passed out. It is an alternative to disabling components.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/comps/disable_comps.htm&apos;)&quot;&gt;Disabling Components&lt;/a&gt;&lt;/p&gt;
</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>6.0.1.0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>5</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Dont Pass Data</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:connectid from="19" to="20" type="true"/>
															<sci:connectid from="20" to="15" type="true"/>
															<sci:connectid from="15" to="25" type="true"/>
															<sci:connectid from="25" to="17" type="true"/>
															<sci:connectid from="9" to="10" type="true"/>
															<sci:connectid from="9" to="10" type="false"/>
															<sci:connectid from="10" to="24" type="true"/>
															<sci:connectid from="24" to="18" type="true"/>
															<sci:connectid from="18" to="19" type="true"/>
															<sci:connectid from="18" to="22" type="false"/>
															<sci:connectid from="0" to="6" type="true"/>
															<sci:connectid from="0" to="5" type="false"/>
															<sci:connectid from="6" to="7" type="true"/>
															<sci:connectid from="7" to="9" type="true"/>
															<sci:connectid from="7" to="8" type="false"/>
															<sci:connectid from="22" to="21" type="true"/>
															<sci:connectid from="21" to="15" type="true"/>
														</sci:protocol>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>serverFilePath := @TempDir;

#tempTags := globalproperty(&apos;Output Image Tags&apos;);
#tempNames := globalproperty(&apos;Output Image Filenames&apos;);

@SvrTempFiles := &apos;&apos;;

if ((numvalues(#tempTags) &gt; 0) and (numvalues(#tempTags) eq numvalues(#tempNames))) then
	for #i in 1 .. numvalues(#tempNames) loop
		#serverTempFile := serverFilePath.&apos;/&apos;.#tempNames[#i];
		if (@SvrTempFiles not eq &apos;&apos;) then
			@SvrTempFiles := @SvrTempFiles.&apos;,&apos;.#serverTempFile;
		else
			@SvrTempFiles := #serverTempFile;
		end if;
	end loop;
end if;</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Generate Files Pathname </sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -1545</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>10</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>$(ImageJ Output Property Name) := @StdOutput;</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>/*Assign ImageJ output to prop</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>954 -1895</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>17</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.AttachChildren.1">
														<sci:component name="Attach Children" version="2">
															<sci:arg name="Attachment Location" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>The deep node specification of the point in the parent data record to attach the child data records.
If left blank, the child nodes are attached to the root node of the parent record.</sci:help>
															</sci:arg>
															<sci:arg name="Child Node Location" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>If specified, this parameter specifies the location of nodes that are to
be extracted from the child data records and attached to the parent
record.

If no nodes match this location for a specific record, then no child nodes are attached from that record.

If the parameter value is left empty, then the whole data record is attached,
using the root node of the child record as the node location.</sci:help>
																<sci:value>/SciTegic.data.GroupNode/*</sci:value>
															</sci:arg>
															<sci:arg name="If Attachment Location Missing" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>What to do if the specified attachment location is missing:

&lt;b&gt;Throw Error&lt;/b&gt;:  Throws a general error.

&lt;b&gt;Attach to Root Node&lt;/b&gt;:  Attaches child data under the root node.</sci:help>
																<sci:legalval selected="true">Throw Error</sci:legalval>
																<sci:legalval>Attach to Root Node</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Allow Missing Child Data" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>When set, this parameter allows input child node pipes to be &apos;skipped&apos;.  For example, data from the third input pipe is allowed even if there was no data from the second input pipe.

</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Dec 13 12:38:32 2002</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Attach Children</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>JOINNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0C71D911-BF35-4A1B-8B2C-1874530D1A83}</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Attach Children</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -2070</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Attach the contents of one or more secondary data records to a primary record.</sci:value>
																<sci:value>This component is used to construct or add to a hierachical data record structure.

The data record input on the top pipe is considerd the primary, parent record. Data input on the lower pipes must be received in order of input. The contents each such record is added as a child node to the parent data record.

When a new primary record is input on the top pipe, any stored primary record is output and the sequence begins again.</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>14</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Data Tree Manipulators\Deprecated\Attach Children</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>@StdOutput not eq &apos;&apos; and @&apos;ImageJ Output Property Name&apos; not eq &apos;&apos;</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>@StdOutput not eq &apos;&apos; and @&apos;Ima</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FILTERNODE</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -2070</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>18</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
														<sci:proplist>
															<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
														</sci:proplist>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>954 -2245</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>19</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Subprotocol" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:value>25</sci:value>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Load Modified Images</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DOCUMENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -2620</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.48</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>15</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol>
															<sci:data object="SciTegic.Imaging.ImageRead_Component.1">
																<sci:component name="Image Reader" version="2">
																	<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
																		<sci:help>Filename</sci:help>
																		<sci:member>Maximum</sci:member>
																		<sci:member>SourceTag</sci:member>
																		<sci:value>$(SvrTempFiles)</sci:value>
																	</sci:arg>
																	<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>Maximum number of image files to read.</sci:help>
																	</sci:arg>
																	<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
																		<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...</sci:help>
																		<sci:legalval selected="true">None</sci:legalval>
																		<sci:legalval>Filename</sci:legalval>
																		<sci:legalval>FilenameAndExtension</sci:legalval>
																		<sci:legalval>FullFilename</sci:legalval>
																		<sci:legalval>Number</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Output Image Tag" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>String value to place in &lt;i&gt;ImageTag&lt;/i&gt; property of images read by this component. Value is also appended to &lt;i&gt;ImageHistory&lt;/i&gt; property.
&lt;p&gt;
All image types are supported.</sci:help>
																	</sci:arg>
																	<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:help>Contains less commonly used parameters</sci:help>
																		<sci:member>Byte Order</sci:member>
																		<sci:member>Output Sequence As Stack</sci:member>
																		<sci:member>Tiff Header Options</sci:member>
																		<sci:member>Read Image As Raw</sci:member>
																	</sci:arg>
																	<sci:arg name="Byte Order" type="StringType" required="true" visibility="visible" multi="false">
																		<sci:help>For TIFF files, specifies the byte order. If Automatic is chosen, the reader gets the byte order from the file header.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Implementation to &quot;IPP&quot;&apos;);
parameter(&apos;Implementation&apos;) eq &apos;IPP&apos;</sci:enabledscript>
																		<sci:legalval selected="true">Automatic</sci:legalval>
																		<sci:legalval>Big endian</sci:legalval>
																		<sci:legalval>Little endian</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Output Sequence As Stack" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:help>If set to true, an image file containing a sequence of images will be read into one image stack. If set to false, each image in the sequence will be added separately to the record.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Tiff Header Options" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;Specifies whether to parse the header for TIF files or not. This parameter is enabled only for ITK implementation.&lt;/p&gt; 

&lt;p&gt;&lt;br&gt;&lt;ul&gt;
&lt;li&gt;Parse Header.
&lt;br&gt;Parses the header and adds corresponding properties to the &lt;i&gt;SciTegic.Image.Metadata&lt;/i&gt; node, a child node of the image node. &lt;/br&gt;
&lt;/li&gt;

&lt;li&gt;Do Not Parse Header.
&lt;br&gt;Reads only images. Metadata node is not added.&lt;/br&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
																		<sci:member>Array Values</sci:member>
																		<sci:enabledscript>SetDisabledDetails( &apos;To enable &apos;.ParameterName().&apos;, set implementation to &quot;ITK&quot;.&apos;);
#fileNames := tolower(parameter(&apos;Source&apos;));
parameter(&apos;Implementation&apos;) eq &apos;ITK&apos; /*and 
(findsubstring(#fileNames, &apos;.tif&apos;) &gt; 0 or findsubstring(#fileNames, &apos;.tiff&apos;) &gt; 0)
*/</sci:enabledscript>
																		<sci:legalval selected="true">Parse Header</sci:legalval>
																		<sci:legalval>Do Not Parse Header</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Array Values" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;Sometimes the array values in the metadata contain too many elements. This option specifies whether to read the entire array or just a few elements. &lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;ul&gt;
&lt;li&gt;Read All Array Elements.
&lt;br&gt;Reads all elements in the array and adds them to the corresponding property in the metadata. &lt;/br&gt;
&lt;/li&gt;

&lt;li&gt;Read Partial Array.
&lt;br&gt;If the array has more elements than the value specified in &lt;i&gt;Maximum Array Elements To Read&lt;/i&gt; parameter, only the maximum number of elements specified are added to the corresponding property in the metadata. It also appends the total number of elements in the array to the property value. If the array size is less than the maximum value specified, the entire array is added to the metadata node. 
&lt;/br&gt;&lt;/li&gt;&lt;/ul&gt; &lt;/p&gt;</sci:help>
																		<sci:member>Maximum Array Elements to Read</sci:member>
																		<sci:enabledscript>parameter(&apos;Tiff Header Options&apos;) ne &apos;Do Not Parse Header&apos;</sci:enabledscript>
																		<sci:legalval>Read All Array Elements</sci:legalval>
																		<sci:legalval selected="true">Read Partial Array</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Maximum Array Elements to Read" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;Maximum elements to read in an array. &lt;/p&gt;</sci:help>
																		<sci:validscript>parameter() &gt;= 1</sci:validscript>
																		<sci:enabledscript>parameter(&apos;Array Values&apos;) eq &apos;Read partial array&apos;</sci:enabledscript>
																		<sci:value>10</sci:value>
																	</sci:arg>
																	<sci:arg name="Read Image As Raw" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:help>If set to &lt;i&gt;true&lt;/i&gt;, the image will be read as a raw file.</sci:help>
																		<sci:member>Image Width</sci:member>
																		<sci:member>Image Height</sci:member>
																		<sci:member>Pixel Type</sci:member>
																		<sci:member>Header Size</sci:member>
																		<sci:member>Image Depth</sci:member>
																		<sci:enabledscript>SetDisabledDetails( &apos;To enable &apos;.ParameterName().&apos;, set implementation to &quot;IPP&quot;.&apos;);
parameter(&apos;Implementation&apos;) eq &apos;IPP&apos;</sci:enabledscript>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Header Size" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>Header size in bytes. This many bytes will be skipped before the raw pixel data is read.</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Image Width" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>Width of the image in pixels.</sci:help>
																	</sci:arg>
																	<sci:arg name="Image Height" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>Height of the image in pixels.</sci:help>
																	</sci:arg>
																	<sci:arg name="Image Depth" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>Number of slices if we are reading a sequence (stack).</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="Pixel Type" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>Pixel type.</sci:help>
																		<sci:legalval selected="true">unsigned char</sci:legalval>
																		<sci:legalval>unsigned short</sci:legalval>
																		<sci:legalval>short</sci:legalval>
																		<sci:legalval>int </sci:legalval>
																		<sci:legalval>float</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Implementation" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:legalval selected="true">IPP</sci:legalval>
																		<sci:legalval>ITK</sci:legalval>
																	</sci:arg>
																	<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																		<sci:legalval selected="true">LeaveData</sci:legalval>
																		<sci:legalval>ClearData</sci:legalval>
																		<sci:legalval>DeleteData</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval>ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the action to perform</sci:help>
																		<sci:value>PassDataToPort</sci:value>
																	</sci:arg>
																	<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the port to pass data to</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>DOCUMENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/imaging</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Thu Apr 16 16:46:54 2009</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Image Reader</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Evaluate Expression</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{2562F8B6-1F36-4081-A01B-227ED127144F}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>90 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Reads data from image files creating one data record for each file</sci:value>
																		<sci:value>&lt;p&gt;The file or files are specified by &lt;i&gt;Source&lt;/i&gt;. Images of types bmp, jpg, png, tif and raw are supported.&lt;/p&gt;

&lt;p&gt;For image files that contain a single image, the data record will contain a group node with one child image node. For image files that contain an image sequence, the data record will contain one group node with one child image node for each image in the sequence if the parameter &lt;i&gt;Output Sequence as Stack&lt;/i&gt; is set to false. Otherwise, the data record will contain one image stack.&lt;/p&gt;
&lt;p&gt;
All image types are supported.&lt;/p&gt;

&lt;B&gt;See Also:&lt;/B&gt;
&lt;ul&gt;
&lt;li&gt;If the file path is stored in a property, use &lt;a href=&quot;javascript:DoLink(&apos;{550671D1-C886-4a9d-ADD7-14297D0C59D9}&apos;)&quot;&gt;Image Record Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To group images as they are read in, use &lt;a href=&quot;javascript:DoLink(&apos;{0FEEA520-902C-4C8F-8458-40C6E5A7B04C}&apos;)&quot;&gt;Grouped Image Reader&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;

</sci:value>
																		<sci:value>None</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Output image group.</sci:value>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.5.2.300</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Imaging\Readers\Image Reader</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.UngroupData.1">
																<sci:component name="Ungroup Data" version="2">
																	<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:help>Contains less commonly used parameters</sci:help>
																		<sci:member>GroupName</sci:member>
																	</sci:arg>
																	<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>(Optional) Restricts the ungroup process to only those groups having the given name -- the same name as specified by the &quot;Group Data&quot; component</sci:help>
																		<sci:value>Data</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Thu Jan 19 10:40:59 2006</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Ungroup Data</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>GENERATORNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Ungroup Data</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{57833F08-BD53-42AE-A14C-87EED61B8FBD}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>378 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Separates data records previously grouped together into the original records</sci:value>
																		<sci:value>&lt;p&gt;The input record is assumed to be a grouped data record.  The individual records are extracted from the group and sent out the Pass port.  The incoming data record is discarded.&lt;/p&gt;

&lt;p&gt;You would typically use Ungroup Data as the first component inside a &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocol that expects grouped data.  This executes the remainder of the subprotocol over the individual data records in the group.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;It is possible to have a group which in turn has another group as one of its members (nested groups). In this case, ungrouping will separate only the top level groups. Multiple Ungroup Data components operating in series are needed to separate nested groups.&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To group data records together use &lt;a href=&quot;javascript:DoLink(&apos;{3FDE8197-D86F-4EB0-99FF-82D6430AF466}&apos;)&quot;&gt;Group Data by Tag&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}&apos;)&quot;&gt;Group Data by Number&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To view the structure of grouped data records use &lt;a href=&quot;javascript:DoLink(&apos;{AA4369ED-A1A1-4949-8520-39B23096ACFD}&apos;)&quot;&gt;Data Record Tree Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To learn more about &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocols, see the parameter help on &lt;a href=&quot;javascript:DoLink(&apos;{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}&apos;)&quot;&gt;Subprotocol&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
																		<sci:value>Generic Data</sci:value>
																		<sci:value>Data records with a hierarchical group of other data records</sci:value>
																		<sci:value>Generic Data</sci:value>
																		<sci:value>The individual data records that were contained within a hierarchical group of the incoming data</sci:value>
																		<sci:value>Generic Data</sci:value>
																		<sci:value>Data records on which the GroupName property is missing</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>6.0.0.6</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Data Manipulators\Ungroup Data</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.CountRecords.1">
																<sci:component name="Count and Index Data" version="2">
																	<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																		<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
																		<sci:member>Start Index</sci:member>
																		<sci:member>Check if Property Already in Use</sci:member>
																		<sci:value>ImageIndex</sci:value>
																	</sci:arg>
																	<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
																		<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
																		<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Count and Index Data</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>COMPONENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Count and Index Data</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>666 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Counts the number of data records and puts the count in a property</sci:value>
																		<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>6.0.0.44</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Manipulator (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>#temp := globalproperty(&apos;Output Image Tags&apos;);
ImageTag := #temp[ImageIndex];
ImageHistory := #temp[ImageIndex];</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:value>ComponentReturnsPass</sci:value>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval>ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Initialize</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>EXPRESSIONNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>954 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																		<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.0.0.35</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>3</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.PropertyFunctions.1">
																<sci:component name="Remove Properties" version="2">
																	<sci:arg name="PropertyList" type="TextType" required="true" visibility="visible" multi="false">
																		<sci:help>The names of properties to remove from each data record entering the component</sci:help>
																		<sci:value>ImageIndex</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the action to perform</sci:help>
																		<sci:value>Remove</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 07 13:23:27 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Remove Properties</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>true</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>EXPRESSIONNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>SubProtocol</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>1242 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Removes the specified properties</sci:value>
																		<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Data records with the specified properties removed</sci:value>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.0.0.31</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>4</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.GroupData.1">
																<sci:component name="Group Data by Number" version="2">
																	<sci:arg name="NumDataToGroup" type="LongType" required="true" visibility="visible" multi="false">
																		<sci:help>Number of separate incoming data records to group together onto a single record</sci:help>
																		<sci:value>10</sci:value>
																	</sci:arg>
																	<sci:arg name="GroupName" type="StringType" required="false" visibility="hidden" multi="false">
																		<sci:help>If given, a new property called &quot;GroupName&quot; is created with this value. It can aid in unpacking only selected groups by name.
</sci:help>
																		<sci:value>data</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Comment</sci:help>
																		<sci:value>Groups a fixed number of data records together onto a single property list.</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/core</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Fri Jul 22 10:59:25 2005</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Group Data by Number</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Usage</sci:help>
																		<sci:value>Data records are grouped together for collective treatment downstream.  Each incoming data record becomes a single item on the newly generated property list being output.  *Note that the Ungroup_Data component can be used to unpack these lists with no loss of any data.

Input             - Data records
Output Pass  - Property list records containing the grouped data</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Group Data</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>JoinNode</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>1530 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Groups a specified number of data records together into a single record.</sci:value>
																		<sci:value>Data records are grouped together for collective treatment downstream. Each N incoming data records are output as a single data record.  

Use this component to provide input to a subprotocol for which &lt;i&gt;Run To Completion&lt;/i&gt; has been set to True. By using the &lt;i&gt;Ungroup Data&lt;/i&gt; component as the first element of the subprotocol, subsequent actions of the subrotocol will act on each group one at a time.&lt;p&gt;
&lt;a href=&quot;javascript:DoLink(&apos;{57833F08-BD53-42AE-A14C-87EED61B8FBD}&apos;)&quot;&gt;See Also:&lt;/a&gt;The &lt;i&gt;Ungroup Data&lt;/i&gt; component can be used to unpack these lists without loss of data.&lt;/p&gt;</sci:value>
																		<sci:value>Generic Data</sci:value>
																		<sci:value/>
																		<sci:value>Generic Data</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>5.0.0.113</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>5</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Data Manipulators\Group Data by Number</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.Imaging.ImageRead_Component.1">
																<sci:component name="Image Reader" version="2">
																	<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
																		<sci:help>Filename</sci:help>
																		<sci:member>Maximum</sci:member>
																		<sci:member>SourceTag</sci:member>
																		<sci:value>$(SvrTempFiles)</sci:value>
																	</sci:arg>
																	<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>Maximum number of image files to read.</sci:help>
																	</sci:arg>
																	<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
																		<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...</sci:help>
																		<sci:legalval selected="true">None</sci:legalval>
																		<sci:legalval>Filename</sci:legalval>
																		<sci:legalval>FilenameAndExtension</sci:legalval>
																		<sci:legalval>FullFilename</sci:legalval>
																		<sci:legalval>Number</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Output Image Tag" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>String value to place in &lt;i&gt;ImageTag&lt;/i&gt; property of images read by this component. 
&lt;p&gt;
All image types are supported.</sci:help>
																	</sci:arg>
																	<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																		<sci:help>Contains less commonly used parameters</sci:help>
																		<sci:member>Tiff Header Options</sci:member>
																		<sci:member>Read Image As Raw</sci:member>
																		<sci:member>Image Stack Options</sci:member>
																	</sci:arg>
																	<sci:arg name="Image Stack Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
																		<sci:help>Options specifying how to read 3D stacks.</sci:help>
																		<sci:member>Read as One Image Stack</sci:member>
																		<sci:member>Sub-stacks</sci:member>
																	</sci:arg>
																	<sci:arg name="Read as One Image Stack" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
																		<sci:help>If set to true, an image file containing a sequence of images will be read into one image stack. If set to false, each image in the sequence will be added separately to the record.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Sub-stacks" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>Parameters specifying how the substacks should be created.</sci:help>
																		<sci:member>Depth</sci:member>
																		<sci:member>Start Slice</sci:member>
																		<sci:member>Spacing</sci:member>
																		<sci:member>How Many to Read</sci:member>
																		<sci:enabledscript>parameter(&apos;Read Image As Raw&apos;) eq &apos;True&apos; and parameter(&apos;Read as One Image Stack&apos;) eq &apos;False&apos;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Depth" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>How many slices should be read into one sub-stack</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="Start Slice" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>Start reading at the slice specified by the value of this parameter.</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Spacing" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>If the image stack is read &lt;i&gt;n&lt;/i&gt; slices at a time, value of this parameter will determine spacing, i.e. how many slices to skip to the next sub-stack. If this parameter is negative, the sub-stacks will overlap.&lt;i&gt;n&lt;/i&gt; is the value of the parameter &lt;i&gt;Number of Slices per Read Image&lt;/i&gt;.</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="How Many to Read" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>How many sub-stacks should be read.</sci:help>
																		<sci:member>Number of Sub-Stacks to Read</sci:member>
																		<sci:legalval selected="true">One</sci:legalval>
																		<sci:legalval>All</sci:legalval>
																		<sci:legalval>Specified by User</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Number of Sub-Stacks to Read" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>Specify how many sub-stacks should be read.</sci:help>
																		<sci:enabledscript>Parameter(&apos;How Many to Read&apos;) eq &apos;Specified by User&apos;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Tiff Header Options" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;Specifies whether to parse the header for TIF files or not. &lt;/p&gt; 

&lt;p&gt;&lt;br&gt;&lt;ul&gt;
&lt;li&gt;Parse Header.
&lt;br&gt;Parses the header and adds corresponding properties to the &lt;i&gt;SciTegic.Image.Metadata&lt;/i&gt; node, a child node of the image node. &lt;/br&gt;
&lt;/li&gt;

&lt;li&gt;Do Not Parse Header.
&lt;br&gt;Reads only images. Metadata node is not added.&lt;/br&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
																		<sci:member>Array Values</sci:member>
																		<sci:legalval>Parse Header</sci:legalval>
																		<sci:legalval selected="true">Do Not Parse Header</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Array Values" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;Sometimes the array values in the metadata contain too many elements. This option specifies whether to read the entire array or just a few elements. This parameter is enabled only for ITK implementation. &lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;ul&gt;
&lt;li&gt;Read All Array Elements.
&lt;br&gt;Reads all elements in the array and adds them to the corresponding property in the metadata. &lt;/br&gt;
&lt;/li&gt;

&lt;li&gt;Read Partial Array.
&lt;br&gt;If the array has more elements than the value specified in &lt;i&gt;Maximum Array Elements To Read&lt;/i&gt; parameter, only the maximum number of elements specified are added to the corresponding property in the metadata. It also appends the total number of elements in the array to the property value. If the array size is less than the maximum value specified, the entire array is added to the metadata node. 
&lt;/br&gt;&lt;/li&gt;&lt;/ul&gt; &lt;/p&gt;</sci:help>
																		<sci:member>Maximum Array Elements to Read</sci:member>
																		<sci:enabledscript>SetDisabledDetails( &apos;To enable &apos;.ParameterName().&apos;, set implementation to &quot;ITK&quot; and Tiff Header Optiont to &quot;Parse Header&quot;.&apos;);
#fileNames := tolower(parameter(&apos;Source&apos;));
parameter(&apos;Tiff Header Options&apos;) ne &apos;Do Not Parse Header&apos; and parameter(&apos;Implementation&apos;) eq &apos;ITK&apos;</sci:enabledscript>
																		<sci:legalval>Read All Array Elements</sci:legalval>
																		<sci:legalval selected="true">Read Partial Array</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Maximum Array Elements to Read" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;Maximum elements to read in an array. &lt;/p&gt;</sci:help>
																		<sci:validscript>parameter() &gt;= 1</sci:validscript>
																		<sci:enabledscript>parameter(&apos;Array Values&apos;) eq &apos;Read partial array&apos;</sci:enabledscript>
																		<sci:value>10</sci:value>
																	</sci:arg>
																	<sci:arg name="Read Image As Raw" type="BoolType" required="false" visibility="visible" multi="false">
																		<sci:help>If set to &lt;i&gt;true&lt;/i&gt;, the image will be read as a raw file.</sci:help>
																		<sci:member>Image Width</sci:member>
																		<sci:member>Image Height</sci:member>
																		<sci:member>Pixel Type</sci:member>
																		<sci:member>Header Size</sci:member>
																		<sci:member>Image Depth</sci:member>
																		<sci:enabledscript>SetDisabledDetails( &apos;To enable &apos;.ParameterName().&apos;, set implementation to &quot;IPP&quot;.&apos;);
parameter(&apos;Implementation&apos;) eq &apos;IPP&apos;</sci:enabledscript>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Header Size" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>Header size in bytes. This many bytes will be skipped before the raw pixel data is read.</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Image Width" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>Width of the image in pixels.</sci:help>
																	</sci:arg>
																	<sci:arg name="Image Height" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>Height of the image in pixels.</sci:help>
																	</sci:arg>
																	<sci:arg name="Image Depth" type="LongType" required="false" visibility="visible" multi="false">
																		<sci:help>Number of slices if we are reading a sequence (stack).</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="Pixel Type" type="StringType" required="false" visibility="visible" multi="false">
																		<sci:help>Pixel type.</sci:help>
																		<sci:legalval selected="true">unsigned char</sci:legalval>
																		<sci:legalval>unsigned short</sci:legalval>
																		<sci:legalval>short</sci:legalval>
																		<sci:legalval>int </sci:legalval>
																		<sci:legalval>float</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Implementation" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:legalval selected="true">IPP</sci:legalval>
																		<sci:legalval>ITK</sci:legalval>
																	</sci:arg>
																	<sci:arg name="VersionImaging" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;strong&gt;NOTE:&lt;/strong&gt; this parameter should not be changed.</sci:help>
																		<sci:legalval selected="true">4</sci:legalval>
																	</sci:arg>
																	<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																		<sci:legalval selected="true">LeaveData</sci:legalval>
																		<sci:legalval>ClearData</sci:legalval>
																		<sci:legalval>DeleteData</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval>ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the action to perform</sci:help>
																		<sci:value>PassDataToPort</sci:value>
																	</sci:arg>
																	<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the port to pass data to</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>DOCUMENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/imaging</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Thu Aug 17 16:05:19 2017</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Image Reader</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Evaluate Expression</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{2562F8B6-1F36-4081-A01B-227ED127144F}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>90 -395</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Reads data from image files creating one data record for each file</sci:value>
																		<sci:value>&lt;p&gt;The file or files are specified by &lt;i&gt;Source&lt;/i&gt;. Images of types bmp, jpg, png, tif and raw are supported.&lt;/p&gt;

&lt;p&gt;For image files that contain a single image, the data record will contain a group node with one child image node. For image files that contain an image sequence, the data record will contain one group node with one child image node for each image in the sequence if the parameter &lt;i&gt;Output Sequence as Stack&lt;/i&gt; is set to false. Otherwise, the data record will contain one image stack.&lt;/p&gt;
&lt;p&gt;
All image types are supported.&lt;/p&gt;

&lt;B&gt;See Also:&lt;/B&gt;
&lt;ul&gt;
&lt;li&gt;If the file path is stored in a property, use &lt;a href=&quot;javascript:DoLink(&apos;{550671D1-C886-4a9d-ADD7-14297D0C59D9}&apos;)&quot;&gt;Image Record Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To group images as they are read in, use &lt;a href=&quot;javascript:DoLink(&apos;{0FEEA520-902C-4C8F-8458-40C6E5A7B04C}&apos;)&quot;&gt;Grouped Image Reader&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;

</sci:value>
																		<sci:value>None</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Output image group.</sci:value>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>18.1.0.1469</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>6</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Imaging\Readers\Image Reader</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:connectid from="0" to="1" type="true"/>
															<sci:connectid from="1" to="2" type="true"/>
															<sci:connectid from="2" to="3" type="true"/>
															<sci:connectid from="3" to="4" type="true"/>
															<sci:connectid from="4" to="5" type="true"/>
															<sci:connectid from="6" to="1" type="true"/>
														</sci:protocol>
													</sci:data>
													<sci:connectid from="0" to="5" type="true"/>
													<sci:connectid from="1" to="2" type="true"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="3" to="0" type="true"/>
													<sci:connectid from="3" to="5" type="false"/>
													<sci:connectid from="5" to="6" type="true"/>
													<sci:connectid from="6" to="4" type="true"/>
													<sci:connectid from="6" to="7" type="false"/>
													<sci:connectid from="8" to="1" type="true"/>
													<sci:connectid from="8" to="9" type="true"/>
													<sci:connectid from="8" to="10" type="true"/>
													<sci:connectid from="8" to="14" type="true"/>
													<sci:connectid from="17" to="19" type="true"/>
													<sci:connectid from="14" to="18" type="true"/>
													<sci:connectid from="18" to="17" type="true"/>
													<sci:connectid from="18" to="19" type="false"/>
													<sci:connectid from="15" to="14" type="true"/>
												</sci:protocol>
											</sci:data>
											<sci:connectid from="8" to="9" type="false"/>
											<sci:connectid from="0" to="1" type="true"/>
											<sci:connectid from="1" to="8" type="true"/>
											<sci:connectid from="1" to="11" type="true"/>
											<sci:connectid from="1" to="13" type="true"/>
											<sci:connectid from="11" to="10" type="true"/>
											<sci:connectid from="11" to="12" type="false"/>
											<sci:connectid from="14" to="3" type="true"/>
											<sci:connectid from="3" to="4" type="true"/>
											<sci:connectid from="4" to="0" type="true"/>
											<sci:connectid from="4" to="5" type="true"/>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.Imaging.ImageRecordWriter_Component.1">
										<sci:component name="Image Record Writer" version="2">
											<sci:arg name="Input Image Tag" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>The input image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Input Image Test&lt;/i&gt; is used. If both are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.
&lt;p&gt;All image types are supported. &lt;/p&gt;
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format in &apos;Image Type&apos; parameter. &lt;/p&gt;</sci:help>
												<sci:member>Input Image Test</sci:member>
												<sci:value>Proj</sci:value>
											</sci:arg>
											<sci:arg name="Input Image Test" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired input image. &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Input Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then the first image found in the &lt;i&gt;image group&lt;/i&gt; is used.</sci:help>
												<sci:enabledscript>setDisabledDetails(&quot;Input Image Tag is set.&quot;);
parameter(&apos;Input Image Tag&apos;) eq &apos;&apos;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Transparency Image Tag" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>&lt;p&gt;
If specified, this image is used to provide the transparency for the input image.
&lt;p/&gt;
The transparency image for this operation is found by matching this parameter against the value of the image&apos;s &lt;i&gt;ImageTag&lt;/i&gt; property.  &lt;br&gt;&lt;br&gt;If this parameter is empty, then the parameter &lt;i&gt;Transparency Image Test&lt;/i&gt; is used. If both parameters are empty, then full transparency is assumed over the entire input image.
&lt;/p&gt;</sci:help>
												<sci:member>Transparency Image Test</sci:member>
												<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Image Type to &quot;png&quot; or &quot;tif&quot;&apos;);
Parameter(&apos;Image Type&apos;) eq &apos;png&apos; or Parameter(&apos;Image Type&apos;) eq &apos;tif&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Transparency Image Test" type="ExpressionType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
												<sci:help>Evaluates to &lt;em&gt;true&lt;/em&gt; against the desired transparency image.  &lt;br&gt;&lt;br&gt;A non-empty &lt;i&gt;Transparency Image Tag&lt;/i&gt; parameter will have precedence over this parameter. If both parameters are empty, then full transparency is assumed over the entire input image.</sci:help>
												<sci:enabledscript>setDisabledDetails(&quot;Transparency Image Tag is set.&quot;);
parameter(&apos;Transparency Image Tag&apos;) eq &apos;&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Destination Directory" type="DirectoryType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:help>The destination directory to contain image files.</sci:help>
												<sci:value>$(Save_to_temp)</sci:value>
											</sci:arg>
											<sci:arg name="Filename" type="ExpressionType" required="true" visibility="visible" multi="false">
												<sci:help>Pilotscript expression to construct the image filenames.</sci:help>
												<sci:value>@WellName</sci:value>
											</sci:arg>
											<sci:arg name="Image Type" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:help>Standard image types and raw type. If raw type is selected, the simple byte stream is saved to a binary file.
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format.&lt;/p&gt;
&lt;p&gt;NOTE: the raw format currently supports 2-d monochrome single plane images only - raw output of color images and other multi-plane images is not supported.&lt;/p&gt;</sci:help>
												<sci:legalval>bmp</sci:legalval>
												<sci:legalval selected="true">tif</sci:legalval>
												<sci:legalval>png</sci:legalval>
												<sci:legalval>jpg</sci:legalval>
												<sci:legalval>raw</sci:legalval>
											</sci:arg>
											<sci:arg name="Compression" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>Compression method to be used. Only valid for TIF images.</sci:help>
												<sci:member>Quality</sci:member>
												<sci:enabledscript>SetDisabledDetails(	       &apos;To enable &apos;.ParameterName().&apos;, set Image Type to &quot;tif&quot;&apos;);
Parameter(&apos;Image Type&apos;) eq &apos;TIF&apos;;</sci:enabledscript>
												<sci:legalval selected="true">None</sci:legalval>
												<sci:legalval>CCITT RLE</sci:legalval>
												<sci:legalval>CCITT RLE/W</sci:legalval>
												<sci:legalval>LZW</sci:legalval>
												<sci:legalval>JPEG</sci:legalval>
												<sci:legalval>PackBits RLE</sci:legalval>
												<sci:legalval>Deflate</sci:legalval>
												<sci:legalval>SGI Log Luminance RLE</sci:legalval>
												<sci:legalval>SGI Log 24-bit packed</sci:legalval>
											</sci:arg>
											<sci:arg name="Quality" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
												<sci:help>Compression quality. Valid range for JPEG is 0-100, for Deflate is 1-9.</sci:help>
												<sci:enabledscript>parameter(&apos;Compression&apos;) eq &apos;JPEG&apos; or parameter(&apos;Compression&apos;) eq &apos;Deflate&apos;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Input Selection" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>This parameter defines which image is selected as input in cases of ambiguity.

&lt;br&gt;If both &lt;i&gt;Input Image Tag&lt;/i&gt; and &lt;i&gt;Input Image Test&lt;/i&gt; are empty, this parameter selects the input image from all the images found on the record.

&lt;br&gt;If &lt;i&gt;Input Image Test&lt;/i&gt; expression or &lt;i&gt;Input Image Tag&lt;/i&gt; match multiple images on the record, this parameter selects the input image from the set of matching images.

&lt;br&gt;&lt;i&gt;First&lt;/i&gt; and &lt;i&gt;Last&lt;/i&gt; refer to the place of the image on the record. Images are appended at the end of the record as they are created, so if the latest matching image is desired, the parameter should be set to &lt;i&gt;Last&lt;/i&gt;.</sci:help>
												<sci:legalval>First</sci:legalval>
												<sci:legalval selected="true">Last</sci:legalval>
											</sci:arg>
											<sci:arg name="Implementation" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="true">
												<sci:legalval selected="true">IPP</sci:legalval>
												<sci:legalval>ITK</sci:legalval>
											</sci:arg>
											<sci:arg name="VersionImaging" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;strong&gt;NOTE:&lt;/strong&gt; this parameter should not be changed.</sci:help>
												<sci:legalval selected="true">3</sci:legalval>
											</sci:arg>
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DOCUMENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/imaging</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Mar 24 10:39:59 2016</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Image Record Writer</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{B5BFA33F-9530-4459-AED1-4F6365EB2FAE}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -820</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>For each data record, writes one image to a file</sci:value>
												<sci:value>&lt;p&gt;The image to be written is specified by either &lt;i&gt;Input Image Tag&lt;/i&gt; or &lt;i&gt;Input Image Test&lt;/i&gt;. If no image is specified, the first image on the data record is written to the file.&lt;p&gt;

&lt;p&gt;The directory path of the output file is specified in &lt;i&gt;Destination Directory&lt;/i&gt;, the file name is specified in &lt;i&gt;Filename&lt;/i&gt;, and the file type is specified in &lt;i&gt;Image Type&lt;/i&gt;. 
&lt;/p&gt;
&lt;p&gt;All image types are supported. &lt;/p&gt;
&lt;p&gt;File formats supported: bmp, tif, png, jpeg &amp; raw. XYZ and LAB color require raw file format in &lt;i&gt;Image Type&lt;/i&gt; parameter. &lt;/p&gt;
&lt;p&gt;NOTE: the raw format currently supports 2-d monochrome single plane images only - raw output of color images and other multi-plane images is not supported.&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Group node containing child image node to be written to disk.</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Group nodes containing images successfully written.</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Group nodes containing images that failed to be written.</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>16.1.0.1119</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>9</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Imaging\Writers\Image Record Writer</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:connectid from="0" to="10" type="true"/>
									<sci:connectid from="10" to="2" type="true"/>
									<sci:connectid from="2" to="3" type="true"/>
									<sci:connectid from="3" to="4" type="true"/>
									<sci:connectid from="5" to="3" type="true"/>
									<sci:connectid from="6" to="7" type="true"/>
									<sci:connectid from="7" to="8" type="true"/>
									<sci:connectid from="8" to="9" type="true"/>
								</sci:protocol>
							</sci:data>
							<sci:connectid from="0" to="1" type="true"/>
							<sci:connectid from="1" to="2" type="true"/>
							<sci:connectid from="2" to="3" type="true"/>
							<sci:connectid from="3" to="4" type="true"/>
							<sci:connectid from="4" to="5" type="true"/>
							<sci:connectid from="5" to="7" type="true"/>
							<sci:connectid from="7" to="6" type="true"/>
						</sci:protocol>
					</sci:data>
					<sci:connectid from="0" to="2" type="true"/>
					<sci:connectid from="2" to="3" type="true"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.ComponentJavaPlugin.1">
				<sci:component name="Table" version="2">
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The optional title at the top of the table.</sci:help>
						<sci:member>Title Format</sci:member>
						<sci:member>Title Position</sci:member>
					</sci:arg>
					<sci:arg name="Title Format" type="FormatType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Table.Title</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Title Position" type="PositionType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
						<sci:value>600</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Table.Title</sci:value>
					</sci:arg>
					<sci:arg name="Table Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Format and position for the table as a whole.&lt;/p&gt;</sci:help>
						<sci:member>Format</sci:member>
						<sci:member>Position</sci:member>
					</sci:arg>
					<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Table.General</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.

Height settings will only be applied to tables in HTML reports.</sci:help>
						<sci:value>600</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Table.General</sci:value>
					</sci:arg>
					<sci:arg name="Header Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Options controlling the table header.&lt;/p&gt;</sci:help>
						<sci:member>Header Format</sci:member>
						<sci:member>Header Position</sci:member>
						<sci:member>Show Table Header</sci:member>
						<sci:member>Freeze Table Header</sci:member>
					</sci:arg>
					<sci:arg name="Show Table Header" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies whether table headers should be visible or not.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Table.Header</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Header Position" type="PositionType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
						<sci:value>600</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Table.Header</sci:value>
					</sci:arg>
					<sci:arg name="Cell Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Options controlling the table cells.&lt;/p&gt;</sci:help>
						<sci:member>Cell Format</sci:member>
						<sci:member>Cell Position</sci:member>
					</sci:arg>
					<sci:arg name="Cell Format" type="FormatType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Table.Cell</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Cell Position" type="PositionType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
						<sci:value>600</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Table.Cell</sci:value>
					</sci:arg>
					<sci:arg name="Data Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Options controlling the table data.&lt;/p&gt;</sci:help>
						<sci:member>Exclude Properties</sci:member>
						<sci:member>Column Order</sci:member>
						<sci:member>Array Value Display</sci:member>
						<sci:member>When Data Contains Reporting Information</sci:member>
						<sci:member>Aggregate Data</sci:member>
					</sci:arg>
					<sci:arg name="Exclude Properties" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;A comma-delimited list of properties which will not be rendered in an autogenerated table.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Column Order" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;A comma-separated list of Header Text names (which may differ from the corresponding property names), indicating the order the columns should appear. Any non-listed properties will be added as subsequent columns.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The column names are case-sensitive&lt;/li&gt;
&lt;/ul&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Array Value Display" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Determines how array values are separated when they are displayed in an autogenerated table.&lt;/p&gt;</sci:help>
						<sci:legalval>Separate by Commas</sci:legalval>
						<sci:legalval selected="true">Separate by Newlines</sci:legalval>
						<sci:legalval>One Array Element per Cell</sci:legalval>
					</sci:arg>
					<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If True, all incoming data records are aggregated into a single output record. If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="When Data Contains Reporting Information" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Determines whether the table shows all the properties of data records that already have reporting information.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">Display Reporting Information Only</sci:legalval>
						<sci:legalval>Display Reporting Information and All Properties</sci:legalval>
					</sci:arg>
					<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
						<sci:member>Link Target</sci:member>
						<sci:member>HTML Attributes</sci:member>
						<sci:member>Tooltip</sci:member>
						<sci:member>Data Connector</sci:member>
					</sci:arg>
					<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
					</sci:arg>
					<sci:arg name="Tooltip" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>An optional tooltip for this reporting element.</sci:help>
					</sci:arg>
					<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
					</sci:arg>
					<sci:arg name="Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
						<sci:member>Subscriber Event Handling</sci:member>
						<sci:member>Publisher Event Handling</sci:member>
						<sci:member>Publisher Subscriber Model</sci:member>
					</sci:arg>
					<sci:arg name="Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
						<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
						<sci:legalval>Publisher</sci:legalval>
						<sci:legalval>Subscriber</sci:legalval>
						<sci:legalval>None</sci:legalval>
					</sci:arg>
					<sci:arg name="Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
						<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">Highlight</sci:legalval>
						<sci:legalval>Filter</sci:legalval>
						<sci:legalval>Reverse Filter</sci:legalval>
					</sci:arg>
					<sci:arg name="Publisher Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Setting the publishing event type.&lt;/p&gt;</sci:help>
						<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Publisher Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Subscriber&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Subscriber&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">On Click</sci:legalval>
						<sci:legalval>On Mouse Over</sci:legalval>
					</sci:arg>
					<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
						<sci:member>Column Settings Header Text</sci:member>
						<sci:member>Column Settings Header Format</sci:member>
						<sci:member>Column Settings Header Position</sci:member>
						<sci:member>Column Settings Cell Format</sci:member>
						<sci:member>Column Settings Cell Position</sci:member>
						<sci:member>Show 4-digit Year</sci:member>
					</sci:arg>
					<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
					</sci:arg>
					<sci:arg name="Show 4-digit Year" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>For columns of type DateTime, this parameter controls the display of years, with either four, or two digits (default).</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true" expanded="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true" expanded="true">
						<sci:value>100</sci:value>
						<sci:value>Creates a table in a report by collecting data records and displaying them in rows and columns</sci:value>
						<sci:value>&lt;p&gt;There are three ways you can create tables:&lt;/p&gt;

&lt;ul&gt;

&lt;li&gt;&lt;b&gt;Auto-generated:&lt;/b&gt; Quickly build a table by adding one Table component in a report, immediately following data (i.e., blue) components). The Table component takes your data sources and creates one column for each property on your data stream. The table includes some pre-set formats to save you time. &lt;/li&gt; 

&lt;li&gt;&lt;b&gt;Column-generated:&lt;/b&gt; You specify the content of your data source that should be used in the table. For each data property to include, add a component defining the content (e.g., &lt;a href=&quot;javascript:DoLink(&apos;{34E6C845-4ACB-4212-BBA3-7422213D458F}&apos;)&quot;&gt;Text&lt;/a&gt; or a chart component, plus a separate &lt;a href=&quot;javascript:DoLink(&apos;{EB2E16E8-D13E-4C7F-BB46-0E06502A6833}&apos;)&quot;&gt;Column component&lt;/a&gt; for each column of the table to be created.  Branch the data source to each pair of content/Column components and then pipe all of them into a single Table component. Each column is added to the table in the order it is shown visually in the protocol (top to bottom).  Each column in a table must have the same number of rows.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;In-line:&lt;/b&gt; Similar to Column-generated but instead of branching the data for each column of the table, place the &quot;content&quot; components in the sequence for the final table and then pipe this into a Table component.  In each content component, use the Column Settings components to define column header and cell options.&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Input can be raw data records, column objects or a sequence of Reporting components.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>A data record representing the table is sent to the pass port.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.2.0.1312</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
						<sci:value>com.scitegic.report.component.TableComponent</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>1290 -455</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
						<sci:value>REPORTTABLENODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>{8DD32465-CB99-4A1E-870D-1A2F56D2C249}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>22</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Oct 31 13:22:09 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>Table</sci:value>
					</sci:arg>
					<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false" expanded="true">
						<sci:help>CaptureStdoutStderr</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
						<sci:value>Format</sci:value>
						<sci:value>Link Options</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Reporting\Elements\Table</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Report Viewer" version="2">
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Title</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The optional title of the HTML document. The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Include Format and Position CSS</sci:member>
						<sci:member>Use Default Browser</sci:member>
						<sci:member>Set IE Compatibility</sci:member>
					</sci:arg>
					<sci:arg name="Include Format and Position CSS" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Include Format and Position CSS</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>If set to &lt;strong&gt;False&lt;/strong&gt;, all format and position settings will be omitted from the output document, allowing them to be set using an external stylesheet specified with an &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;Include&lt;/a&gt;.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Set IE Compatibility" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Set IE Compatibility</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;When this flag is set to True (default), IE compatibility in the report is set to IE 10 (the minimum support level for Pipeline Pilot). For most users of IE, this should provide a stable environment to view Pipeline Pilot reports.
&lt;/p&gt;
&lt;/p&gt;Switch off this setting, if necessary, to allow Internet Explorer to display content in the highest mode available. This is only required for users who view the report in Internet Explorer 11 or above and who need to enable facilities not available in IE 10 mode, such as WebGL and some HTML5/CSS features.
&lt;/p&gt;
&lt;p&gt;Note that even if you are viewing the report in another browser, other users may subsequently run the protocol or view the report in Internet Explorer, and so you may still need to set this IE Compatibility setting - but only in the rare case that your report requires something beyond the default IE 10 compatibility.
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Browser</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the report. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
&lt;p&gt;
If you use Internet Explorer, note that its behavior can be modified by switching off the &lt;i&gt;Set IE Compatibility&lt;/i&gt; parameter. This is only relevant if you are working with more recently-supported web technologies, such as WebGL, that require at least IE 11 compatibility (and also require that IE 11 is installed, of course).
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Output Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Allows some alternative formatting and position settings to be used that may cause the HTML report output to behave and look more like the HTML generated with previous versions of Pipeline Pilot. This parameter is intended to be set on writers in protocols developed with previous versions of Pipeline Pilot where the output looks or behaves differently when run with the current version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always use the value of &quot;Default&quot; for new protocols or protocols under active development. The latest Reporting components may not behave correctly in HTML reports written with a non-default mode.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When set to &quot;Pipeline Pilot 7.5&quot;, this parameter rolls back some of the improvements made in the name of standards compliance and formatting consistency, including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The report will not include the HTML 4.01 Doctype declaration, which will cause Internet Explorer to render the report using quirks mode.&lt;/li&gt;
	&lt;li&gt;Position rules will not be strictly enforced, so Internet Explorer 6 will render borders and padding outside the specified width.&lt;/li&gt;
	&lt;li&gt;Horizontal alignment of block objects will not be supported, so you will not be able to, for example, center-align a table.&lt;/li&gt;
	&lt;li&gt;The page margins will not be set.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Default</sci:legalval>
						<sci:legalval>Pipeline Pilot 7.5</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>ServerFilePath</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Internet Explorer</sci:help>
						<sci:value>internetexplorer.application</sci:value>
					</sci:arg>
					<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Chrome</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>The location for Firefox</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Oct 22 23:43:53 2015</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Report Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportViewerNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0952D9DF-F95C-4D43-826F-C70450811DD8}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1590 -455</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays the results of a reporting protocol in HTML format</sci:value>
						<sci:value>&lt;p&gt;This component accepts reporting objects as input (e.g., tables, text and images), and displays the output as an HTML file in Internet Explorer.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use the &lt;a href=&quot;javascript:DoLink(&apos;{A28703A7-E701-4D34-9A93-1D24AC2039CC}&apos;)&quot;&gt;Page&lt;/a&gt; component to set the report&apos;s margins, borders, padding, and background formatting, or to specify HTML attributes on the report&apos;s &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_charts.pdf&apos;)&quot;&gt;Chart Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>This component accepts reporting objects as input.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1089</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>23</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Reporting\Viewers\HTML Report Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:connectid from="0" to="1" type="true"/>
			<sci:connectid from="1" to="14" type="true"/>
			<sci:connectid from="14" to="18" type="true"/>
			<sci:connectid from="19" to="20" type="true"/>
			<sci:connectid from="20" to="38" type="true"/>
			<sci:connectid from="38" to="37" type="true"/>
			<sci:connectid from="37" to="22" type="true"/>
			<sci:connectid from="22" to="23" type="true"/>
			<sci:version iVal="1"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>
