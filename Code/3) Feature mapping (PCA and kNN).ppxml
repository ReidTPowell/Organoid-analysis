<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="New Protocol69" version="2">
			<sci:arg name="Plate metadata" type="URLType" required="true" visibility="visible" multi="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Source</sci:value>
					</sci:mpropval>
					<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
				</sci:metaproplist>
				<sci:help>&lt;p&gt;
The file(s) or URL source(s) to read.
&lt;/p&gt;
&lt;p&gt;
This may be a comma-delimited list of files or URLs. URLs may include http, https and ftp. Simple wildcard tokens are supported (* and ?).
&lt;/p&gt;</sci:help>
				<sci:member>Plate metadata Keep Properties</sci:member>
				<sci:member>Plate metadata Maximum</sci:member>
				<sci:member>Plate metadata SourceTag</sci:member>
				<sci:member>Plate metadata HasColumnNames</sci:member>
				<sci:member>Plate metadata Column Name Lines</sci:member>
				<sci:value>shortcut:/CTCR-Stor3/BCM_JefferyRosen/NatComm_2021/Plate metadata.xlsx</sci:value>
			</sci:arg>
			<sci:arg name="Plate metadata Maximum" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Maximum</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>The maximum number of data records to read (all records if value is empty).</sci:help>
			</sci:arg>
			<sci:arg name="Plate metadata SourceTag" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>SourceTag</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;
&lt;li&gt;Filename: The name of the file read.&lt;/li&gt;
&lt;li&gt;FilenameAndExtension: The name of the file read with its file extension.&lt;/li&gt;
&lt;li&gt;FullFilename: The name of the file read, including the directory path.&lt;/li&gt;
&lt;li&gt;Number: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;
&lt;li&gt;Letter: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
				<sci:legalval>None</sci:legalval>
				<sci:legalval>Filename</sci:legalval>
				<sci:legalval>FilenameAndExtension</sci:legalval>
				<sci:legalval selected="true">FullFilename</sci:legalval>
				<sci:legalval>Number</sci:legalval>
				<sci:legalval>Letter</sci:legalval>
			</sci:arg>
			<sci:arg name="Plate metadata Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Keep Properties</sci:value>
					</sci:mpropval>
					<sci:propval name="SCI_UsesComponentGUID" ishidden="true">{14D98B18-C990-432C-834B-7026565E5ABF}</sci:propval>
				</sci:metaproplist>
				<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, the reader retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), no properties are retained.</sci:help>
			</sci:arg>
			<sci:arg name="Plate metadata HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>HasColumnNames</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1, Column2, etc.</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Plate metadata Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Column Name Lines</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
				<sci:enabledscript>parameter(&apos;Plate metadata HasColumnNames&apos;)</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Group to run" type="StringType" required="false" visibility="visible" multi="false">
				<sci:legalval selected="true">Primary</sci:legalval>
				<sci:legalval>Validation</sci:legalval>
			</sci:arg>
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="DeclareGlobal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this protocol. Such properties can be accessed within the scope of this protocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;It is best practice to declare all global properties before use. Indeed, this practice is enforced in some contexts.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;b&gt;When a global property needs to be scoped to the whole protocol:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the new global property in the &lt;i&gt;DeclareGlobal&lt;/i&gt; parameter at the protocol level.&lt;/dd&gt;
&lt;br/&gt;
&lt;dt&gt;&lt;b&gt;To limit a global property to a subprotocol scope:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the property in the subprotocol&apos;s &lt;i&gt;DeclareLocal&lt;/i&gt; parameter.&lt;/dd&gt;

&lt;p&gt;This example declares 2 global properties:&lt;/p&gt;
&lt;pre&gt;
    g_tokenHash,g_assayIdentifier
&lt;/pre&gt;

&lt;p&gt;
To initialize the declared global value with a scalar value, use the syntax:
&lt;/p&gt;

&lt;p&gt;
&lt;i&gt;property-name&lt;/i&gt; := &lt;i&gt;value&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
You can surround text string values with quotes to aid clarity. Values of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are handled as boolean values.
&lt;/p&gt;
&lt;p&gt;This example declares 3 global properties, and sets initial values on two of them:&lt;/p&gt;
&lt;pre&gt;
    g_counter := 0, g_location, g_geography:=&quot;APAC&quot;
&lt;/pre&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
				<sci:member>__PoolID</sci:member>
				<sci:member>Http Cookie Handling</sci:member>
				<sci:member>__NotificationProtocol</sci:member>
			</sci:arg>
			<sci:arg name="__PoolID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; is a case insensitive string that can optionally be set to optimize the speed of execution for quick running protocols.  Multiple protocols with the same value for &lt;i&gt;__PoolID&lt;/i&gt; can share expensive resources such as database connections, Java VMs, memory, etc. reducing the execution time by 1 to 2 seconds per run.  This can give a large speed improvement to protocols that run in a few seconds such as web applications and interactive reports.  Longer running protocols will not see much benefit.  Generally, it is a good idea to use the same &lt;i&gt;__PoolID&lt;/i&gt; for all protocols within a single application such as an interactive report since many of the components, databases, and data structures will be similar.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; can also be specified by the client when the protocol is launched.  If &lt;i&gt;__PoolID&lt;/i&gt; is specified both as a parameter by the client and as a parameter stored within the protocol, the client&apos;s value overrides the stored value.&lt;/p&gt;

&lt;p&gt;To disable pooling entirely for this particular protocol, set &lt;i&gt;__PoolID&lt;/i&gt; to &lt;b&gt;&amp;lt;Disable&amp;gt;&lt;/b&gt;&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Http Cookie Handling" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;Http Cookie Handling&lt;/i&gt; provides a mechanism to control the handling of Http cookies within components that access remote resources via Http and Https.  These include the &lt;a href=&quot;javascript:DoLink(&apos;{8A25024A-C274-485B-BB99-8570DCC4C075}&apos;)&quot;&gt;HTTP Connector&lt;/a&gt;, Data readers such as &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{93C4D73F-0B4D-03F4-B0E3-D82C4FE04C6F}&apos;)&quot;&gt;XML Reader (Generic)&lt;/a&gt;, etc., and custom Java, Perl, and .Net components that use the available APIs for accessing remote servers.  By default, New Protocols will have this setting enabled and set to &quot;Protocol Scope&quot;.  This means that Http cookies obtained from a remote server within any component in the protocol or any of its subprotocols will be parsed and appropriately sent back on subsequent requests from the same component or any other component.   The handling of the cookies is based on the IETF standard as specified in &lt;a href=&quot;javascript:DoLink(&apos;http://tools.ietf.org/html/rfc6265&apos;)&quot;&gt;http://tools.ietf.org/html/rfc6265&lt;/a&gt;.  Setting the parameter to Disabled will prevent components from parsing and returning cookies to the remote servers.&lt;/p&gt;

&lt;p&gt;Persistence of cookies is not supported, so scoping of Http cookies is entirely within the context of a single protocol execution.&lt;/p&gt;

&lt;p&gt;Older protocols that do not have the &lt;i&gt;Http Cookie Handling&lt;/i&gt; parameter will behave as though it had been set to &quot;Disabled&quot;.  To enable cookie handling in these protocols, copy this parameter from a New Protocol to the older protocol and set the parameter as desired.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">Protocol Scoped</sci:legalval>
				<sci:legalval>Disabled</sci:legalval>
			</sci:arg>
			<sci:arg name="__NotificationProtocol" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__NotificationProtocol&lt;/i&gt; specifies the name or component ID (guid) of a protocol stored in the server&apos;s protocol database that will be executed when the current job completes. If your administrator has enabled notification protocols and depending on his or her preference, the notify protocol will either run as the anonymous user or as an admin specified user. The notification protocol receives several parameters that contain information about the original job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Notify_JobID&lt;/i&gt;: The job id of the execution
&lt;li&gt;&lt;i&gt;Notify_JobStatus&lt;/i&gt;: 
A description of the result of the job execution
&lt;li&gt;&lt;i&gt;Notify_JobStatusCode&lt;/i&gt;: The 
status code that for the result of the job execution.
	&lt;ul style=&quot;list-style-type:circle&quot;&gt;
	
&lt;li&gt;&lt;i&gt;5&lt;/i&gt;: Job was stopped by the client or administrator.
	&lt;li&gt;&lt;i&gt;6&lt;/i&gt;: 
Job completed normally with success.
	&lt;li&gt;&lt;i&gt;7&lt;/i&gt;: Job completed with an error.
	&lt;li&gt;&lt;i&gt;8&lt;/i&gt;: 
The process ID associated with the running job crashed or otherwise disappeared.
	&lt;li&gt;&lt;i&gt;9&lt;/i&gt;: 
Job failed to start.
	&lt;/ul&gt;
&lt;li&gt;&lt;i&gt;Notify_ProtocolName&lt;/i&gt;: The name of the protocol
&lt;li&gt;&lt;i&gt;Notify_ProtocolPath&lt;/i&gt;: 
The path of the protocol in the DB.  This field can be blank for protocols that were launched without 
saving to the database.
&lt;li&gt;&lt;i&gt;Notify_ProtocolLogName&lt;/i&gt;: The log name of the protocol.  
Is usually the same as ProtocolName, however this can be set by the client to a different name than the 
protocol.
&lt;li&gt;&lt;i&gt;Notify_RunHost&lt;/i&gt;: The name of the node where the protocol executed.
&lt;li&gt;&lt;i&gt;Notify_Username&lt;/i&gt;: 
The user that ran the job
&lt;/ul&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
				<sci:member>Reporting Stylesheet</sci:member>
				<sci:member>Reporting Chart Display Type</sci:member>
			</sci:arg>
			<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
				<sci:value>{25A23C6A-4EF0-45F2-8495-3E88896C6262}</sci:value>
			</sci:arg>
			<sci:arg name="Reporting Chart Display Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>Specifies the chart display format.  This can be either interactive or a static image. If the &lt;i&gt;Default&lt;/i&gt; option is selected then the server default setting as specified by the &lt;i&gt;DefaultChartDisplayType&lt;/i&gt; global in the Admin portal is used.
</sci:help>
				<sci:legalval selected="true">Default</sci:legalval>
				<sci:legalval>Interactive</sci:legalval>
				<sci:legalval>Image</sci:legalval>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if the Pipeline Pilot server is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:member>Grid Options</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Grid Options" type="StringType" required="false" visibility="visible" multi="true" legalvalsenforced="false" uimpl="true">
				<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Number of GPUs=&amp;lt;2&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
				<sci:value>Account=</sci:value>
				<sci:value>Maximum Execution Time=</sci:value>
				<sci:value>Parallel Environment=</sci:value>
				<sci:value>Number of Cores=</sci:value>
				<sci:value>Number of GPUs=</sci:value>
				<sci:value>Other=</sci:value>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>rpowell</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Thu Apr 29 17:41:06 2021</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>21.2.0.2574</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>BCM - Na Zhao - Knn Updated 20210429</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{A7DD1DBE-D6C1-4B3D-95CF-2FC3273F5BF4}</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>BCM - Na Zhao - Knn Updated 20210429</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>60</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ResultFiles Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Include JobDir Files</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>50 -50</sci:value>
			</sci:arg>
			<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>OriginalPackage</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>Components\Data Access and Manipulation\Utilities\Internals\Reference Components\New Protocol69</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>@RuntimeServer := @LocatorServerName.&apos;:&apos;.@ServerSSLPort;

//Generate a list for features to include in training
FOR #i in 0 .. 511 LOOP
	append(@Feat,#i);
END LOOP;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>15</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.DataCacheIO.1">
				<sci:component name="Delete Cache" version="2">
					<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The name of the cache to delete, which should refer to a cache already written. If this cache does not exist, nothing will be done.</sci:help>
						<sci:member>Scope</sci:member>
						<sci:value>All Data</sci:value>
					</sci:arg>
					<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to the same values as were used in 
the &lt;/i&gt;Cache Writer&lt;/i&gt; to test for the existance of a particular cache.
			</sci:help>
						<sci:legalval selected="true">Job Only</sci:legalval>
						<sci:legalval>User Only</sci:legalval>
						<sci:legalval>All Users</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Additional parameters to control the component behavior.</sci:help>
						<sci:member>Password</sci:member>
					</sci:arg>
					<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>An optional password to assign to the cache content. The password must be used to read data back from the cache. It is useful to control access to public data caches.</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="JobId" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>If the scope is set to &lt;I&gt;Job Only&lt;/I&gt;, then this is the job that owns the cache, if it is different from this job. The job must have been run by the same user as this job. If not specified, then the current job is assumed to contain the cache.
               </sci:help>
					</sci:arg>
					<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
					</sci:arg>
					<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>Specifies the action of this component:</sci:help>
						<sci:value>Delete</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Aug 25 16:21:22 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Delete Cache</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>390 -125</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DATABASENODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{704E3781-33EA-42BB-9088-05B44C3D08E6}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Delete Cache</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Deletes a named cache</sci:value>
						<sci:value>This component deletes a cache.  To fully specify a cache, you need the values of &lt;I&gt;CacheID&lt;/I&gt; and &lt;I&gt;Scope&lt;/I&gt; that were used when it was created using the &lt;I&gt;Cache Writer&lt;/I&gt;.

&lt;P&gt;If the cache does not exist, this component does nothing.  If it does exist, then the cache is deleted.&lt;/P&gt;
</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.0.1563</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>42</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Cache Utilities\Delete Cache</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Excel Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;
The file(s) or URL source(s) to read.
&lt;/p&gt;
&lt;p&gt;
This may be a comma-delimited list of files or URLs. URLs may include http, https and ftp. Simple wildcard tokens are supported (* and ?).
&lt;/p&gt;</sci:help>
						<sci:member>Keep Properties</sci:member>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>HasColumnNames</sci:member>
						<sci:member>Column Name Lines</sci:member>
						<sci:value>shortcut:/CTCR-Stor3/BCM_JefferyRosen/NatComm_2021/Metadata/IACS_drug_info.xlsx</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>The maximum number of data records to read (all records if value is empty).</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;
&lt;li&gt;Filename: The name of the file read.&lt;/li&gt;
&lt;li&gt;FilenameAndExtension: The name of the file read with its file extension.&lt;/li&gt;
&lt;li&gt;FullFilename: The name of the file read, including the directory path.&lt;/li&gt;
&lt;li&gt;Number: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;
&lt;li&gt;Letter: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, the reader retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), no properties are retained.</sci:help>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1, Column2, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Sheets" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Identifies the Excel worksheets within the specified file to read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AllSheets: Read all worksheets sequentially.&lt;/li&gt;
&lt;li&gt;ActiveSheet: Read only the active worksheet when opened by Excel. (The active sheet is the sheet on top when the file was saved.)&lt;/li&gt;
&lt;li&gt;SheetName: Read only the worksheet named by the &lt;i&gt;SheetName&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>SheetTag</sci:member>
						<sci:member>SheetName</sci:member>
						<sci:legalval selected="true">AllSheets</sci:legalval>
						<sci:legalval>ActiveSheet</sci:legalval>
						<sci:legalval>SheetName</sci:legalval>
					</sci:arg>
					<sci:arg name="SheetName" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>This parameter is only relevant if &lt;i&gt;Sheet&lt;/i&gt; is set to &quot;SheetName&quot;. In this case, use this parameter to specify which sheet is to be read.</sci:help>
						<sci:enabledscript>SetDisabledDetails(
	      &apos;To enable &apos;.ParameterName().&apos;, set Sheets to &quot;SheetName&quot;&apos;);
(parameter(&apos;Sheets&apos;) eq &apos;SheetName&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="SheetTag" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;If set, a new property named &quot;SheetTag&quot; is defined on each generated data record. This property indicates the worksheet from which the data is read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SheetTag property is created.&lt;/li&gt;
&lt;li&gt;SheetName: The name of the worksheet from which the data record is read.&lt;/li&gt;
&lt;li&gt;SheetNumber: When multiple worksheets are read in from one file, they are numbered 1,2,3...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>SheetName</sci:legalval>
						<sci:legalval>SheetNumber</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>AllLines</sci:member>
						<sci:member>UndefinedString</sci:member>
						<sci:member>TrimWhitespace</sci:member>
						<sci:member>CommentLines</sci:member>
						<sci:member>DateFormat</sci:member>
						<sci:member>PreserveExcelFormats</sci:member>
						<sci:member>Reduced Memory Usage</sci:member>
						<sci:member>Extract Comments</sci:member>
						<sci:member>Cells can contain Arrays</sci:member>
						<sci:member>Array Element Delimiter</sci:member>
						<sci:member>Read Background Color</sci:member>
						<sci:member>Treat empty cells as non-existant</sci:member>
					</sci:arg>
					<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of rows and
row ranges to specify which initial rows in each
Excel worksheet should be ignored by the
parser (column headers will be read from the
next row).</sci:help>
					</sci:arg>
					<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the character or string used to represent an undefined string in the file being read. When a cell value is encountered containing the undefined string, the property is omitted from the output data record.</sci:help>
					</sci:arg>
					<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>When True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>Trims whitespace from the left and right ends of each value.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="DateFormat" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Determines the way in which date values are assigned to generated data records. Choose the &quot;Text&quot; option to format Excel date cell values as text strings. The &quot;DateTime&quot; option will result in SciTegic DateTime data properties on the data record.</sci:help>
						<sci:legalval selected="true">Text</sci:legalval>
						<sci:legalval>DateTime</sci:legalval>
					</sci:arg>
					<sci:arg name="PreserveExcelFormats" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Determines if formatting of the data is preserved. Choose the &quot;True&quot; option to preserve the Excel formats and mimic the behavior of Excel(on server) component. This value is set to &quot;False&quot; by default. Default behavior is to use the original non-formatted numeric cell values to generate properties.  Note that if the value is &quot;True&quot;, all values will be converted to strings in order to preserve the formatting.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Reduced Memory Usage" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;When set to True and the Shortcut Version of Implementation parameter is greater than 1, this component will use much less memory than the previous version with some limitations (&lt;i&gt;See &quot;Known Limitations&quot; below&lt;/i&gt;). When you encounter the issues with this mode, turn this parameter off to work around these limitations.&lt;/p&gt;

&lt;br/&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When the value is set to False, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the source file&apos;s format is Excel .XLS format (Excel &apos;97-2003)&lt;/b&gt;, this parameter is ignored. This parameter is only applicable to Excel 2007 .XLSX and .XLSM files.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the Shortcut Version is absent or less than 2&lt;/b&gt;, this parameter is ignored. In this case, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;/ul&gt; 

&lt;br/&gt;
&lt;b&gt;Known Limitations:&lt;/b&gt;
&lt;br/&gt;
We are aware of the following limitations when using this parameter.  
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Source files should be saved with Microsoft Excel.&lt;/b&gt; Files generated by 3rd party programs may not work with this parameter.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Excel formula support is very limited.&lt;/b&gt; Files that contain Excel formulas may not work with this parameter.&lt;/li&gt;
&lt;/ul&gt; 

</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Extract Comments" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Extract Comments</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Extract comments from Excel cells and add them to the property with the &quot;SCI_Comment&quot; metadata.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>merge_tagname</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Shortcut Version" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Used to maintain backwards compatibility for older protocols with this shortcut component.</sci:help>
						<sci:legalval/>
						<sci:legalval>1</sci:legalval>
						<sci:legalval selected="true">2</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Cells can contain Arrays" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Cells can contain Arrays</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Set to &lt;code&gt;true&lt;/code&gt; if values in cells containing certain markers, e.g. the new-line character, are to be treated as arrays.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Element Delimiter" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Array Element Delimiter</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Marker character to separate multiple values in a single cell.</sci:help>
						<sci:enabledscript>Parameter(&apos;Cells can contain Arrays&apos;) eq &apos;True&apos;;</sci:enabledscript>
						<sci:legalval selected="true">\n</sci:legalval>
						<sci:legalval>;</sci:legalval>
						<sci:legalval>,</sci:legalval>
						<sci:legalval>:</sci:legalval>
					</sci:arg>
					<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
						<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Read Background Color" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Read Background Color</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;div&gt;If set to &lt;code&gt;True&lt;/code&gt;, the cells&apos; background color information is read and stored in a metadata property called &lt;i&gt;SCI_BackgroundColor&lt;/i&gt;.&lt;/div&gt;
&lt;div&gt;That property, if defined, holds a &lt;i&gt;ByteArrayValue&lt;/i&gt; of size 3, with the elements being the channels in the RGB space.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Treat empty cells as non-existant" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Treat empty cells as non-existant</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>If a cell is empty  or its value matches the value of the &lt;i&gt;UndefinedString&lt;/i&gt; parameter, this parameter controls how to treat that cell:&lt;br/&gt; If this parameter is &lt;code&gt;True&lt;/code&gt;, a &lt;i&gt;SciTegic.value.NullValue&lt;/i&gt; will be created. &lt;br/&gt; If this parameter is &lt;code&gt;False&lt;/code&gt; (the default), an empty &lt;i&gt;SciTegic.value.StringValue&lt;/i&gt; will be created.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{14D98B18-C990-432C-834B-7026565E5ABF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -485</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Read data from Excel files. (Formerly called &quot;Excel Reader (Cross Platform)&quot;)</sci:value>
						<sci:value>&lt;p&gt;Reads the Excel file or files specified by &lt;em&gt;Source&lt;/em&gt;, creating one record for each row in each worksheet in each file. In addition to multiple comma-delimited files, there is support for simple wild cards (* and ?), and support for remote URLs (e.g. http).&lt;/p&gt;

&lt;p&gt;This component reads both the older binary Excel .XLS format (Excel &apos;97-2003) and the newer Excel 2007 .XLSX format.&lt;/p&gt;

&lt;p&gt;This component can also read macro-enabled workbooks with the .XLSM extension, but &lt;b&gt;macros are not evaluated&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;The component does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated
as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc. are used as the
property names.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sheets&lt;/i&gt; and &lt;i&gt;SheetName&lt;/i&gt; to include specific worksheets within the files. Individual rows and ranges of rows can be excluded using &lt;i&gt;CommentLines&lt;/i&gt;.&lt;/p&gt;
</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>One record per row in the Excel spreadsheet(s).</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>19.1.0.1778</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Apr 19 10:50:26 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>31</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Readers\Excel Reader</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.DataCacheIO.1">
				<sci:component name="Cache Writer" version="2">
					<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>Append</sci:member>
						<sci:member>Scope</sci:member>
						<sci:value>Dictionary</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to write to the cache.</sci:help>
					</sci:arg>
					<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
						<sci:legalval selected="true">Job Only</sci:legalval>
						<sci:legalval>User Only</sci:legalval>
						<sci:legalval>All Users</sci:legalval>
					</sci:arg>
					<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
						<sci:member>JoinUsing</sci:member>
						<sci:member>IgnoreCase</sci:member>
						<sci:member>JoinPropertyType</sci:member>
						<sci:member>JoinUsingListType</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinUsing" type="PropertyNameType" required="false" visibility="visible" multi="false">
						<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval>UseFirstDefinedValue</sci:legalval>
						<sci:legalval selected="true">UseAllValues</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval>IsNumeric</sci:legalval>
						<sci:legalval selected="true">IsText</sci:legalval>
						<sci:legalval>IsDate</sci:legalval>
					</sci:arg>
					<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Additional parameters to control the component behavior.</sci:help>
						<sci:member>Write Globals</sci:member>
						<sci:member>Enable Compression</sci:member>
						<sci:member>Password</sci:member>
					</sci:arg>
					<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Enable Compression" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Specifies if data written to disk should be compressed.&lt;/p&gt;
&lt;b&gt;Note:&lt;b&gt; Starting with 2017 R2, compression uses the LZ4 compression algorithm which is very fast.  Turning off compression will typically result in 6 to 10 times increased disk usage with little or no improvement in performance.  You should test your own data for comparison.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;
An optional password to assign to the cache content. Once set, the password must be used to read data back from the cache. It is useful to control access to a new public data cache.
&lt;/p&gt;
&lt;p&gt;
For an existing cache, set the password to be able to overwrite or append to the content.
&lt;/p&gt;
&lt;p&gt;
Note that the user who writes a password-protected cache does not require a password to access or overwrite the content.
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
					</sci:arg>
					<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
						<sci:legalval selected="true">Writer</sci:legalval>
						<sci:legalval>Reader</sci:legalval>
						<sci:legalval>Writer/Reader</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Aug 28 09:11:28 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Write cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>390 -485</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DATABASENODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Cache Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Writes data records to a named cache</sci:value>
						<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;li&gt;A password may be assigned to a new cache to control read and write access to the content.&lt;/p&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>%VERSION 3%</sci:value>
						<sci:value>741 -291 544 216</sci:value>
						<sci:value>255 255 0</sci:value>
						<sci:value>Populate IACS metadata</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.0.1563</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>32</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Excel Reader" version="2">
					<sci:arg name="Source" type="LinkParentParameterType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">URLType</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;
The file(s) or URL source(s) to read.
&lt;/p&gt;
&lt;p&gt;
This may be a comma-delimited list of files or URLs. URLs may include http, https and ftp. Simple wildcard tokens are supported (* and ?).
&lt;/p&gt;</sci:help>
						<sci:member>Keep Properties</sci:member>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>HasColumnNames</sci:member>
						<sci:member>Column Name Lines</sci:member>
						<sci:value>Plate metadata</sci:value>
					</sci:arg>
					<sci:arg name="Sheets" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Identifies the Excel worksheets within the specified file to read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AllSheets: Read all worksheets sequentially.&lt;/li&gt;
&lt;li&gt;ActiveSheet: Read only the active worksheet when opened by Excel. (The active sheet is the sheet on top when the file was saved.)&lt;/li&gt;
&lt;li&gt;SheetName: Read only the worksheet named by the &lt;i&gt;SheetName&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>SheetTag</sci:member>
						<sci:member>SheetName</sci:member>
						<sci:legalval selected="true">AllSheets</sci:legalval>
						<sci:legalval>ActiveSheet</sci:legalval>
						<sci:legalval>SheetName</sci:legalval>
					</sci:arg>
					<sci:arg name="SheetName" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>This parameter is only relevant if &lt;i&gt;Sheet&lt;/i&gt; is set to &quot;SheetName&quot;. In this case, use this parameter to specify which sheet is to be read.</sci:help>
						<sci:enabledscript>SetDisabledDetails(
	      &apos;To enable &apos;.ParameterName().&apos;, set Sheets to &quot;SheetName&quot;&apos;);
(parameter(&apos;Sheets&apos;) eq &apos;SheetName&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="SheetTag" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;If set, a new property named &quot;SheetTag&quot; is defined on each generated data record. This property indicates the worksheet from which the data is read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SheetTag property is created.&lt;/li&gt;
&lt;li&gt;SheetName: The name of the worksheet from which the data record is read.&lt;/li&gt;
&lt;li&gt;SheetNumber: When multiple worksheets are read in from one file, they are numbered 1,2,3...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>SheetName</sci:legalval>
						<sci:legalval>SheetNumber</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>AllLines</sci:member>
						<sci:member>UndefinedString</sci:member>
						<sci:member>TrimWhitespace</sci:member>
						<sci:member>CommentLines</sci:member>
						<sci:member>DateFormat</sci:member>
						<sci:member>PreserveExcelFormats</sci:member>
						<sci:member>Reduced Memory Usage</sci:member>
						<sci:member>Extract Comments</sci:member>
						<sci:member>Cells can contain Arrays</sci:member>
						<sci:member>Array Element Delimiter</sci:member>
						<sci:member>Read Background Color</sci:member>
						<sci:member>Treat empty cells as non-existant</sci:member>
					</sci:arg>
					<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of rows and
row ranges to specify which initial rows in each
Excel worksheet should be ignored by the
parser (column headers will be read from the
next row).</sci:help>
					</sci:arg>
					<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the character or string used to represent an undefined string in the file being read. When a cell value is encountered containing the undefined string, the property is omitted from the output data record.</sci:help>
					</sci:arg>
					<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>When True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>Trims whitespace from the left and right ends of each value.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="DateFormat" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Determines the way in which date values are assigned to generated data records. Choose the &quot;Text&quot; option to format Excel date cell values as text strings. The &quot;DateTime&quot; option will result in SciTegic DateTime data properties on the data record.</sci:help>
						<sci:legalval selected="true">Text</sci:legalval>
						<sci:legalval>DateTime</sci:legalval>
					</sci:arg>
					<sci:arg name="PreserveExcelFormats" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Determines if formatting of the data is preserved. Choose the &quot;True&quot; option to preserve the Excel formats and mimic the behavior of Excel(on server) component. This value is set to &quot;False&quot; by default. Default behavior is to use the original non-formatted numeric cell values to generate properties.  Note that if the value is &quot;True&quot;, all values will be converted to strings in order to preserve the formatting.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Reduced Memory Usage" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;When set to True and the Shortcut Version of Implementation parameter is greater than 1, this component will use much less memory than the previous version with some limitations (&lt;i&gt;See &quot;Known Limitations&quot; below&lt;/i&gt;). When you encounter the issues with this mode, turn this parameter off to work around these limitations.&lt;/p&gt;

&lt;br/&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When the value is set to False, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the source file&apos;s format is Excel .XLS format (Excel &apos;97-2003)&lt;/b&gt;, this parameter is ignored. This parameter is only applicable to Excel 2007 .XLSX and .XLSM files.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the Shortcut Version is absent or less than 2&lt;/b&gt;, this parameter is ignored. In this case, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;/ul&gt; 

&lt;br/&gt;
&lt;b&gt;Known Limitations:&lt;/b&gt;
&lt;br/&gt;
We are aware of the following limitations when using this parameter.  
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Source files should be saved with Microsoft Excel.&lt;/b&gt; Files generated by 3rd party programs may not work with this parameter.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Excel formula support is very limited.&lt;/b&gt; Files that contain Excel formulas may not work with this parameter.&lt;/li&gt;
&lt;/ul&gt; 

</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Extract Comments" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Extract Comments</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Extract comments from Excel cells and add them to the property with the &quot;SCI_Comment&quot; metadata.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>merge_tagname</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Shortcut Version" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Used to maintain backwards compatibility for older protocols with this shortcut component.</sci:help>
						<sci:legalval/>
						<sci:legalval>1</sci:legalval>
						<sci:legalval selected="true">2</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Cells can contain Arrays" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Cells can contain Arrays</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Set to &lt;code&gt;true&lt;/code&gt; if values in cells containing certain markers, e.g. the new-line character, are to be treated as arrays.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Element Delimiter" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Array Element Delimiter</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Marker character to separate multiple values in a single cell.</sci:help>
						<sci:enabledscript>Parameter(&apos;Cells can contain Arrays&apos;) eq &apos;True&apos;;</sci:enabledscript>
						<sci:legalval selected="true">\n</sci:legalval>
						<sci:legalval>;</sci:legalval>
						<sci:legalval>,</sci:legalval>
						<sci:legalval>:</sci:legalval>
					</sci:arg>
					<sci:arg name="Read Background Color" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Read Background Color</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;div&gt;If set to &lt;code&gt;True&lt;/code&gt;, the cells&apos; background color information is read and stored in a metadata property called &lt;i&gt;SCI_BackgroundColor&lt;/i&gt;.&lt;/div&gt;
&lt;div&gt;That property, if defined, holds a &lt;i&gt;ByteArrayValue&lt;/i&gt; of size 3, with the elements being the channels in the RGB space.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Treat empty cells as non-existant" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Treat empty cells as non-existant</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>If a cell is empty  or its value matches the value of the &lt;i&gt;UndefinedString&lt;/i&gt; parameter, this parameter controls how to treat that cell:&lt;br/&gt; If this parameter is &lt;code&gt;True&lt;/code&gt;, a &lt;i&gt;SciTegic.value.NullValue&lt;/i&gt; will be created. &lt;br/&gt; If this parameter is &lt;code&gt;False&lt;/code&gt; (the default), an empty &lt;i&gt;SciTegic.value.StringValue&lt;/i&gt; will be created.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Maximum" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>The maximum number of data records to read (all records if value is empty).</sci:help>
						<sci:value>Plate metadata Maximum</sci:value>
					</sci:arg>
					<sci:arg name="SourceTag" type="PromotedGroupMemberType" required="true" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;
&lt;li&gt;Filename: The name of the file read.&lt;/li&gt;
&lt;li&gt;FilenameAndExtension: The name of the file read with its file extension.&lt;/li&gt;
&lt;li&gt;FullFilename: The name of the file read, including the directory path.&lt;/li&gt;
&lt;li&gt;Number: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;
&lt;li&gt;Letter: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>Plate metadata SourceTag</sci:value>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, the reader retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), no properties are retained.</sci:help>
						<sci:value>Plate metadata Keep Properties</sci:value>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="PromotedGroupMemberType" required="true" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1, Column2, etc.</sci:help>
						<sci:value>Plate metadata HasColumnNames</sci:value>
					</sci:arg>
					<sci:arg name="Column Name Lines" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
						<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
						<sci:value>Plate metadata Column Name Lines</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{14D98B18-C990-432C-834B-7026565E5ABF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -845</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Read data from Excel files. (Formerly called &quot;Excel Reader (Cross Platform)&quot;)</sci:value>
						<sci:value>&lt;p&gt;Reads the Excel file or files specified by &lt;em&gt;Source&lt;/em&gt;, creating one record for each row in each worksheet in each file. In addition to multiple comma-delimited files, there is support for simple wild cards (* and ?), and support for remote URLs (e.g. http).&lt;/p&gt;

&lt;p&gt;This component reads both the older binary Excel .XLS format (Excel &apos;97-2003) and the newer Excel 2007 .XLSX format.&lt;/p&gt;

&lt;p&gt;This component can also read macro-enabled workbooks with the .XLSM extension, but &lt;b&gt;macros are not evaluated&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;The component does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated
as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc. are used as the
property names.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sheets&lt;/i&gt; and &lt;i&gt;SheetName&lt;/i&gt; to include specific worksheets within the files. Individual rows and ranges of rows can be excluded using &lt;i&gt;CommentLines&lt;/i&gt;.&lt;/p&gt;
</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>One record per row in the Excel spreadsheet(s).</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>19.1.0.1778</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Apr 19 10:50:26 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Readers\Excel Reader</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>#temp := SourceTag;
expand(&apos;\&apos;,#Temp);

FOR #i in 1 .. numvalues(#temp)-1 LOOP
	append(Base,#temp[#i]);
END LOOP;
contract(&apos;/&apos;,Base);</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>390 -845</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.GroupData.1">
				<sci:component name="Group Data by Tag" version="2">
					<sci:arg name="GroupUsing" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The name of a property or list of properties separated by commas that act as a common key for those records to be grouped
</sci:help>
						<sci:member>GroupUsingListType</sci:member>
						<sci:value>CCL_ID,Group</sci:value>
					</sci:arg>
					<sci:arg name="GroupUsingListType" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Indicates how &quot;GroupUsing&quot; properties are interpreted when  more than one property is listed:
 
    - UseFirstDefinedValue: Group using only the first property in the list with a defined value for a record.
 
  - UseAllValues: Groups using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.</sci:help>
						<sci:legalval>UseFirstDefinedValue</sci:legalval>
						<sci:legalval selected="true">UseAllValues</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>GroupName</sci:member>
						<sci:member>Data Are Sorted</sci:member>
					</sci:arg>
					<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>If given, a new property called &quot;GroupName&quot; is created with this value. It can aid in unpacking only selected groups by name.
</sci:help>
						<sci:value>Data</sci:value>
					</sci:arg>
					<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;GroupUsing&lt;/i&gt; properties. If so, then the grouping can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Mar 16 08:27:06 2011</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{3FDE8197-D86F-4EB0-99FF-82D6430AF466}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;GroupUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>if (strlength(trim(parameter(&apos;GroupUsing&apos;, 2))) &gt; 0) then
	&quot;Group on &quot; . trim(parameter(&apos;GroupUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>JOINNODE</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Group Data by Tag</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>690 -845</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Groups all data records with the same property value into a single data record</sci:value>
						<sci:value>&lt;p&gt;&lt;i&gt;GroupUsing&lt;/i&gt; specifies the property or comma separated list of properties to use for determining which records will be grouped together.  These grouped data records can later be unbundled by &lt;i&gt;Ungroup Data&lt;/i&gt;.  Any records lacking the &lt;i&gt;GroupUsing&lt;/i&gt; key are sent out the Fail port.&lt;/p&gt;

&lt;p&gt;
One use of grouped data is to provide input to a subprotocol for which &lt;i&gt;RunToCompletion&lt;/i&gt; has been set to True. The subprotocol will then operate on each group independently. You would typically use &lt;i&gt;Ungroup Data&lt;/i&gt; as the first component of the subprotocol.
&lt;p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;No data are lost or changed when you create a grouped record from separate data records.  Grouping is simply a way to bundle records together.
&lt;li&gt;For the purpose of matching records to be grouped, the &lt;i&gt;GroupUsing&lt;/i&gt; property is treated as a string. (Thus, for example, the values &quot;1.0&quot; and &quot;1&quot; do not match.)
&lt;li&gt;The new data record has three properties defined at the top level:
	&lt;ul&gt;
	&lt;li&gt;&lt;b&gt;GroupName&lt;/b&gt; contains the name of the group as specified by the parameter &lt;i&gt;GroupName&lt;/i&gt;.&lt;/li&gt;  
	&lt;li&gt;&lt;b&gt;NumberInGroup&lt;/b&gt; contains the number of records in the group. 
	&lt;li&gt; The properties named by &lt;i&gt;GroupUsing&lt;/i&gt; contain the values of these properties shared by all members of the group.&lt;/li&gt;
	&lt;/ul&gt;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To group every N data records together as an alternative to using a &lt;i&gt;GroupUsing&lt;/i&gt; property, use &lt;a href=&quot;javascript:DoLink(&apos;{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}&apos;)&quot;&gt;Group Data by Number&lt;/a&gt;
&lt;li&gt;To separate the grouped data into the original records, use &lt;a href=&quot;javascript:DoLink(&apos;{57833F08-BD53-42AE-A14C-87EED61B8FBD}&apos;)&quot;&gt;Ungroup Data&lt;/a&gt;.  You would typically use Ungroup Data as the first component of a &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocol designed to operate on grouped data.
&lt;li&gt;For a different approach to combining data records, analogous to a database join operation, see &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records, each containing a collection of grouped records stored in a hierarchy</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records that lack the &lt;i&gt;GroupUsing&lt;/i&gt; property</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.4.5.20</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>33</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Data Manipulators\Group Data by Tag</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Filter (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>The PilotScript expression used to filter the data.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>contains(@&apos;Group to run&apos;,Group)</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Filter (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>990 -845</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>43</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
				</sci:proplist>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Subprotocol" version="2">
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval>False</sci:legalval>
						<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.
&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
Note: In an expression inside the subprotocol you can identify the category property name as:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;parentproperty(&apos;RunToCompletion Categorize Using&apos;)&lt;/code&gt;
&lt;p&gt;
And so to access the value of this property on the current data record, use:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;property(parentproperty(&apos;RunToCompletion Categorize Using&apos;))&lt;/code&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Number of GPUs=&amp;lt;4&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
						<sci:value>Account=</sci:value>
						<sci:value>Maximum Execution Time=</sci:value>
						<sci:value>Parallel Environment=</sci:value>
						<sci:value>Number of Cores=</sci:value>
						<sci:value>Number of GPUs=</sci:value>
						<sci:value>Other=</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:value>ComponentReturnsFail</sci:value>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Subprotocol 2</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>SubprotocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1290 -845</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>20.1.0.2181</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>60</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>35</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Sortable Table" version="2">
							<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The optional title at the top of the table.</sci:help>
								<sci:member>Title Format</sci:member>
								<sci:member>Title Position</sci:member>
							</sci:arg>
							<sci:arg name="Title Format" type="FormatType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:value>700</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Title</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Title Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>600</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Title</sci:value>
							</sci:arg>
							<sci:arg name="Table Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Format and position for the table as a whole.&lt;/p&gt;</sci:help>
								<sci:member>Format</sci:member>
								<sci:member>Position</sci:member>
							</sci:arg>
							<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:value>700</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.General</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>600</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.General</sci:value>
							</sci:arg>
							<sci:arg name="Header Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Options controlling the table header.&lt;/p&gt;</sci:help>
								<sci:member>Header Format</sci:member>
								<sci:member>Header Position</sci:member>
								<sci:member>Freeze Table Header</sci:member>
							</sci:arg>
							<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:value>700</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Header</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Header Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>600</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Header</sci:value>
							</sci:arg>
							<sci:arg name="Cell Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Options controlling the table cells.&lt;/p&gt;</sci:help>
								<sci:member>Cell Format</sci:member>
								<sci:member>Cell Position</sci:member>
							</sci:arg>
							<sci:arg name="Cell Format" type="FormatType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:value>700</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Cell</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Cell Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>600</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Cell</sci:value>
							</sci:arg>
							<sci:arg name="Data Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Options controlling the table data.&lt;/p&gt;</sci:help>
								<sci:member>Exclude Properties</sci:member>
								<sci:member>Column Order</sci:member>
								<sci:member>Array Value Display</sci:member>
								<sci:member>Aggregate Data</sci:member>
								<sci:member>When Data Contains Reporting Information</sci:member>
							</sci:arg>
							<sci:arg name="Exclude Properties" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-delimited list of properties which will not be rendered in an autogenerated table.</sci:help>
							</sci:arg>
							<sci:arg name="Column Order" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of property names, indicating the order the columns should appear in an autogenerated table. Any non-listed properties will be added as subsequent columns.</sci:help>
							</sci:arg>
							<sci:arg name="Array Value Display" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Determines how array values are separated when they are displayed in an autogenerated table.</sci:help>
								<sci:legalval>Separate By Commas</sci:legalval>
								<sci:legalval selected="true">Separate By Newlines</sci:legalval>
								<sci:legalval>One Array Element Per Cell</sci:legalval>
							</sci:arg>
							<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If True, all incoming data records are aggregated into a single output record. If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="When Data Contains Reporting Information" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Determines whether the table shows all the properties of data records that already have reporting information.</sci:help>
								<sci:legalval>Display Reporting Information Only</sci:legalval>
								<sci:legalval selected="true">Display Reporting Information and All Properties</sci:legalval>
							</sci:arg>
							<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
								<sci:member>Link Target</sci:member>
								<sci:member>Tooltip</sci:member>
							</sci:arg>
							<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
							</sci:arg>
							<sci:arg name="Tooltip" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>An optional tooltip for this reporting element.</sci:help>
							</sci:arg>
							<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
								<sci:member>Column Settings Header Text</sci:member>
								<sci:member>Column Settings Header Format</sci:member>
								<sci:member>Column Settings Header Position</sci:member>
								<sci:member>Column Settings Cell Format</sci:member>
								<sci:member>Column Settings Cell Position</sci:member>
								<sci:member>Show 4-digit Year</sci:member>
							</sci:arg>
							<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
							</sci:arg>
							<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>700</sci:value>
							</sci:arg>
							<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
							</sci:arg>
							<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>700</sci:value>
							</sci:arg>
							<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
								<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
								<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
								<sci:value>uid</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
								<sci:help>When the network runs, processes once or until done for each process call</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Show 4-digit Year" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
										<sci:value>Show 4-digit Year</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>For columns of type DateTime, this parameter controls the display of years, with either four, or two digits (default).</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1890 -95</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Make Shortcut by Default</sci:legalval>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Processing Order</sci:help>
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.2.0.1312</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
								<sci:value>Format</sci:value>
								<sci:value>Link Options</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/report</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Oct 31 13:23:59 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>REPORTTABLENODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Creates a table with sortable columns</sci:value>
								<sci:value>&lt;p&gt;The resulting table has columns that can be sorted by clicking the column headers.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{A13A80BA-3576-403a-8177-A7797894DD32}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Sortable Table</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Reporting and Visualization\Reporting\Web Application Development\HTML Elements\Sortable Table</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.ComponentJavaPlugin.1">
						<sci:component name="Tab" version="2">
							<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;The optional title at the top of the tab. If left blank, the title will be auto-generated in the format Tab 1 ... Tab N, depending on the Tab&apos;s position within its Tab Group.&lt;/p&gt;</sci:help>
								<sci:value>Assay statistics</sci:value>
							</sci:arg>
							<sci:arg name="Tab Options" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>&lt;p&gt;Customize tab options including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;b&gt;Closable&lt;/b&gt;: If set, an x appears to the right of the tab&apos;s title, allowing the tab to be closed.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>Closable</sci:legalval>
							</sci:arg>
							<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:value>600</sci:value>
							</sci:arg>
							<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>500</sci:value>
								<sci:value>100</sci:value>
								<sci:value>Percent</sci:value>
								<sci:value>100.0</sci:value>
								<sci:value>Percent</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0</sci:value>
								<sci:value>Pixels</sci:value>
							</sci:arg>
							<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;If set to &quot;True&quot;, all incoming data records are aggregated into a single output record.&lt;/p&gt;

&lt;p&gt;If &quot;False&quot;, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:value>ComponentReturnsPass</sci:value>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>CaptureStdoutStderr</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/reportadv</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Feb 12 10:00:00 2010</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Tab</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2190 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>REPORTCOLUMNNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6FBAE9E7-2825-4C1B-865E-723D10C0E04B}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Plug In</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Creates a tab for use within a tab group in an HTML report</sci:value>
								<sci:value>&lt;p&gt;Use the Tab component to group reporting contents into individual tabs. This component allows you to set the title, formatting, and other options for an individual tab within a &lt;a href=&quot;javascript:DoLink(&apos;{00D97472-FA8F-41A8-9841-095DBCB3F989}&apos;)&quot;&gt;Tab Group&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This component only works in HTML reports.&lt;/li&gt;
	&lt;li&gt;Tabs must be piped into a Tab Group component.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>One or more data records containing reporting components.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>A single data record containing the Tab to be included in a Tab Group in the HTML report.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>8.0.0.14</sci:value>
							</sci:arg>
							<sci:arg name="Output Location" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>&lt;p&gt;Irrelevant for onload events.&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">Header</sci:legalval>
								<sci:legalval>Body</sci:legalval>
							</sci:arg>
							<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>com.scitegic.report.component.extjs.TabComponent</sci:value>
							</sci:arg>
							<sci:arg name="Onload Event" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>&lt;p&gt;If true, the script is added as an onload event, which will be executed after the DOM is document&apos;s DOM is fully loaded and all external includes have been parsed.&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>scitegic/report</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>11</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Reporting and Visualization\Reporting\Web Application Development\HTML Elements\Tab</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.GroupData.1">
						<sci:component name="Group Data by Tag" version="2">
							<sci:arg name="GroupUsing" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of a property or list of properties separated by commas that act as a common key for those records to be grouped
</sci:help>
								<sci:member>GroupUsingListType</sci:member>
								<sci:value>CCL_ID,Assay_Batch,Group</sci:value>
							</sci:arg>
							<sci:arg name="GroupUsingListType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Indicates how &quot;GroupUsing&quot; properties are interpreted when  more than one property is listed:
 
    - UseFirstDefinedValue: Group using only the first property in the list with a defined value for a record.
 
  - UseAllValues: Groups using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>GroupName</sci:member>
								<sci:member>Data Are Sorted</sci:member>
							</sci:arg>
							<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If given, a new property called &quot;GroupName&quot; is created with this value. It can aid in unpacking only selected groups by name.
</sci:help>
								<sci:value>Data</sci:value>
							</sci:arg>
							<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;GroupUsing&lt;/i&gt; properties. If so, then the grouping can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Mar 16 08:27:06 2011</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{3FDE8197-D86F-4EB0-99FF-82D6430AF466}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;GroupUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>if (strlength(trim(parameter(&apos;GroupUsing&apos;, 2))) &gt; 0) then
	&quot;Group on &quot; . trim(parameter(&apos;GroupUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Group Data by Tag</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>990 -275</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Groups all data records with the same property value into a single data record</sci:value>
								<sci:value>&lt;p&gt;&lt;i&gt;GroupUsing&lt;/i&gt; specifies the property or comma separated list of properties to use for determining which records will be grouped together.  These grouped data records can later be unbundled by &lt;i&gt;Ungroup Data&lt;/i&gt;.  Any records lacking the &lt;i&gt;GroupUsing&lt;/i&gt; key are sent out the Fail port.&lt;/p&gt;

&lt;p&gt;
One use of grouped data is to provide input to a subprotocol for which &lt;i&gt;RunToCompletion&lt;/i&gt; has been set to True. The subprotocol will then operate on each group independently. You would typically use &lt;i&gt;Ungroup Data&lt;/i&gt; as the first component of the subprotocol.
&lt;p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;No data are lost or changed when you create a grouped record from separate data records.  Grouping is simply a way to bundle records together.
&lt;li&gt;For the purpose of matching records to be grouped, the &lt;i&gt;GroupUsing&lt;/i&gt; property is treated as a string. (Thus, for example, the values &quot;1.0&quot; and &quot;1&quot; do not match.)
&lt;li&gt;The new data record has three properties defined at the top level:
	&lt;ul&gt;
	&lt;li&gt;&lt;b&gt;GroupName&lt;/b&gt; contains the name of the group as specified by the parameter &lt;i&gt;GroupName&lt;/i&gt;.&lt;/li&gt;  
	&lt;li&gt;&lt;b&gt;NumberInGroup&lt;/b&gt; contains the number of records in the group. 
	&lt;li&gt; The properties named by &lt;i&gt;GroupUsing&lt;/i&gt; contain the values of these properties shared by all members of the group.&lt;/li&gt;
	&lt;/ul&gt;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To group every N data records together as an alternative to using a &lt;i&gt;GroupUsing&lt;/i&gt; property, use &lt;a href=&quot;javascript:DoLink(&apos;{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}&apos;)&quot;&gt;Group Data by Number&lt;/a&gt;
&lt;li&gt;To separate the grouped data into the original records, use &lt;a href=&quot;javascript:DoLink(&apos;{57833F08-BD53-42AE-A14C-87EED61B8FBD}&apos;)&quot;&gt;Ungroup Data&lt;/a&gt;.  You would typically use Ungroup Data as the first component of a &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocol designed to operate on grouped data.
&lt;li&gt;For a different approach to combining data records, analogous to a database join operation, see &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records, each containing a collection of grouped records stored in a hierarchy</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that lack the &lt;i&gt;GroupUsing&lt;/i&gt; property</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>8.4.5.20</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Group Data by Tag</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>Set := Assay_Batch</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1290 -275</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>@CCL_ID := CCL_ID</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -455</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>15</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.UngroupData.1">
						<sci:component name="Ungroup Data" version="2">
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>GroupName</sci:member>
							</sci:arg>
							<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>(Optional) Restricts the ungroup process to only those groups having the given name -- the same name as specified by the &quot;Group Data&quot; component</sci:help>
								<sci:value>Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Jan 19 10:40:59 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Ungroup Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>GENERATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Ungroup Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{57833F08-BD53-42AE-A14C-87EED61B8FBD}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>390 -455</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Separates data records previously grouped together into the original records</sci:value>
								<sci:value>&lt;p&gt;The input record is assumed to be a grouped data record.  The individual records are extracted from the group and sent out the Pass port.  The incoming data record is discarded.&lt;/p&gt;

&lt;p&gt;You would typically use Ungroup Data as the first component inside a &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocol that expects grouped data.  This executes the remainder of the subprotocol over the individual data records in the group.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;It is possible to have a group which in turn has another group as one of its members (nested groups). In this case, ungrouping will separate only the top level groups. Multiple Ungroup Data components operating in series are needed to separate nested groups.&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To group data records together use &lt;a href=&quot;javascript:DoLink(&apos;{3FDE8197-D86F-4EB0-99FF-82D6430AF466}&apos;)&quot;&gt;Group Data by Tag&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}&apos;)&quot;&gt;Group Data by Number&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To view the structure of grouped data records use &lt;a href=&quot;javascript:DoLink(&apos;{AA4369ED-A1A1-4949-8520-39B23096ACFD}&apos;)&quot;&gt;Data Record Tree Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To learn more about &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocols, see the parameter help on &lt;a href=&quot;javascript:DoLink(&apos;{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}&apos;)&quot;&gt;Subprotocol&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic Data</sci:value>
								<sci:value>Data records with a hierarchical group of other data records</sci:value>
								<sci:value>Generic Data</sci:value>
								<sci:value>The individual data records that were contained within a hierarchical group of the incoming data</sci:value>
								<sci:value>Generic Data</sci:value>
								<sci:value>Data records on which the GroupName property is missing</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.6</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Ungroup Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Subprotocol" version="2">
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval>False</sci:legalval>
								<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.
&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
Note: In an expression inside the subprotocol you can identify the category property name as:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;parentproperty(&apos;RunToCompletion Categorize Using&apos;)&lt;/code&gt;
&lt;p&gt;
And so to access the value of this property on the current data record, use:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;property(parentproperty(&apos;RunToCompletion Categorize Using&apos;))&lt;/code&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
								<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Number of GPUs=&amp;lt;4&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
								<sci:value>Account=</sci:value>
								<sci:value>Maximum Execution Time=</sci:value>
								<sci:value>Parallel Environment=</sci:value>
								<sci:value>Number of Cores=</sci:value>
								<sci:value>Number of GPUs=</sci:value>
								<sci:value>Other=</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Subprotocol 1</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>SUBPROTOCOLNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>690 -455</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
								<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>20.1.0.2181</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>5</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>#Props := &apos;Raw_Data,Projections,Plate_map&apos;;
expand(&apos;,&apos;,#Props);

FOREACH #PROP IN #PROPS LOOP
	//IF #PROP RLIKE(&apos;^./&apos;) THEN
		property(#PROP) := Base.substring(property(#PROP),2);
	//END IF;
END LOOP;

//Promote all metadata into globals
@Props := RPROPERTYNAMES(&apos;&apos;);
FOREACH #PROP IN @PROPS LOOP
	globalproperty(#PROP) := property(#PROP);
END LOOP;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.FolderNavigator.1">
								<sci:component name="List Files" version="2">
									<sci:arg name="Directory Path" type="LinkDataPropertyType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" ishidden="true" base64="UI1">Al1HAALiAVRoZSBwYXRoIHRvIHRoZSBkaXJlY3RvcnkgdGhhdCB3aWxsIGJlIHNlYXJjaGVkIGZvciBmaWxlcyBvciBmb2xkZXJzLiBDYW4gYmUgYSBwYXRoIG9uIHRoZSBzZXJ2ZXIgb3IgYSBuZXR3b3JrIHJlc291cmNlLgo8cD4KPHVsPgo8bGk+Rm9yIGEgZGlyZWN0b3J5IG9uIG9yIGFjY2Vzc2libGUgdG8gdGhlIHNlcnZlciAoZS5nLiwgdmlhIE5GUyksIGVudGVyIGEgcGF0aC48L2xpPgo8bGk+Rm9yIGEgbmV0d29yayByZXNvdXJjZSwgZW50ZXIgYSBuZXR3b3JrIFVSTCBpbiB0aGUgZm9ybSA8Yj5wcm90b2NvbDovL3NlcnZlcjpwb3J0Ly4uLjwvYj4uIChJZiBwb3J0IGlzIG9taXR0ZWQsIGEgZGVmYXVsdCBpcyB1c2VkLikgUHJvdG9jb2xzIHN1cHBvcnRlZCBhcmU6Cgk8dWw+Cgk8bGk+aHR0cDwvbGk+Cgk8bGk+aHR0cHM8L2xpPgoJPGxpPmhkZnMgKEhhZG9vcCBEaXN0cmlidXRlZCBGaWxlIFN5c3RlbSk8L2xpPgoJPC91bD4KPC9saT4KPC91bD44RGlyZWN0b3J5VHlwZQAMAAAAAAEAAAEcVGhpcyBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQuBAH8AAAAAAAAAAAAPERpcmVjdG9yeSBQYXRoA8xTz7sEAA==</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">DirectoryType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" ishidden="true" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType" ishidden="true">DirectoryType</sci:propval>
										</sci:metaproplist>
										<sci:help>The path to the directory that will be searched for files or folders. Can be a path on the server or a network resource.
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a directory on or accessible to the server (e.g., via NFS), enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http&lt;/li&gt;
	&lt;li&gt;https&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:member>Recurse Directories</sci:member>
										<sci:member>Directory Path Authentication Options</sci:member>
										<sci:value>Projections</sci:value>
									</sci:arg>
									<sci:arg name="Directory Path Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>For http and https sources, you may optionally specify authentication information for the URL in the following parameters</sci:help>
										<sci:member>Directory Path Authentication Options Username</sci:member>
										<sci:member>Directory Path Authentication Options Password</sci:member>
										<sci:member>Directory Path Authentication Options Authentication Method</sci:member>
										<sci:member>Directory Path Authentication Options KDC Server</sci:member>
										<sci:member>Directory Path Authentication Options KDC Realm</sci:member>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Directory Path Authentication Options Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Determines which method to use during authentication with an HTTP or HTTPS directory.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component Source parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
										<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
									</sci:arg>
									<sci:arg name="Directory Path Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;
The username used to connect to the supplied URL Directory.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Directory Path Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>The password used to authenticate with the Directory&apos;s server.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Directory Path Authentication Options Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Directory Path Authentication Options KDC Server" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>When connecting to an HDFS URL, KDC Server and Realm are also required</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Directory Path Authentication Options KDC Realm" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>When connecting to an HDFS URL, KDC Server and Realm are also required</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for the Directory Path&apos;);
Parameter(&apos;Directory Path&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Recurse Directories" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>If True, the Directory Path will be searched recursively.  If False, the list will only include items contained directly by the specified Directory Path.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Filter" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;A regular expression used to identify the files or subdirectories that should be returned.  The component uses Perl regular expression syntax. 
&lt;/p&gt;
&lt;p&gt;
Use the &lt;i&gt;Ignore Case&lt;/i&gt; flag in the &lt;i&gt;Additional Options&lt;/i&gt; to set whether the regular expresion filter is case-sensitive or not.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Examples:&lt;/b&gt;
&lt;/p&gt;&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;.*&lt;/b&gt; will return all files or subdirectories&lt;/li&gt;
&lt;li&gt;&lt;b&gt;\.txt$&lt;/b&gt; will return all .txt files
&lt;li&gt;&lt;b&gt;\.(sd|sdf)$&lt;/b&gt; will return all .sd and .sdf files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;b&gt;^Assay&lt;/b&gt;&lt;/code&gt; will return all files whose names start with &quot;Assay&quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</sci:help>
										<sci:value>DeepHTS.csv</sci:value>
									</sci:arg>
									<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>Property</sci:member>
										<sci:member>Search Type</sci:member>
										<sci:member>Ignore Case</sci:member>
										<sci:member>Additional Properties</sci:member>
									</sci:arg>
									<sci:arg name="Property" type="PropertyNameType" required="true" visibility="visible" multi="false">
										<sci:help>Name of the property that will be added to the data stream which contains the path to the files or subdirectories.</sci:help>
										<sci:value>Path</sci:value>
									</sci:arg>
									<sci:arg name="Search Type" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to search the Directory Path for files or for subdirectories</sci:help>
										<sci:legalval selected="true">Files</sci:legalval>
										<sci:legalval>Subdirectories</sci:legalval>
									</sci:arg>
									<sci:arg name="Ignore Case" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>A flag to indicate if the filter operation is to be case-insensitive (default) or case-sensitive.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Additional Properties" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Additional properties for each file or subdirectory that should be added to the property list. 

The size property is in bytes. If greater than 2147483647, the output property is a double precision value, otherwise an integer.
 
The date properties are pilot DateTimeValues and can be manipulated with the appropriate DateTime pilotscript functions. The utility of the Last Accessed Date depends on the operating system.

The file name property is extracted directly as the leaf item from the full path.

Note that adding file system properties will incur some additional overhead, so be sure to switch off any properties that you are not using.</sci:help>
										<sci:legalval>Size</sci:legalval>
										<sci:legalval>Owner</sci:legalval>
										<sci:legalval>Creation Date</sci:legalval>
										<sci:legalval>Last Accessed Date</sci:legalval>
										<sci:legalval>Last Modified Date</sci:legalval>
										<sci:legalval>File Name</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:value>ComponentReturnsPass</sci:value>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Safe Path" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
										<sci:help>When this flags is set, generated file paths hide the full file system structure by using URI-based file paths.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>List Files</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>List Files Internal</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>GENERATORNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DEF452A5-8A41-A363-C7ED-990B13235DE6}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>390 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Lists the files or folders in the specified directory on the server, from an HTTP WebDav server such as Microsoft SharePoint, or from Hadoop HDFS</sci:value>
										<sci:value>&lt;p&gt;Outputs a list of file paths in the specified directory. Where appropriate, the file paths are specified using the safe URI format. &lt;i&gt;Search Type&lt;/i&gt; can be switched to search for Subdirectory names as required.&lt;/p&gt;

&lt;p&gt;One data record is generated for each file found in &lt;i&gt;Directory Path&lt;/i&gt;.  To list files recursively in subfolders within &lt;i&gt;Directory Path&lt;/i&gt;, &lt;i&gt;Recurse Directories&lt;/i&gt; should be True.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Filter&lt;/i&gt; is a regular expression used to specify which files to return from each searched directory.&lt;/p&gt;

&lt;p&gt;The &lt;i&gt;Additional Properties&lt;/i&gt; parameter can be set to add selected meta data properties to the output, related to the named file or directory.&lt;/p&gt;

&lt;p&gt;For HTTP WebDav document repositories such as Microsoft SharePoint, you can specify an HTTP url as the &lt;i&gt;Directory Path&lt;/i&gt; and include authentication options for connecting to the remote server.&lt;/p&gt;</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>20.1.0.2147</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Sep 10 16:19:11 2019</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\File Utilities\List Files</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.DelimitedReader.1">
								<sci:component name="Delimited Text Reader" version="2">
									<sci:arg name="Source" type="LinkDataPropertyType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" ishidden="true" base64="UI1">Al1HAAJGAzxwPgpUaGUgbG9jYXRpb24gZnJvbSB3aGljaCB0byByZWFkIHRoZSBkYXRhLiBDYW4gYmUgYSBmaWxlLCBhIG5ldHdvcmsgcmVzb3VyY2UsIGEgZ2xvYmFsIHByb3BlcnR5LCBvciBhIGRhdGEgcmVjb3JkIHByb3BlcnR5Lgo8L3A+IAo8cD4KPHVsPgo8bGk+Rm9yIGEgZmlsZSwgZW50ZXIgYSBwYXRoLjwvbGk+CjxsaT5Gb3IgYSBuZXR3b3JrIHJlc291cmNlLCBlbnRlciBhIG5ldHdvcmsgVVJMIGluIHRoZSBmb3JtIDxiPnByb3RvY29sOi8vc2VydmVyOnBvcnQvLi4uPC9iPi4gKElmIHBvcnQgaXMgb21pdHRlZCwgYSBkZWZhdWx0IGlzIHVzZWQuKSBQcm90b2NvbHMgc3VwcG9ydGVkIGFyZToKCTx1bD4KCTxsaT5odHRwLCBodHRwczwvbGk+Cgk8bGk+ZnRwPC9saT4KCTxsaT5oZGZzIChIYWRvb3AgRGlzdHJpYnV0ZWQgRmlsZSBTeXN0ZW0pPC9saT4KCTwvdWw+CjwvbGk+CjxsaT5Gb3IgYSBnbG9iYWwgcHJvcGVydHksIGVudGVyICJnbG9iYWw6Ly9wcm9wZXJ0eS1uYW1lIiwgb3Igc2VsZWN0ICJHbG9iYWwgUHJvcGVydHkuLi4iIGZyb20gdGhlICJJbml0aWFsaXplIFVzaW5nIiByaWdodC1jbGljayBtZW51LjwvbGk+CjxsaT5Gb3IgYSBkYXRhIHJlY29yZCBwcm9wZXJ0eSwgZW50ZXIgInByb3BlcnR5Oi8vcHJvcGVydHktbmFtZSIsIG9yIGFkZCBhbiBpbnB1dCBwb3J0IGFuZCBzZWxlY3QgIkRhdGEgUHJvcGVydHkuLi4iIGZyb20gdGhlICJJbml0aWFsaXplIFVzaW5nIiByaWdodC1jbGljayBtZW51LjwvbGk+CjxsaT5UbyByZWFkIG11bHRpcGxlIGZpbGVzLCBlbnRlciBhIGNvbW1hLXNlcGFyYXRlZCBsaXN0IG9mIGFueSBvZiB0aGUgYWJvdmUuPC9pPgo8L3VsPiBVUkxUeXBlAAwAAAAAAQAAARxUaGlzIHBhcmFtZXRlciBpcyByZXF1aXJlZC4EAPwAAAAAAAAAAAAcU291cmNlA8xTz7sEAA==</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">URLType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" ishidden="true" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType" ishidden="true">URLType</sci:propval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;
The location from which to read the data. Can be a file, a network resource, a global property, or a data record property.
&lt;/p&gt; 
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;, or select &quot;Global Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot;, or add an input port and select &quot;Data Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;To read multiple files, enter a comma-separated list of any of the above.&lt;/i&gt;
&lt;/ul&gt;</sci:help>
										<sci:member>Maximum</sci:member>
										<sci:member>Keep Properties</sci:member>
										<sci:member>UTF-8 Auto Detect</sci:member>
										<sci:member>SourceTag</sci:member>
										<sci:member>HasColumnNames</sci:member>
										<sci:member>Column Name Lines</sci:member>
										<sci:member>Source Authentication Options</sci:member>
										<sci:value>Path</sci:value>
									</sci:arg>
									<sci:arg name="Source Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
										<sci:member>Source Authentication Options Username</sci:member>
										<sci:member>Source Authentication Options Password</sci:member>
										<sci:member>Source Authentication Options Authentication Method</sci:member>
										<sci:member>Source Authentication Options KDC Server</sci:member>
										<sci:member>Source Authentication Options KDC Realm</sci:member>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Source Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
										<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
										<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
									</sci:arg>
									<sci:arg name="Source Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Source Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Source Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
										<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Source Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
										<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>The maximum number of data records to read. If empty, all records are read.</sci:help>
									</sci:arg>
									<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Specifies a tag format for identifying the source of data records. Causes a property named &lt;b&gt;SourceTag&lt;/b&gt; to be created to hold the value. Options and their associated tag values are:
&lt;ul&gt;
&lt;li&gt;None: No &lt;b&gt;SourceTag&lt;/b&gt; property is created and any existing &lt;b&gt;SourceTag&lt;/b&gt; properties are removed.
&lt;li&gt;Filename: The name of the file excluding its extension
&lt;li&gt;FilenameAndExtension: The name of the file including its file extension
&lt;li&gt;FullFilename: The name of the file, including its extension and directory path
&lt;li&gt;ZipFilename: When reading a compressed zip file, the filename within the compressed archive
&lt;li&gt;Number: When multiple files are read, a number (1, 2, 3...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;Letter: When multiple files are read , a letter (A, B, C...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;KeepCurrent: Keeps the current value of &lt;b&gt;SourceTag&lt;/b&gt; if present
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Filename</sci:legalval>
										<sci:legalval>FilenameAndExtension</sci:legalval>
										<sci:legalval>FullFilename</sci:legalval>
										<sci:legalval>ZipFilename</sci:legalval>
										<sci:legalval>Number</sci:legalval>
										<sci:legalval>Letter</sci:legalval>
										<sci:legalval>KeepCurrent</sci:legalval>
									</sci:arg>
									<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>Specifies properties from &lt;i&gt;Source&lt;/i&gt; to retain for each output data record. If not specified, all properties are retained. A value of &quot;-&quot; (minus sign) specifies that no properties are retained.</sci:help>
									</sci:arg>
									<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>Specifies whether to attempt to infer the use of UTF-8 encoding in &lt;i&gt;Source&lt;/i&gt; files when a byte order mark (BOM) is absent from them.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;UTF-8 is a type of character encoding which represents international characters with multiple bytes, while basic Latin characters remain as a single byte.  If a file begins with a BOM, then the encoding can be inferred with confidence. If not, an indirect approach is necessary. This approach is not 100% reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the raw bytes from the file, then convert the data using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;, which allows you to specify the encoding.
&lt;/ul&gt;

</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>If True, property names are taken from the first line of data in &lt;i&gt;Source&lt;/i&gt; files. If False, the first line is assumed to contain data, and properties are given names &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
										<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Specifies the character that separates fields. Options include:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;FigureOut:&lt;/b&gt; Determines the type automatically (looks for, in order: tab, comma, space, colon, semicolon).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Tab:&lt;/b&gt; For tab-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Space:&lt;/b&gt; For space-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Comma:&lt;/b&gt; For comma-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Colon:&lt;/b&gt; For colon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Semicolon:&lt;/b&gt; For semicolon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;$:&lt;/b&gt; For fields delimited bty the &quot;$&quot; character.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:member>MultipleValueDelimiter</sci:member>
										<sci:member>ParseNDimensionalArrayStrings</sci:member>
										<sci:legalval selected="true">FigureOut</sci:legalval>
										<sci:legalval>Tab</sci:legalval>
										<sci:legalval>Space</sci:legalval>
										<sci:legalval>Comma</sci:legalval>
										<sci:legalval>Colon</sci:legalval>
										<sci:legalval>Semicolon</sci:legalval>
										<sci:legalval>$</sci:legalval>
									</sci:arg>
									<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimiter exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Semicolon</sci:legalval>
										<sci:legalval>Colon</sci:legalval>
										<sci:legalval>Comma</sci:legalval>
										<sci:legalval>Linefeed</sci:legalval>
									</sci:arg>
									<sci:arg name="ParseNDimensionalArrayStrings" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Toggles whether to parse delimited N-Dimensional Array strings into N-Dimensional Array values.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>UndefinedString</sci:member>
										<sci:member>AllLines</sci:member>
										<sci:member>TrimWhitespace</sci:member>
										<sci:member>CheckSyntax</sci:member>
										<sci:member>CommentLines</sci:member>
										<sci:member>AddEmptyProperties</sci:member>
									</sci:arg>
									<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers are read from the line that comes next).</sci:help>
									</sci:arg>
									<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Character or string to represent an undefined string read in the file. To make an empty string to be treated as an undefined value, set the parameter value to &quot;EmptyString&quot;.</sci:help>
									</sci:arg>
									<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>If True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Trims whitespace from the left and right ends of each value</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to perform a quick syntax check at the beginning of the file when it is opened, and if a problem is found, throw an error.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="AddEmptyProperties" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>If True, then if a row does not have as many values as the number of columns, the missing properties are added to the data record as empty properties</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Join Behavior" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;How to merge the created data record onto the incoming data record. Options are:&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: Copies all properties from the joining data onto the base data, overwriting the values of any properties that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: Copies only those properties from the joining data to the base data that do not already exist on the base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  The other joining properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;Replace&lt;/i&gt;: The input data record is replaced by the created data record. &lt;/ul&gt;

</sci:help>
										<sci:legalval>OverwriteOrCreate</sci:legalval>
										<sci:legalval>OverwriteExisting</sci:legalval>
										<sci:legalval>CreateIfNew</sci:legalval>
										<sci:legalval>AppendOrCreate</sci:legalval>
										<sci:legalval>AppendExisting</sci:legalval>
										<sci:legalval selected="true">Replace</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:value>ComponentReturnsPass</sci:value>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jul 16 10:52:03 2018</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component that this component is based upon.</sci:help>
										<sci:value>Delimited Reader</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DOCUMENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>690 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Reads data from text files containing one record per line with data separated by delimiters</sci:value>
										<sci:value>&lt;p&gt;The file or files are specified by &lt;i&gt;Source&lt;/i&gt;. The file(s) should contain textual data formatted with a single record per line. Individual property values on each line should be separated by a delimiter character (such as, space, comma, tab), as specified by &lt;i&gt;Delimiter&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, and so on, are used as the property names.&lt;/p&gt;

Cells containing array data can be read by setting the &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; option to the character that separates the array elements. (Of course, this cannot be the same as the delimiter character.) You can now use the &lt;i&gt;Unmerge Data&lt;/i&gt; component to unmerge these arrays into separate records.
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The new, recommended component for Excel (.xlsx or .xls) files that does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms - &lt;a href=&quot;javascript:DoLink(&apos;{14D98B18-C990-432C-834B-7026565E5ABF}&apos;)&quot;&gt;Excel Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For non-delimited textual data, use &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>19.1.0.1864</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>#temp := File_name;
expand(&apos;_&apos;,#temp);

Channel := #temp[1];
Row := #temp[2];
Col := integer(#temp[3]);
Field := #temp[4];
</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>990 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.JoinProperties.1">
								<sci:component name="Join Data from File" version="2">
									<sci:arg name="JoinUsing" type="PropertyNameType" required="true" visibility="visible" multi="false">
										<sci:help>The name of the property that identifies which records to join. When a record in the source 
file has the same value for this property as the incoming streaming data record, its properties and child 
nodes are added to the streaming record. Calculable properties can be used for the streaming data, but 
data in the source file must already contain stored properties to join.

If you provide a comma-separated 
list of property names, then by default all values must match. (You can control this behavior by changing 
JoinUsingListType.) Or, if you provide a property that is an array of values, then all values must match 
(and the source must provide the data in an array-based form.)</sci:help>
										<sci:member>JoinUsingListType</sci:member>
										<sci:member>IgnoreCase</sci:member>
										<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
										<sci:member>JoinPropertyType</sci:member>
										<sci:value>Row,Col</sci:value>
									</sci:arg>
									<sci:arg name="JoinUsingListType" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: Join using only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: Joins using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;</sci:help>
										<sci:legalval>UseFirstDefinedValue</sci:legalval>
										<sci:legalval selected="true">UseAllValues</sci:legalval>
									</sci:arg>
									<sci:arg name="JoinPropertyType" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The data type of the join property</sci:help>
										<sci:legalval>IsNumeric</sci:legalval>
										<sci:legalval selected="true">IsText</sci:legalval>
										<sci:legalval>IsDate</sci:legalval>
									</sci:arg>
									<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &quot;JoinUsing&quot; propety values</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set JoinPropertyType to IsText&apos;);
Parameter(&apos;JoinPropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>Names of data files or a learned model, to join with the streaming data that enters this component. If multiple files are given, each is joined in sequence. (The Windows browser reverses the order of the files during selection, so you should select from last to first.)</sci:help>
										<sci:member>SourceFormat</sci:member>
										<sci:member>Keep Properties</sci:member>
										<sci:value>$(Plate_map)</sci:value>
									</sci:arg>
									<sci:arg name="SourceFormat" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The name of the reader to use for the join source. (For readers with particular parameters, you can create them and save them, then add their name to the options list for this protocol.  For example, you could create a Delimited Text with Commas and No Column Names component, save it to your tab, then add it to this list and select.)
&lt;p&gt;
Note: When SourceFormat is a format with no column names, you must use property names of the form &quot;Column1&quot;, &quot;Column2&quot;, etc. in the JoinUsing parameter.</sci:help>
										<sci:legalval>Delimited Text With Column Names</sci:legalval>
										<sci:legalval>Delimited Text No Column Names</sci:legalval>
										<sci:legalval>Comma Delimited With Column Names</sci:legalval>
										<sci:legalval>Tab Delimited With Column Names</sci:legalval>
										<sci:legalval>Space Delimited With Column Names</sci:legalval>
										<sci:legalval selected="true">Excel XLS With Column Names</sci:legalval>
										<sci:legalval>Excel XLS No Column Names</sci:legalval>
										<sci:legalval>MDL SD Format</sci:legalval>
										<sci:legalval>SYBYL Mol2 Format</sci:legalval>
										<sci:legalval>Learned Model Reader</sci:legalval>
									</sci:arg>
									<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
										<sci:help>A list of properties to join from the source file. If this value is not defined, all properties are joined into the record.</sci:help>
									</sci:arg>
									<sci:arg name="Join Behavior" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:member>JoinOnto</sci:member>
										<sci:member>WhenJoiningOnto</sci:member>
										<sci:member>JoinAllNullString</sci:member>
										<sci:member>MultipleReferenceBehavior</sci:member>
										<sci:member>AppendNodes</sci:member>
									</sci:arg>
									<sci:arg name="JoinOnto" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Indicates which data record will be output:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;ProcessData&lt;/i&gt;: The data streaming through the pipeline remains with properties and child nodes from the source file copied onto the record.
&lt;li&gt;&lt;i&gt;Reference&lt;/i&gt;: The data from the source file remains with properties and child nodes from the streaming data record copied onto the record.  Only data records that successfully join against the incoming data stream will be output.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">ProcessData</sci:legalval>
										<sci:legalval>Reference</sci:legalval>
									</sci:arg>
									<sci:arg name="WhenJoiningOnto" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;During the joining of two property lists, this parameter indicates how differences 
between the property lists are resolved.  
By default, the streaming input data (process data) serves 
as the base for a join and the source file data (reference data) is treated as the joining data (this 
distinction can be reversed using the &lt;i&gt;JoinOnto&lt;/i&gt; parameter).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: 
Copies all properties from the joining data onto the base data, overwriting the values of any properties 
that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from 
the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: 
Copies only those properties from the joining data to the base data that do not already exist on the 
base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already 
exists in the base data is appended  (as an array) to the value in the base property.  The other joining 
properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: 
The value of a joining property that already exists in the base data is appended  (as an array) to the 
value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;GroupData&lt;/i&gt;: 
Creates a hierarchical group containing both the joining and base data.
&lt;/ul&gt;</sci:help>
										<sci:legalval>OverwriteOrCreate</sci:legalval>
										<sci:legalval>OverwriteExisting</sci:legalval>
										<sci:legalval>CreateIfNew</sci:legalval>
										<sci:legalval selected="true">AppendOrCreate</sci:legalval>
										<sci:legalval>AppendExisting</sci:legalval>
										<sci:legalval>GroupData</sci:legalval>
									</sci:arg>
									<sci:arg name="AppendNodes" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>When joining data records that contain child nodes, whether to append the child nodes of the joining data onto the base data as determined by the &lt;i&gt;JoinOnto&lt;/i&gt; parameter.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="MultipleReferenceBehavior" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;What to do if there are multiple records in the source file (reference data) with 
a matching value for the &lt;i&gt;JoinUsing&lt;/i&gt; property of an incoming streaming record.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;JoinFirst&lt;/i&gt;: 
Uses the first one found. 
&lt;li&gt;&lt;i&gt;JoinLast&lt;/i&gt;: Uses the last one found. 
&lt;li&gt;&lt;i&gt;JoinAll&lt;/i&gt;: 
Appends all values for each property together in an array. 
&lt;li&gt;&lt;i&gt;JoinTogether&lt;/i&gt;: 
Joins each of the matching records in the source file with the streaming record individually and independently, 
which results in multiple records output for one input record.
&lt;/ul&gt;</sci:help>
										<sci:legalval>JoinFirst</sci:legalval>
										<sci:legalval>JoinLast</sci:legalval>
										<sci:legalval>JoinAll</sci:legalval>
										<sci:legalval selected="true">JoinTogether</sci:legalval>
									</sci:arg>
									<sci:arg name="JoinAllNullString" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;This string is used during append to pad out empty values when MultipleReferenceBehavior is set to  &quot;JoinAll&quot;. This keeps the generated arrays of values in sync for multiple references.&lt;/p&gt;
&lt;p&gt;The value &quot;None&quot; causes no padding to occur.&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Note&lt;/b&gt;: Missing values for a property in a delimited text file are represented as empty strings rather than null values.  These empty strings will act as placeholders in arrays but will not be replaced by the JoinAllNullString.&lt;/p&gt;</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MultipleReferenceBehavior to JoinAll&apos;);
Parameter(&apos;MultipleReferenceBehavior&apos;) eq &apos;JoinAll&apos;</sci:enabledscript>
										<sci:value>None</sci:value>
									</sci:arg>
									<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>Prefix</sci:member>
										<sci:member>UseIndexFile</sci:member>
										<sci:member>GroupName</sci:member>
									</sci:arg>
									<sci:arg name="Prefix" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A prefix to add to each property name as it is joined onto the streaming data (instead of overwriting or appending to the existing value).</sci:help>
									</sci:arg>
									<sci:arg name="UseIndexFile" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>An index file speeds up subsequent access to the same join source file. The options are:

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;None:&lt;/B&gt; 
Do not create or use an index file&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Next to Source:&lt;/B&gt; Create or 
use an index file that is next to your source file, with &quot;.idx&quot; appended to the filename&lt;/li&gt;
&lt;li&gt;&lt;b&gt;In 
User Directory:&lt;/B&gt; Create an index file that other processes by the same user can access. (This 
is in directory $(UserDir)/JoinIndices.)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;In System Directory:&lt;/B&gt; 
Create an index file that all users can access. (This is in directory $(SciTegicRoot)/JoinIndices.)&lt;/li&gt;
&lt;/UL&gt;</sci:help>
										<sci:legalval>None</sci:legalval>
										<sci:legalval>Next to Source</sci:legalval>
										<sci:legalval selected="true">In User Directory</sci:legalval>
										<sci:legalval>In System Directory</sci:legalval>
									</sci:arg>
									<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>If WhenJoiningOnto is set to &quot;GroupData&quot;, this is the name of the group node into which the results are placed</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenJoiningOnto to GroupData&apos;);
Parameter(&apos;WhenJoiningOnto&apos;) eq &apos;GroupData&apos;</sci:enabledscript>
										<sci:value>Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
										<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the JoinUsing property -- even 
non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  JoinPropertyType 
is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with 
a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a 
numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then 
records containing non-numeric strings for the JoinUsing property will be sent out the Fail port.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="UncompressZIPFiles" type="BoolType" required="true" visibility="nevershow" multi="false">
										<sci:help>Whether to uncompress ZIP files for speed</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Sep 13 07:04:37 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{D24316C3-9D5C-4B5D-ADF3-28F258F11858}</sci:value>
									</sci:arg>
									<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="nevershow" multi="false">
										<sci:help>Whether to perform a quick syntax check at the beginning of the file when we open it, and if a problem is found, throw an error.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="SourceComponent" type="ComponentType" required="false" visibility="nevershow" multi="false">
										<sci:help>Name of the data format of the Source file</sci:help>
										<sci:value>$(SourceFormat)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;JoinUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>if (strlength(trim(parameter(&apos;JoinUsing&apos;, 2))) &gt; 0) then
	&quot;Join on &quot; . trim(parameter(&apos;JoinUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Join Data from File</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>JOINNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1290 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Augments data records with properties from data in a file when specified property values match</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, a property value or set of values specified by 
&lt;i&gt;JoinUsing&lt;/i&gt; is used to identify matching records from &lt;i&gt;Source&lt;/i&gt;.  Properties 
from these records are added to the incoming data record.  If no match is found, the record is sent out 
the Fail port.&lt;/p&gt;

&lt;p&gt;Records match if the value of the &lt;i&gt;JoinUsing&lt;/i&gt; property 
is the same for the incoming record as in the file.  If multiple &lt;i&gt;JoinUsing&lt;/i&gt; properties 
are specified, the behavior depends on &lt;i&gt;JoinUsingListType&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;By default 
this component expects the source file to be delimited text with column names.  If the file is of a different 
format, you should change &lt;i&gt;SourceFormat&lt;/i&gt; accordingly.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;By 
default only properties are extracted from the matching records.  Use &lt;i&gt;JoinOnto&lt;/i&gt; to 
obtain additional information such as molecular data.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join 
Data from Cache&lt;/a&gt; to join against a data cache created using the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache 
Writer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records which match at least one record in the source file.</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which no match was found in the source file.</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.1.0.119</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>4</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Join Data from File</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>NOT Func RLIKE(&quot;CELLS&quot;)</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1590 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>6</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>FOREACH #PROP IN @PROPS LOOP
	property(#PROP) := globalproperty(#PROP);
END LOOP;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1890 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:connectid from="0" to="1" type="true"/>
							<sci:connectid from="1" to="2" type="true"/>
							<sci:connectid from="2" to="5" type="true"/>
							<sci:connectid from="5" to="4" type="true"/>
							<sci:connectid from="4" to="6" type="true"/>
							<sci:connectid from="6" to="3" type="true"/>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Local Shortcut" version="2">
							<sci:arg name="Controls" type="StringType" required="false" visibility="visible" multi="false">
								<sci:value>POS|NEG|Media</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval>False</sci:legalval>
								<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
								<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Generate KNN</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ReportSubProtocolNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7C5026B2-E5ED-4DED-B3E3-2ECB2E9FA7C1}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1590 -455</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
								<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.2.0.1267</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>50</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>6</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Processing Order</sci:help>
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="ByLocalReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Local Reference</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>Func RLIKE(&apos;POS|NEG|MEDIA&apos;)</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1290 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>19</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.MergeProperties.1">
								<sci:component name="Merge Data" version="2">
									<sci:arg name="MergeUsing" type="PropertyNameType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
										<sci:member>MergeUsingListType</sci:member>
										<sci:member>MergePropertyType</sci:member>
										<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
										<sci:member>IgnoreCase</sci:member>
										<sci:value>Func</sci:value>
									</sci:arg>
									<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:legalval>UseFirstDefinedValue</sci:legalval>
										<sci:legalval selected="true">UseAllValues</sci:legalval>
									</sci:arg>
									<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:legalval>IsNumeric</sci:legalval>
										<sci:legalval selected="true">IsText</sci:legalval>
										<sci:legalval>IsDate</sci:legalval>
										<sci:legalval>IsFingerprint</sci:legalval>
									</sci:arg>
									<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
										<sci:member>WhenMerging</sci:member>
										<sci:member>KeepAllNullString</sci:member>
										<sci:member>KeepAllPreferredNodeName</sci:member>
										<sci:member>PrefixUsingProperty</sci:member>
										<sci:member>Data Are Sorted</sci:member>
										<sci:legalval selected="true">KeepAll</sci:legalval>
										<sci:legalval>KeepFirst</sci:legalval>
									</sci:arg>
									<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
										<sci:legalval>OverwriteOrCreate</sci:legalval>
										<sci:legalval>OverwriteExisting</sci:legalval>
										<sci:legalval>CreateIfNew</sci:legalval>
										<sci:legalval selected="true">AppendOrCreate</sci:legalval>
										<sci:legalval>AppendExisting</sci:legalval>
									</sci:arg>
									<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
										<sci:value>None</sci:value>
									</sci:arg>
									<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
										<sci:value>Molecule</sci:value>
									</sci:arg>
									<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
									</sci:arg>
									<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;MergeUsing&lt;/i&gt; properties. If so, then the merge can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Sep 13 07:05:29 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;MergeUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>if (strlength(trim(parameter(&apos;MergeUsing&apos;, 2))) &gt; 0) then
	&quot;Merge on &quot; . trim(parameter(&apos;MergeUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Merge Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>JOINNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1590 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Merges properties of all data records that share the same key property value into a single data record</sci:value>
										<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property, which acts as an ID or index property.&lt;/p&gt;
&lt;p&gt;This component can be used to perform two types of operation:
&lt;ul&gt;
&lt;li&gt;Merge data records from multiple input streams. This combines properties from the multiple streams that are associated with the same index (i.e., &lt;i&gt;MergeUsing&lt;/i&gt;) property. Typically this will widen the data records with more properties and reduce the total number of data records.&lt;/li&gt;
&lt;li&gt;Merge data records from a single input stream to create array data. This maintains the number of properties but will reduce the number of records.&lt;/li&gt;
&lt;/ul&gt;
Note that these operations can occur simultaneously.
&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;
{2E21E16B-6901-46F3-8780-F14D3D7057CE}
&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records that contain the properties being used for merging</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records that do not contain the properties being used for merging</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.1.0.119</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
										<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>20</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.ComponentJavaPlugin.1">
								<sci:component name="XY Chart" version="2">
									<sci:arg name="Chart Data" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
										<sci:help>Defines groups of Data Series for the chart. There is no limit to the number of Data Series you can have. Use this parameter to add, remove and reorder data series in the chart.</sci:help>
										<sci:member>Data Series 1</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Settings for the Data Series to be plotted. You can add additional Data Series using &lt;i&gt;Chart Data&lt;/i&gt;.</sci:help>
										<sci:member>Data Series 1 Links and Actions</sci:member>
										<sci:member>Data Series 1 X Property</sci:member>
										<sci:member>Data Series 1 Y Property</sci:member>
										<sci:member>Data Series 1 Symbols and Lines</sci:member>
										<sci:member>Data Series 1 Data Options</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1 X Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The name of a property on the data stream, or calculable property, to plot against the X axis.</sci:help>
										<sci:value>PC1</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 1 Y Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The name of a property on the data stream, or calculable property, to plot against the Y axis. Multiple Y properties can be supplied with a comma-delimited list of property names.</sci:help>
										<sci:value>PC2</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Various data options for the data series.</sci:help>
										<sci:member>Data Series 1 Data Options Error Bar</sci:member>
										<sci:member>Data Series 1 Data Options Y Axis for Plot</sci:member>
										<sci:member>Data Series 1 Data Options Regression Line</sci:member>
										<sci:member>Data Series 1 Data Options Regression Line Expression</sci:member>
										<sci:member>Data Series 1 Data Options Label</sci:member>
										<sci:member>Data Series 1 Data Options Legend Text</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Error Bar" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional parameter that is a property, or a PilotScript expression, providing values that describe the magnitude of error bars shown on individual bars. Any calculable properties must be calculated upstream.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Y Axis for Plot" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Select which Y axis to plot against (Y Axis or Second Y Axis).</sci:help>
										<sci:legalval selected="true">Y Axis</sci:legalval>
										<sci:legalval>Second Y Axis</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Regression Line" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;The type of regression line to draw in the chart.  If &quot;Custom&quot;, then the value of the &quot;Regression Line Expression&quot; parameter will be used to identify records whose values will be used to plot a regression line. If &quot;Power&quot;, then all data points need to have positive values, otherwise the regression line will not be drawn.</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Linear</sci:legalval>
										<sci:legalval>Power</sci:legalval>
										<sci:legalval>Custom</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Regression Line Expression" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;A PilotScript expression that evaluates to True for any data points that should be counted as part of a custom regression line.  This parameter is ignored unless the Regression Line parameter&apos;s value is &quot;Custom.&quot;&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:validscript>regressionLineParameterName := StrReplace(ParameterName(), &quot;Regression Line Expression&quot;, &quot;Regression Line&quot;);
valid := Parameter(regressionLineParameterName) ne &apos;Custom&apos; OR Parameter() ne &apos;&apos;;
if (not valid) then
     SetInvalidDetails(&apos;This parameter is required when Regression Line is set to &quot;Custom&quot;&apos;);
End if;
valid;</sci:validscript>
										<sci:enabledscript>regressionLineParameterName := StrReplace(ParameterName(), &quot;Regression Line Expression&quot;, &quot;Regression Line&quot;);
enabled := Parameter(regressionLineParameterName) eq &apos;Custom&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Regression Line is set to &quot;Custom&quot;&apos;);
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Label" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;The name of a property on the data stream, or a PilotScript expression, that will be displayed as a label next to each point in the chart.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Legend Text" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
										<sci:help>&lt;p&gt;Text to be displayed in the legend. If &lt;i&gt;Y Property&lt;/i&gt; contains a single entry, then the specified string is used as the legend. If &lt;i&gt;Y Property&lt;/i&gt; contains multiple entries then this parameter should contain a comma-separated list of strings to be used as legends. If this parameter is left blank, or the number of comma-separated strings is less than the number of &lt;i&gt;Y Property&lt;/i&gt; entries then a default legend text will be supplied.&lt;/p&gt;</sci:help>
										<sci:value>Func</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Symbol and line attributes for the data series.</sci:help>
										<sci:member>Data Series 1 Symbols and Lines Symbol Type</sci:member>
										<sci:member>Data Series 1 Symbols and Lines Symbol Size</sci:member>
										<sci:member>Data Series 1 Symbols and Lines Symbol Color</sci:member>
										<sci:member>Data Series 1 Symbols and Lines Symbol Fill Pattern</sci:member>
										<sci:member>Data Series 1 Symbols and Lines Line Type</sci:member>
										<sci:member>Data Series 1 Symbols and Lines Line Thickness</sci:member>
										<sci:member>Data Series 1 Symbols and Lines Line Color</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Symbol Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the symbol type to use.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different symbol type for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a symbol type value or an expression defining a symbol type. A symbol type can be one of the predefined strings:
&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;li&gt;Square&lt;/li&gt;
&lt;li&gt;Circle&lt;/li&gt;
&lt;li&gt;Triangle&lt;/li&gt;
&lt;li&gt;Inverted Triangle&lt;/li&gt;
&lt;li&gt;Diamond&lt;/li&gt;
&lt;li&gt;Cross&lt;/li&gt;
&lt;li&gt;Star&lt;/li&gt;
&lt;li&gt;Burst&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

</sci:help>
										<sci:legalval>None</sci:legalval>
										<sci:legalval>Square</sci:legalval>
										<sci:legalval selected="true">Circle</sci:legalval>
										<sci:legalval>Triangle</sci:legalval>
										<sci:legalval>Inverted Triangle</sci:legalval>
										<sci:legalval>Diamond</sci:legalval>
										<sci:legalval>Cross</sci:legalval>
										<sci:legalval>Star</sci:legalval>
										<sci:legalval>Burst</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Symbol Size" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the symbol size. The entered value will be used as the number of pixels in the radius of the symbol.  If the parameter is not specified the default symbol size of 6.0 is used. &lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can create bubble charts where the size of each data point reflects a meaningful aspect of the data by changing the parameter type to ExpressionType and typing an expression evaluating to a double value. If the expression is evaluated to a negative value, a symbol size of zero is used (no symbol is drawn).&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:value>6.0</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Symbol Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the symbol and error bar color.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different color for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a color value or an expression defining a color.  There are three ways to specify colors for the property or expression:
&lt;ul&gt;&lt;li&gt;Strings, e.g., Red or Blue.&lt;/li&gt;
&lt;li&gt;RGB (reg-green-blue) color values (as hexadecimal values), prefixed with a &apos;#&apos; symbol.  For example, to specify the color Red, use &lt;code&gt;#FF0000&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Integer index values that correspond to the default order of colors from the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/default_color_table.htm&apos;)&quot;&gt;Default Color Table&lt;/a&gt;. For example, to specify Yellow, use 4 (i.e., Yellow is the fourth entry in the table).&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Symbol Fill Pattern" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies the symbol fill pattern to use.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different symbol fill pattern for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a symbol fill pattern value or an expression defining a symbol fill pattern. A symbol fill pattern can be one of the predefined strings:
&lt;ul&gt;
&lt;li&gt;Gradient&lt;/li&gt;
&lt;li&gt;Solid&lt;/li&gt;
&lt;li&gt;Open&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:legalval>Solid</sci:legalval>
										<sci:legalval selected="true">Gradient</sci:legalval>
										<sci:legalval>Open</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Line Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the line type for the data.</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Solid</sci:legalval>
										<sci:legalval>Dotted</sci:legalval>
										<sci:legalval>Dashed</sci:legalval>
										<sci:legalval>Dot-dash</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Line Thickness" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the thickness of line.</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;specifies the color of the line.</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Links and Actions options for the data series.</sci:help>
										<sci:member>Data Series 1 Links and Actions Link</sci:member>
										<sci:member>Data Series 1 Links and Actions Protocol Link</sci:member>
										<sci:member>Data Series 1 Links and Actions HTML Attributes</sci:member>
										<sci:member>Data Series 1 Links and Actions Tooltip</sci:member>
										<sci:member>Data Series 1 Links and Actions Link Options</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions Link" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
										<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to a link for each data point on the chart. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
	&lt;ul&gt;
	&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
	&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
	&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same link will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:enabledscript>protocolLinkParameterName := StrReplace(ParameterName(), &quot;Actions Link&quot;, &quot;Actions Protocol Link&quot;);
enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies a link that runs a protocol for each data point on the chart. Editing this parameter opens up the Protocol Link Dialog.
&lt;/p&gt;
&lt;p&gt;
Note: if Y Property contains more than one entry, the same protocol link will be assigned to relevant chart entries of all Y Properties.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If Y Property contains more than one entry, the same protocol link will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:enabledscript>linkParameterName := StrReplace(ParameterName(), &quot;Protocol Link&quot;, &quot;Link&quot;);
enabled := Parameter(linkParameterName) eq &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies how to display pages linked to data points. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the data series.
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;An optional property name, or PilotScript expression evaluating to a string, that will be displayed as a tooltip when the mouse hovers over a data point in the chart.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same tooltip will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Defines attributes for one point on the chart. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same attributes will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies attributes to be applied to the whole chart.</sci:help>
										<sci:member>Chart Options Title</sci:member>
										<sci:member>Chart Options Format</sci:member>
										<sci:member>Chart Options Position</sci:member>
										<sci:member>Chart Options Chart Output</sci:member>
										<sci:member>Chart Options Force One Series per Data Record</sci:member>
										<sci:member>Chart Options Make Scriptable</sci:member>
										<sci:member>Chart Options Display Options</sci:member>
										<sci:member>Chart Options Links and Actions</sci:member>
										<sci:member>Chart Options Display Type</sci:member>
									</sci:arg>
									<sci:arg name="Chart Options Title" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Title for the chart.&lt;/p&gt;</sci:help>
										<sci:value>$(Data Series 1 Y Property) vs. $(Data Series 1 X Property)</sci:value>
									</sci:arg>
									<sci:arg name="Chart Options Format" type="FormatType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.General</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Chart Options Position" type="PositionType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
										<sci:value>600</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.General</sci:value>
										<sci:value>Width</sci:value>
										<sci:value>400.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>Height</sci:value>
										<sci:value>300.0</sci:value>
										<sci:value>Pixels</sci:value>
									</sci:arg>
									<sci:arg name="Chart Options Display Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the chart display format.  This can be either interactive or a static image. If the &lt;i&gt;Default&lt;/i&gt; option is selected then the server default setting as specified by the &lt;i&gt;DefaultChartDisplayType&lt;/i&gt; global in the Admin portal is used.
</sci:help>
										<sci:legalval selected="true">Default</sci:legalval>
										<sci:legalval>Interactive</sci:legalval>
										<sci:legalval>Image</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Chart Output" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Controls how data records are plotted in charts:
&lt;ul&gt;&lt;li&gt;If set to &quot;One Chart for All Data Records&quot; then all data records will be plotted in a single chart.&lt;/li&gt;
&lt;li&gt;If set to &quot;One Chart for Each Data Record&quot; then each data record will be plotted in a separate chart.  Use this when you want to create a chart for each row of a table.  Note that with the &quot;One Chart for Each Data Record&quot; setting, this applies to all Data Series specified including any non-array data series.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">One Chart for All Data Records</sci:legalval>
										<sci:legalval>One Chart for Each Data Record</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Force One Series per Data Record" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Use this parameter to force each data record to be treated as separate data series. That is, when you want the values for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; in each data record to be treated as independent data series, so that they can be colored or sized differently, or use different symbols. This is typically done when &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; contain array data.
&lt;p&gt;Note that the effect of treating the data as separate data series will happen automatically if the first data record has array data, irrespective of the value for &lt;i&gt;Force One Series per Data Record&lt;/i&gt;. But if the first data record has single values for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; (whether of type array or not), then this parameter must be set to &lt;b&gt;True&lt;/b&gt; to force the data to be treated as separate data series. A typical use case is when the first data record has single values for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; but subsequent data records have array data.
&lt;ul&gt;&lt;li&gt;&lt;b&gt;False:&lt;/b&gt; The number of values of for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; determines whether each record creates a new data series.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;True:&lt;/b&gt; Each data record always creates a separate data series.&lt;/li&gt;&lt;/ul&gt;</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Make Scriptable" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>&lt;p&gt;Enables this chart for use with the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;Scriptable Charts API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When this parameter is sent to true, all properties on the data stream will be stored in the chart for use with the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;Scriptable Charts API&lt;/a&gt;.  If the data stream contains properties that should not be included, you can specify which properties to keep by placing a &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt; component upstream of the chart.&lt;/p&gt;
&lt;p&gt;NOTE: Making the chart Scriptable will force the &apos;Display Type&apos; to become &apos;Interactive&apos;.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Display options for the whole chart.</sci:help>
										<sci:member>Chart Options Display Options Show Legend</sci:member>
										<sci:member>Chart Options Display Options Legend Format</sci:member>
										<sci:member>Chart Options Display Options Show Horizontal Gridlines</sci:member>
										<sci:member>Chart Options Display Options Show Vertical Gridlines</sci:member>
										<sci:member>Chart Options Display Options Plot Region Color</sci:member>
										<sci:member>Chart Options Display Options Plot Region Transparency</sci:member>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Show Legend" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Show/Hide the legend.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Legend Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:help>&lt;p&gt;Formatting to be applied to the chart legend.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.  You can also set the Background and Border Color of the legend.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.Legend</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Show Horizontal Gridlines" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Show/Hide Horizontal Gridlines.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Show Vertical Gridlines" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Show/Hide Vertical Gridlines.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Plot Region Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Apply a background color to the plot.</sci:help>
										<sci:value>White</sci:value>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Plot Region Transparency" type="DoubleType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;A transparency for rendering the plot region. Legal values are between 0.0 (fully transparent) and 1.0 (fully opaque). The default is 1.0. 

&lt;p&gt;This options is not currently supported for PDF reports.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;The value has to be between 0.0 and 1.0&apos;);
Parameter() &gt;= 0.0 AND Parameter() &lt;= 1.0</sci:validscript>
										<sci:value>1.0</sci:value>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:member>Chart Options Links and Actions Link</sci:member>
										<sci:member>Chart Options Links and Actions Link Target</sci:member>
										<sci:member>Chart Options Links and Actions HTML Attributes</sci:member>
										<sci:member>Chart Options Links and Actions Data Connector</sci:member>
										<sci:member>Chart Options Links and Actions Protocol Link</sci:member>
										<sci:member>Chart Options Links and Actions Link Options</sci:member>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Link" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;An optional parameter specifying a link for the reporting element produced by this component. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
&lt;ul&gt;
&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Example:&lt;/b&gt;
To create a link from a combination of a property and static text, create a valid PilotScript expression. For example, if you have internal web pages linking to research projects that have addresses of the form: &lt;i&gt;http://mydomain.com/ProjectID&lt;/i&gt;, where &lt;i&gt;ProjectID&lt;/i&gt; is the actual project ID, and also a local property on the datastream, you would use:
&lt;p&gt;&lt;code&gt;&apos;http://mydomain.com&apos; . ProjectID&lt;/code&gt;
&lt;p&gt;as the value for &lt;i&gt;Link&lt;/i&gt;.</sci:help>
										<sci:enabledscript>prefixLength := StringLen(&apos;Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
protocolLinkParameterName := prefix.&apos;Protocol Link&apos;;
enabled := true;
if (parameter(protocolLinkParameterName) is Defined ) then 
	enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
	End if;
end if;	
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies a link that runs a protocol.  Editing this parameter opens up the Protocol Link Dialog.&lt;/p&gt;</sci:help>
										<sci:enabledscript>prefixLength := StringLen(&apos;Protocol Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
linkParameterName := prefix.&apos;Link&apos;;
enabled := true;
if (parameter(linkParameterName) is Defined ) then 
	enabled := Parameter(linkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
	End if;
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies how to display pages linked to the reporting element. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the component.</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Link Target" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
										<sci:member>Chart Options Links and Actions Data Connector Subscriber Event Handling</sci:member>
										<sci:member>Chart Options Links and Actions Data Connector Publisher Subscriber Model</sci:member>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Data Connector Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
										<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
										<sci:legalval>Publisher</sci:legalval>
										<sci:legalval>Subscriber</sci:legalval>
										<sci:legalval>None</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Data Connector Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
										<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalval selected="true">Highlight</sci:legalval>
										<sci:legalval>Filter</sci:legalval>
										<sci:legalval>Reverse Filter</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Attributes of the X axis.</sci:help>
										<sci:member>X Axis Minimum</sci:member>
										<sci:member>X Axis Maximum</sci:member>
										<sci:member>X Axis Scaling</sci:member>
										<sci:member>X Axis Orientation</sci:member>
										<sci:member>X Axis Label</sci:member>
										<sci:member>X Axis Label Format</sci:member>
										<sci:member>X Axis Display Options</sci:member>
										<sci:member>X Axis Line Color</sci:member>
										<sci:member>X Axis Tickmark Options</sci:member>
									</sci:arg>
									<sci:arg name="X Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the lower bound of the X axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
									</sci:arg>
									<sci:arg name="X Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the upper bound of the X axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
									</sci:arg>
									<sci:arg name="X Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Scaling for X axis.</sci:help>
										<sci:legalval selected="true">Linear</sci:legalval>
										<sci:legalval>Logarithmic - base 10</sci:legalval>
										<sci:legalval>Logarithmic - natural</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Orientation" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Orientation of the X Axis. Set to &quot;Inverted&quot; to reverse the axis, so that values decrease along the axis from left to right.</sci:help>
										<sci:legalval selected="true">Normal</sci:legalval>
										<sci:legalval>Inverted</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Label for the X axis.</sci:help>
									</sci:arg>
									<sci:arg name="X Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.Axis Label</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="X Axis Display Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:help>&lt;p&gt;Display options for the X-Axis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Show Axis Line - Show/Hide the axis line.&lt;/li&gt;
&lt;li&gt; Show Axis Label - Show/Hide the axis label.&lt;/li&gt;
&lt;li&gt; Show Tickmark Labels - Show/Hide the tickmark labels.&lt;/li&gt;
&lt;ul&gt;</sci:help>
										<sci:legalval selected="true">Show Axis Line</sci:legalval>
										<sci:legalval selected="true">Show Axis Label</sci:legalval>
										<sci:legalval selected="true">Show Tickmark Labels</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Options for &lt;i&gt;X Axis&lt;/i&gt; tickmark labels.</sci:help>
										<sci:member>X Axis Tickmark Options Tickmark Label Type</sci:member>
										<sci:member>X Axis Tickmark Options Tickmark Label Format</sci:member>
										<sci:member>X Axis Tickmark Options Tickmark Label Orientation</sci:member>
										<sci:member>X Axis Tickmark Options Major Tickmark Start Value</sci:member>
										<sci:member>X Axis Tickmark Options Major Tickmark Spacing</sci:member>
									</sci:arg>
									<sci:arg name="X Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="X Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Spacing of major tickmarks.&lt;/p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;This option currently does not apply to DateTime type tickmarks.
</sci:help>
									</sci:arg>
									<sci:arg name="X Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
										<sci:legalval selected="true">Based on Input Data</sci:legalval>
										<sci:legalval>Double</sci:legalval>
										<sci:legalval>Integer</sci:legalval>
										<sci:legalval>DateTime</sci:legalval>
										<sci:legalval>Date</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;X Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;Default - use the date and time format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Date:
&lt;ul&gt;
&lt;li&gt;Default - use the date format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) NE &apos;Based on Input Data&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Date&apos;) then
	 resize(legalvalues, 6);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;13/06/1960&apos;;
	legalvalues[4] := &apos;06/13/60&apos;;
	legalvalues[5] := &apos;13/06/60&apos;;
	legalvalues[6] := &apos;June 13, 1960&apos;; 
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
										<sci:legalval selected="true">Default</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
										<sci:legalval selected="true">Horizontal</sci:legalval>
										<sci:legalval>Vertical</sci:legalval>
										<sci:legalval>Diagonal</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the color of the X axis line.</sci:help>
										<sci:value>Gainsboro</sci:value>
									</sci:arg>
									<sci:arg name="Y Axis" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Attributes for the left Y axis</sci:help>
										<sci:member>Y Axis Minimum</sci:member>
										<sci:member>Y Axis Maximum</sci:member>
										<sci:member>Y Axis Scaling</sci:member>
										<sci:member>Y Axis Orientation</sci:member>
										<sci:member>Y Axis Label</sci:member>
										<sci:member>Y Axis Label Format</sci:member>
										<sci:member>Y Axis Display Options</sci:member>
										<sci:member>Y Axis Line Color</sci:member>
										<sci:member>Y Axis Tickmark Options</sci:member>
									</sci:arg>
									<sci:arg name="Y Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the lower bound of the Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
									</sci:arg>
									<sci:arg name="Y Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the upper bound of the Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
									</sci:arg>
									<sci:arg name="Y Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Scaling for Y axis.</sci:help>
										<sci:legalval selected="true">Linear</sci:legalval>
										<sci:legalval>Logarithmic - base 10</sci:legalval>
										<sci:legalval>Logarithmic - natural</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Orientation" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Orientation of the Y Axis. Set to &quot;Inverted&quot; to reverse the axis, so that values decrease vertically up the axis from bottom to top.</sci:help>
										<sci:legalval selected="true">Normal</sci:legalval>
										<sci:legalval>Inverted</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Label for the Y axis.</sci:help>
									</sci:arg>
									<sci:arg name="Y Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.Axis Label</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Y Axis Display Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:help>&lt;p&gt;Display options for the Y-Axis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Show Axis Line - Show/Hide the axis line.&lt;/li&gt;
&lt;li&gt; Show Axis Label - Show/Hide the axis label.&lt;/li&gt;
&lt;li&gt; Show Tickmark Labels - Show/Hide the tickmark labels.&lt;/li&gt;
&lt;ul&gt;</sci:help>
										<sci:legalval>Show Axis Line</sci:legalval>
										<sci:legalval selected="true">Show Axis Label</sci:legalval>
										<sci:legalval selected="true">Show Tickmark Labels</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Options for &lt;i&gt;Y Axis&lt;/i&gt; tickmark labels.</sci:help>
										<sci:member>Y Axis Tickmark Options Major Tickmark Start Value</sci:member>
										<sci:member>Y Axis Tickmark Options Major Tickmark Spacing</sci:member>
										<sci:member>Y Axis Tickmark Options Tickmark Label Orientation</sci:member>
										<sci:member>Y Axis Tickmark Options Tickmark Label Type</sci:member>
										<sci:member>Y Axis Tickmark Options Tickmark Label Format</sci:member>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Spacing of major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
										<sci:legalval selected="true">Based on Input Data</sci:legalval>
										<sci:legalval>Double</sci:legalval>
										<sci:legalval>Integer</sci:legalval>
										<sci:legalval>DateTime</sci:legalval>
										<sci:legalval>Date</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;Y Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;Default - use the date and time format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Date:
&lt;ul&gt;
&lt;li&gt;Default - use the date format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) NE &apos;Based on Input Data&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Date&apos;) then
	 resize(legalvalues, 6);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;13/06/1960&apos;;
	legalvalues[4] := &apos;06/13/60&apos;;
	legalvalues[5] := &apos;13/06/60&apos;;
	legalvalues[6] := &apos;June 13, 1960&apos;; 
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
										<sci:legalval selected="true">Default</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
										<sci:legalval selected="true">Horizontal</sci:legalval>
										<sci:legalval>Vertical</sci:legalval>
										<sci:legalval>Diagonal</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the color of the Y axis line.</sci:help>
										<sci:value>Gainsboro</sci:value>
									</sci:arg>
									<sci:arg name="Second Y Axis" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Attributes for the right Y axis</sci:help>
										<sci:member>Second Y Axis Minimum</sci:member>
										<sci:member>Second Y Axis Maximum</sci:member>
										<sci:member>Second Y Axis Scaling</sci:member>
										<sci:member>Second Y Axis Label</sci:member>
										<sci:member>Second Y Axis Label Format</sci:member>
										<sci:member>Second Y Axis Display Options</sci:member>
										<sci:member>Second Y Axis Line Color</sci:member>
										<sci:member>Second Y Axis Tickmark Options</sci:member>
									</sci:arg>
									<sci:arg name="Second Y Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the lower bound of the right Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
									</sci:arg>
									<sci:arg name="Second Y Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the upper bound of the right Y axis. If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
									</sci:arg>
									<sci:arg name="Second Y Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Scaling for the right Y axis.</sci:help>
										<sci:legalval selected="true">Linear</sci:legalval>
										<sci:legalval>Logarithmic - base 10</sci:legalval>
										<sci:legalval>Logarithmic - natural</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Label for the right Y axis.</sci:help>
									</sci:arg>
									<sci:arg name="Second Y Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.Axis Label</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Second Y Axis Display Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:help>&lt;p&gt;Display options for the Second Y-Axis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Show Axis Line - Show/Hide the axis line.&lt;/li&gt;
&lt;li&gt; Show Axis Label - Show/Hide the axis label.&lt;/li&gt;
&lt;li&gt; Show Tickmark Labels - Show/Hide the tickmark labels.&lt;/li&gt;
&lt;ul&gt;</sci:help>
										<sci:legalval>Show Axis Line</sci:legalval>
										<sci:legalval selected="true">Show Axis Label</sci:legalval>
										<sci:legalval selected="true">Show Tickmark Labels</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Options for &lt;i&gt;Second Y Axis&lt;/i&gt; tickmark labels.</sci:help>
										<sci:member>Second Y Axis Tickmark Options Major Tickmark Start Value</sci:member>
										<sci:member>Second Y Axis Tickmark Options Major Tickmark Spacing</sci:member>
										<sci:member>Second Y Axis Tickmark Options Tickmark Label Orientation</sci:member>
										<sci:member>Second Y Axis Tickmark Options Tickmark Label Type</sci:member>
										<sci:member>Second Y Axis Tickmark Options Tickmark Label Format</sci:member>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Spacing of major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
										<sci:legalval selected="true">Based on Input Data</sci:legalval>
										<sci:legalval>Double</sci:legalval>
										<sci:legalval>Integer</sci:legalval>
										<sci:legalval>DateTime</sci:legalval>
										<sci:legalval>Date</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;Second Y Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;Default - use the date and time format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Date:
&lt;ul&gt;
&lt;li&gt;Default - use the date format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) EQ &apos;Based on Input Data&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Date&apos;) then
	 resize(legalvalues, 6);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;13/06/1960&apos;;
	legalvalues[4] := &apos;06/13/60&apos;;
	legalvalues[5] := &apos;13/06/60&apos;;
	legalvalues[6] := &apos;June 13, 1960&apos;; 
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
										<sci:legalval selected="true">Default</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
										<sci:legalval selected="true">Horizontal</sci:legalval>
										<sci:legalval>Vertical</sci:legalval>
										<sci:legalval>Diagonal</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the color of the right Y axis line.</sci:help>
										<sci:value>Gainsboro</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
										<sci:member>Column Settings Header Text</sci:member>
										<sci:member>Column Settings Header Format</sci:member>
										<sci:member>Column Settings Header Position</sci:member>
										<sci:member>Column Settings Cell Format</sci:member>
										<sci:member>Column Settings Cell Position</sci:member>
									</sci:arg>
									<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
									</sci:arg>
									<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
									</sci:arg>
									<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true" expanded="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
										<sci:value>REPORTCHARTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1590</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true" expanded="true">
										<sci:value>100</sci:value>
										<sci:value>Creates an XY plot for a report</sci:value>
										<sci:value>&lt;p&gt;Displays data as points and/or lines. Each incoming data record represents a single point for a given dataset. Multiple data series (i.e., &lt;em&gt;Data Series 1&lt;/em&gt;, &lt;em&gt;Data Series 2&lt;/em&gt;, etc.) can use distinct formatting. The chart as a whole and the individual axes are also customizable.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;X Property&lt;/i&gt; is the property containing the X data values. &lt;i&gt;Y Property&lt;/i&gt; is the property containing the Y data values. You can specify multiple Y properties for a given Data Series, as described below.&lt;/p&gt;

&lt;p&gt;To plot multiple datasets in a single chart, add additional Data Series using &lt;i&gt;Chart Data&lt;/i&gt; and specify an &lt;em&gt;X Property&lt;/em&gt; and &lt;em&gt;Y Property&lt;/em&gt; for &lt;em&gt;Data Series 1&lt;/em&gt; and &lt;em&gt;Data Series 2&lt;/em&gt;, etc. This allows you to control formatting options individually for each data series. Alternatively, you can enter multiple properties as a comma-separated list in &lt;em&gt;Y Property&lt;/em&gt; for a given Data Series. In this case, the same formatting is applied to each data property.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Data Series n&lt;/i&gt;: Specifies data properties and formatting options that control the particular data series.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Chart Options&lt;/i&gt;: Options that control the whole chart, such as &lt;i&gt;Title&lt;/i&gt; and various &lt;i&gt;Display Options&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;X Axis&lt;/i&gt;: Options that control the look and feel of the X Axis.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Y Axis&lt;/i&gt;: Options that control the look and feel of the Y Axis.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Second Y Axis&lt;/i&gt;: Options that control the look and feel of a second Y Axis, displayed on the right side of the chart, when any Data Series is specified to be plotted against it.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Column Settings&lt;/i&gt;: Options to control how the chart appears inside a table.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;em&gt;Chart Options&lt;/em&gt; &gt; &lt;em&gt;Chart Output&lt;/em&gt;, you can specify if all data records are plotted in a single chart or in a separate chart for each data record, (e.g., to plot array data as a chart in each table row). Array data is not required.&lt;/li&gt;
&lt;li&gt;To add additional Data Series, right-click the component to enter edit mode, and copy and paste one of the existing Data Series. Any values assigned to parameters are also copied.&lt;/li&gt;
&lt;li&gt;To display some of your data in unique way, you can add Canvas Elements to an XY Chart. You can only pipe a Canvas Element into the chart when the &lt;em&gt;Display Type&lt;/em&gt; is set to &quot;Image&quot;. &lt;/li&gt;
&lt;li&gt;To enable the &lt;A href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;Scriptable Charts API&lt;/A&gt; for this chart, set &lt;em&gt;Chart Options&lt;/em&gt; &gt; &lt;em&gt;Make Scriptable&lt;/em&gt; to &quot;True&quot;. &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_charts.pdf&apos;)&quot;&gt;Chart Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_canvas.pdf&apos;)&quot;&gt;Canvas Elements Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>A data record representing the chart is sent to the pass port.</sci:value>
										<sci:value>None</sci:value>
										<sci:value>The input data records are all sent to the fail port.</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Plug In</sci:value>
									</sci:arg>
									<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
										<sci:value>Chart Options Format</sci:value>
										<sci:value>Chart Options Links and Actions Link Options</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/report</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
									<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>DrainTopDown</sci:value>
									</sci:arg>
									<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
										<sci:value>com.scitegic.report.component.chart.XYPlotComponent</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Sep 14 11:06:16 2017</sci:value>
									</sci:arg>
									<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>scitegic/report</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>21</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>{DDD69C6F-63BC-41c0-8320-86BE1D88E458}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>XY Chart</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>1890 -95</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Reporting and Visualization\Reporting\Charts\XY Chart</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="R Principal Components Analysis" version="2">
									<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The properties to use.
  &apos;AllPropertiesOnFirstData&apos; uses all those that are found
on the first data object;
  &apos;CalculablePropertiesOnFirstData&apos; uses all those that are
found on the first data that can be calculated;
  &apos;UserSet&apos; takes the list of properties from the parameter
UserSet.  Property ranges can be given by giving the first
and last property in the range separated by a hyphen; 
properties can be referred to by index using the word &quot;Column&quot;
followed by the index, i.e., Column3-Column10.
</sci:help>
										<sci:member>PredefinedSet</sci:member>
										<sci:member>UserSet</sci:member>
										<sci:member>IgnoreProperties</sci:member>
										<sci:legalval>AllPropertiesOnFirstData</sci:legalval>
										<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
										<sci:legalval>PredefinedSet</sci:legalval>
										<sci:legalval selected="true">UserSet</sci:legalval>
									</sci:arg>
									<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>A predefined set of properties to use</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
										<sci:legalval>ALogP</sci:legalval>
										<sci:legalval>Molecular_Weight</sci:legalval>
										<sci:legalval>Num_H_Donors</sci:legalval>
										<sci:legalval>Num_H_Acceptors</sci:legalval>
										<sci:legalval>Num_RotatableBonds</sci:legalval>
										<sci:legalval>Num_Atoms</sci:legalval>
										<sci:legalval>Num_Rings</sci:legalval>
										<sci:legalval>Num_AromaticRings</sci:legalval>
										<sci:legalval>Molecular_Solubility</sci:legalval>
										<sci:legalval>Molecular_SurfaceArea</sci:legalval>
										<sci:legalval>Molecular_PolarSurfaceArea</sci:legalval>
										<sci:legalval>AlogP_Count</sci:legalval>
										<sci:legalval>Estate_Keys</sci:legalval>
										<sci:legalval>Estate_Counts</sci:legalval>
										<sci:legalval>MDLPublicKeys</sci:legalval>
										<sci:legalval>FCFP_2</sci:legalval>
										<sci:legalval>FCFP_4</sci:legalval>
										<sci:legalval>FCFP_6</sci:legalval>
										<sci:legalval>ECFP_2</sci:legalval>
										<sci:legalval>ECFP_4</sci:legalval>
										<sci:legalval>ECFP_6</sci:legalval>
									</sci:arg>
									<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of properties to use. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
										<sci:value>$(Feat)</sci:value>
									</sci:arg>
									<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of properties to ignore.  This is used, for example, if UseProperties is AllPropertiesOnFirstData, but there is a small set of undesirable properties you don&apos;t wish to use but can&apos;t remove (i.e., record names)</sci:help>
									</sci:arg>
									<sci:arg name="MinNumberOfComponents" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>Minimum number of components to calculate. Works in conjunction with the MinVarianceToExplain parameter. The number of components generated needs to satisfy both conditions.</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="MinVarianceExplained" type="DoubleType" required="false" visibility="visible" multi="false">
										<sci:help>Minimum variance to explain. Works in conjunction with the MinNumberOfComponent parameter. The number of components generated needs to satisfy both conditions.</sci:help>
										<sci:value>.75</sci:value>
									</sci:arg>
									<sci:arg name="ROutput" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Specify what to output, either PCA Loadings or PCA scores</sci:help>
										<sci:legalval selected="true">PCA Loadings</sci:legalval>
										<sci:legalval>PCA Scores</sci:legalval>
									</sci:arg>
									<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>Fixed Length</sci:member>
										<sci:member>ShowRInputOutput</sci:member>
										<sci:member>CenterData</sci:member>
										<sci:member>ScaleData</sci:member>
										<sci:member>Convert Fingerprints To</sci:member>
									</sci:arg>
									<sci:arg name="CenterData" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Substract the mean from each property before performing PCA </sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ScaleData" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Divide by the variance of each property before performing PCA </sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Convert Fingerprints To" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the format into which fingerprints are to be transformed in order to be compatible with the R data frame format.  Options are:
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;Fixed-Length Array of Bits: Fingerprints are &quot;folded&quot; to a smaller size given by &lt;i&gt;Fixed Length&lt;/i&gt;, with each member of the fixed length array equal to 0 or 1.  For each &quot;on&quot; bit B in the original fingerprint, the array element whose index is B modulo L is set to 1, where L is the fixed length.
&lt;li&gt;Fixed-Length Array of Counts: Fingerprints are &quot;folded&quot; to a smaller size given by &lt;i&gt;Fixed Length&lt;/i&gt;, with each member of the fixed length array equal to 0 or greater.  For each &quot;on&quot; bit B in the original fingerprint, the value of the array element whose index is B modulo L is incremented by 1.
&lt;/ul&gt;</sci:help>
										<sci:legalval>Fixed-Length Array of Bits</sci:legalval>
										<sci:legalval selected="true">Fixed-Length Array of Counts</sci:legalval>
									</sci:arg>
									<sci:arg name="Fixed Length" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
										<sci:value>256</sci:value>
									</sci:arg>
									<sci:arg name="ShowRInputOutput" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Specify whether or not to show the R script and the R stdout in Notepad viewers</sci:help>
										<sci:legalval>Script</sci:legalval>
										<sci:legalval>StdOutput</sci:legalval>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
										<sci:value>RExitStatus,PlotName,RFunctionsFile,pass,CalculatedProperties,PointInfoText,calcProps,ShowRScript,ShowRStdOutput,OutputScores,OutputLoadings,stderr,RParScript,RPlotWidth,RPlotHeight</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:value>$(R_Run_Remote)</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>100000000</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>$(R_Server)</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Jul 20 09:07:40 2017</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>R Principal Components Analysis</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>CALCULATORNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{08120F5C-7293-4271-99C5-D5C4707B9396}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>990 -275</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Performs principal components analysis (PCA) using R function &quot;prcomp&quot;</sci:value>
										<sci:value>The principal components are determined for the properties specified by &lt;i&gt;UseProperties&lt;/i&gt;, all of which should be numerical.  (Non-numerical properties are ignored.)
&lt;p&gt;
Use &lt;i&gt;ROutput&lt;/i&gt; to specify the output. Options are:
&lt;ul&gt;
&lt;li&gt;PCA Loadings: A data record is output for each input property containing the loading of that property for each principal component.  Three additional records are output containing the standard deviation, variance explained, and total (cumulative) variance explained by each prinipal component.&lt;/li&gt;
&lt;li&gt;PCA Scores: The scores (coordinates in principal component space) for each incoming data record are calculated and added to the record as &lt;b&gt;PC1&lt;/b&gt;, &lt;b&gt;PC2&lt;/b&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1523</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
										<sci:legalval>Cant Replace With Copy</sci:legalval>
										<sci:legalval>Cant Open</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/rstats</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>22</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Analysis and Statistics\R Statistics\Analysis\R Principal Components Analysis</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Check R exe" version="2">
											<sci:arg name="Error Behavior" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Specifies action to take in case of a problem with the Pipeline Pilot R configuration. Options are:
&lt;ul&gt;
&lt;li&gt;Default: For fatal errors such as a missing R executable, show a message in a dialog and halt the protocol if running from Pipeline Pilot; raise an exception if running from another client such as Web Port. For a non-fatal error such as an unsupported R version, show a message but do not halt the protocol if running from Pipeline Pilot; do nothing if running from another client.
&lt;li&gt;Message out Fail Port: For any type of error, send a message out the fail port in a property named &lt;b&gt;ErrorText&lt;/b&gt;. Do not raise an exception or display a message.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If the global property @SuppressRVersionWarning is set to True, no message is shown in the &quot;Default&quot; case for unsupported R versions.
&lt;/ul&gt;</sci:help>
												<sci:legalval selected="true">Default</sci:legalval>
												<sci:legalval>Message out Fail Port</sci:legalval>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
												<sci:value>ver,ErrorText,EnvOverride</sci:value>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>When the network runs, processes once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
												<sci:legalval>Cant Replace With Copy</sci:legalval>
												<sci:legalval>Cant Open</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Aug  1 05:48:46 2018</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Check R exe</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ComponentNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{320AE9ED-071D-4ad7-AE87-2D692FAED359}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -95</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Check R executable</sci:value>
												<sci:value>Checks that the global variable &apos;R_exe&apos;, which points to the location of the R executable, is defined, and that the R executable file is in the location specified by R_exe. </sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>19.1.0.1872</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Check R exe</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Set R IO to display" version="2">
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>PilotScript expression to be evaluated.</sci:help>
												<sci:value>@ShowRScript := false;
@ShowRStdOutput := false;
for #i in 1 .. numvalues(@ShowRInputOutput) loop
   #s := @ShowRInputOutput[#i];
   if (#s eq &quot;Script&quot;) then 
      @ShowRScript := true;
   end if;
   if (#s eq &quot;StdOutput&quot;) then 
      @ShowRStdOutput := true;
   end if;
end loop;

@OutputLoadings := False;
@OutputScores := True;
if (@ROutput eq &apos;PCA Loadings&apos;) then
   @OutputLoadings := True;
   @OutputScores := False;
end if;
</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
												<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>drogers</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Aug 26 13:07:26 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Set R I/O to display</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ExpressionNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{E45B61F2-FFD5-49F2-9178-E35F2471E749}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>390 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Executes a PilotScript to rapidly manipulate data records.</sci:value>
												<sci:value>This component executes the PilotScript specified in the component. The component is used to build new, specialized data manipulation components.

The &apos;Expression&apos; is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.

</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.5.0.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Unknown</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.ClientTempFiles.1">
										<sci:component name="Create Tempfiles for R" version="2">
											<sci:arg name="Server Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>A comma separated list of global parameter names (such as &quot;tmp1,tmp2&quot;) to assign with temporary filenames obtained from the server</sci:help>
												<sci:value>Rmodelfile, Rscriptfile, Rstdoutfile, Rinput1file, Rinput2file, Rinput3file, Rinput4file, Rinput5file, Routput1file,Routput2file, Routput3file, Routput4file, Routput5file</sci:value>
											</sci:arg>
											<sci:arg name="Client Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>A comma separated list of global parameter names (such as &quot;ctmp1,ctmp2&quot;) to assign with temporary filenames obtained from the client</sci:help>
											</sci:arg>
											<sci:arg name="Force Forward Slashes" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Whether to force all server tempfiles to use forward slashes; this is useful if the temp file name is used to communicate with a external program that cannot handle backslashes on Windows</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>mhassan</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue Jul 13 10:17:05 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Create Tempfiles for R</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ComponentNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{2BFBE007-9937-47EB-A9B4-B76491D99C59}</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Client Temp Filenames</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>690 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Obtains temporary filenames from the client or the server that are added to the global property list.</sci:value>
												<sci:value>&lt;p&gt;These names can be used later within the protocol as global variables within component parameters or as PilotScript expressions. For example, if your component executes on the client, but requires specific files to be present, you can create a temporary file named &quot;clientTmpFile1&quot; and later refer to it in a parameter or PilotScript entry via &quot;$(clientTmpFile1)&quot;.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Server Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the server.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Client Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the client.&lt;/p&gt;

&lt;p&gt;All files created in this way are deleted when the protocol is closed or, in the case of client tempfiles, when the client starts up again. (They are not permanent files.)&lt;/p&gt;</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.1.1.100</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Create Tempfiles for R</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.PropertyCalculator.1">
										<sci:component name="Calculate Properties" version="2">
											<sci:arg name="UseProperties" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>The properties to learn from: 
  &apos;AllPropertiesOnFirstData&apos; uses all those that are found
on the first data object;
  &apos;CalculablePropertiesOnFirstData&apos; uses all those that are
found on the first data that can be calculated;
  &apos;UserSet&apos; takes the list of properties from the parameter
UserSet.  Property ranges can be given by giving the first
and last property in the range separated by a hyphen; 
properties can be referred to by index using the word &quot;Column&quot;
followed by the index, i.e., Column3-Column10.
</sci:help>
												<sci:value>$(UseProperties)</sci:value>
											</sci:arg>
											<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>A predefined set of properties to use for learning</sci:help>
												<sci:value>$(PredefinedSet)</sci:value>
											</sci:arg>
											<sci:arg name="UserSet" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>A comma-separated list of properties to use for learning. 
If an item on the list contains a hyphen, and the names on either side are defined
on the first data item, then all properties in that range are added.</sci:help>
												<sci:value>$(UserSet)</sci:value>
											</sci:arg>
											<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>A comma-separated list of properties to ignore.  This is used, for example, if UseProperties is AllPropertiesOnFirstData, but there is a small set of undesirable properties you don&apos;t wish to use but can&apos;t remove (i.e., record names)</sci:help>
												<sci:value>$(IgnoreProperties)</sci:value>
											</sci:arg>
											<sci:arg name="PutPropertyListInGlobal" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>If given, the array of properties that are being calculated is placed into this global property when the first data is passed into the component.</sci:help>
												<sci:value>CalculatedProperties</sci:value>
											</sci:arg>
											<sci:arg name="PutCalculatedPropertiesInProperty" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>If given, the array of properties that are newly calculated for a particlar sample are placed into this property on each data</sci:help>
											</sci:arg>
											<sci:arg name="Convert Fingerprints To" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
												<sci:value>$(Convert Fingerprints To)</sci:value>
											</sci:arg>
											<sci:arg name="Fixed Length" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
												<sci:value>$(Fixed Length)</sci:value>
											</sci:arg>
											<sci:arg name="IllegalCharacters" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>If given, this is a regular expression that is applied to property names to discover illegal characters.  In this case, the illegal characters are replaced with underscores, and the original property names and the new property names added to the global values PropertyCalculatorOriginalNames and PropertyCalculatorNewNames, respectively.  This gives you the mapping from the original name to the internal R names.</sci:help>
												<sci:value>-|\s</sci:value>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="RemoveCalculatedPropertiesInProperty" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Remove the properties listed in the particular property name</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>SciTegic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Jun 02 09:08:51 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Calculate Properties</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>CalculatorNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{22FFFABF-758F-406F-976F-46E680B2CBFF}</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon</sci:help>
												<sci:value>Calculate Properties</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.1.0.0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>690 -455</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value/>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Calculate Properties</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
												<sci:value>
@calcProps :=  @CalculatedProperties;
expand(&apos;,&apos;, @calcProps);</sci:value>
											</sci:arg>
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>PilotScript expression to be evaluated.</sci:help>
												<sci:value>keep(@calcProps);</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
												<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>SciTegic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jun 07 09:13:41 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>keep only calculated properties</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ExpressionNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>990 -455</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Executes a PilotScript to rapidly manipulate data records.</sci:value>
												<sci:value>This component executes the PilotScript specified in the component. The component is used to build new, specialized data manipulation components.

The &apos;Expression&apos; is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.

</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.1.0.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.DelimitedWriter.1">
										<sci:component name="Delimited Text Writer" version="2">
											<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
												<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz to the filename. </sci:help>
												<sci:value>$(Rinput1file)</sci:value>
											</sci:arg>
											<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
											</sci:arg>
											<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>What to do if the given file already exists.</sci:help>
												<sci:legalval selected="true">Overwrite</sci:legalval>
												<sci:legalval>Append</sci:legalval>
												<sci:legalval>Halt</sci:legalval>
											</sci:arg>
											<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.)</sci:help>
												<sci:legalval>Tab</sci:legalval>
												<sci:legalval>Space</sci:legalval>
												<sci:legalval selected="true">Comma</sci:legalval>
											</sci:arg>
											<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>The delimiter to use between multiple value on a single property.  If None, 
then the multiple values are separated into their own columns.</sci:help>
												<sci:legalval selected="true">None</sci:legalval>
												<sci:legalval>Semicolon</sci:legalval>
												<sci:legalval>Colon</sci:legalval>
												<sci:legalval>Comma</sci:legalval>
											</sci:arg>
											<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>What text to output when data for a given column is not present
  (leave empty enter text of choice)</sci:help>
											</sci:arg>
											<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="hidden" multi="false">
												<sci:help>Whether to output column names</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>Whether to output a row which includes the column types</sci:help>
												<sci:legalval selected="true">None</sci:legalval>
												<sci:legalval>SpotfireFormat</sci:legalval>
												<sci:legalval>NDIFormat</sci:legalval>
											</sci:arg>
											<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="hidden" multi="false">
												<sci:help>Includes the number of the record as the first
field for each record.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>SciTegic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue May 18 12:07:18 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Write Input Data for R</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Delimited Writer</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DocumentNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1290 -455</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Writes data records to a text file, separating the individual fields with a specified delimiter character. </sci:value>
												<sci:value>Writes data records to a text file, separating the records with a new line and the individual fields within a record with the character specified in the &apos;Delimiter&apos; character.  The property names for the fields will be stored as the first line of the file.

&apos;MultipleValueDelimiter&apos; controls properties with more than one value. If None, then they are written as multiple fields (e.g., prop[1], prop[2] ...). Else, they are written into a single value separated by the chosen delimiter.

</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.0.5.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>5</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="No-op" version="2">
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to be evaluated.</sci:help>
												<sci:value>/* A dummy statement */
true;</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
												<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>CustomErrorText</sci:help>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ComponentNode</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>SciTegic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Sun Aug 01 13:28:06 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>No-op</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>390 -635</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes all incoming records to the Pass port.</sci:value>
												<sci:value>Pass all incoming records to pass port. Useful in subprotocols to capture the point of input. For example, to run an initialization pipeline before accepting input, use the No-Op component as the first component on the second pipeline. 
</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>none</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.2.0.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>6</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Run R Script" version="2">
											<sci:arg name="RScriptExpression" type="ExpressionType" required="true" visibility="visible" multi="false">
												<sci:help>Expression defining the RScript property containing the script to be sent to R.</sci:help>
												<sci:value>/* R script to do PCA calling the prcomp function */

RScript := &apos;
source(&quot;$(RFunctionsFile)&quot;)

rdata &lt;- readData(&quot;$(Rinput1file)&quot;, removeZeroVar=TRUE, omitNA=TRUE, XMustBeNumber=TRUE)

# Retain indexes of kept records (keep defined in readData)
RPCAindex &lt;- (1:length(keep))[keep]

# calculate PCA 
centerData &lt;- TRUE
if (tolower(&quot;$(CenterData)&quot;) == &quot;false&quot;) centerData &lt;- FALSE
scaleData &lt;- TRUE
if (tolower(&quot;$(ScaleData)&quot;) == &quot;false&quot;) scaleData &lt;- FALSE
scores &lt;- TRUE
if (tolower(&quot;$(ROutput)&quot;) == &quot;pca loadings&quot;) scores &lt;- FALSE

pca &lt;- prcomp(rdata, 
              retx = TRUE, 
              center = centerData, 
              scale. = scaleData)

if (length(pca$sdev) == 0)
{
   stop(&quot;Error calculating principal components&quot;)
   geterrmessage()
}

# write results to stdout
pca

mincomp &lt;- $(MinNumberOfComponents)
minvar &lt;- $(MinVarianceExplained)

totvar &lt;- sum(pca$sdev^2)
n &lt;- length(pca$sdev)
var &lt;- 0.0
ncomp &lt;- 0
for (i in 1:n)
{
   var &lt;- var + pca$sdev[i]^2
   if (i &gt;= mincomp &amp;&amp; var/totvar &gt;= minvar)
   {
      ncomp &lt;- i
      break
   }
}
if (ncomp == 0) ncomp &lt;- n

# Always write scores
results &lt;- data.frame(pca$x[,1:ncomp], RPCAindex)

write.table(results, file= &quot;$(Routput1file)&quot;, sep=&quot;,&quot;, col.names=T, row.names=F, 
            quote=F, append = FALSE)

# Write loadings if requested   
if (scores == FALSE)
{
   var &lt;- NULL
   cumvar &lt;- NULL
   sumvar &lt;- 0.0

   for (i in 1:ncomp) 
   {
      sumvar &lt;- sumvar + pca$sdev[i]^2
      var[i] &lt;- pca$sdev[i]^2/totvar
      cumvar[i] &lt;- sumvar/totvar
   }
   m &lt;- rbind(pca$sdev[1:ncomp], var, cumvar, pca$rotation[,1:ncomp])

   rnames &lt;- row.names(m)
   rnames[1] &lt;- &quot;StandardDeviation&quot;
   rnames[2] &lt;- &quot;VarianceExplained&quot;
   rnames[3] &lt;- &quot;TotalVarianceExplained&quot;
   row.names(m) &lt;- rnames
   Property &lt;- rownames(m)
   m2 &lt;- cbind(Property,m)
   write.table(m2, file= &quot;$(Routput2file)&quot;, sep=&quot;,&quot;, col.names=T, row.names=F, 
               quote=F, append = FALSE)
}
&apos;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
												<sci:value>EnvOverride</sci:value>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>When the network runs, processes once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 30 11:47:31 2017</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Run R Script</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{52541793-A244-485C-9B70-DC1DDD44DD6F}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -725</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Execute R script, optionally displaying script and stdout</sci:value>
												<sci:value>Executes in R a script defined by RScriptExpression.  This is an internal component used by other R Statistics components.</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>18.1.0.1362</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>12</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R Script</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Add Index Property" version="2">
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="NameOfIndex" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>The name of the property to hold the value indicating the order of the data</sci:help>
												<sci:value>RPCAindex</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
												<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
												<sci:help>A set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
												<sci:value>Index</sci:value>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
												<sci:help>When the component runs, process once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Jul 28 10:28:06 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Add Index Property</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ExpressionNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{CFAD8049-AFE7-47B2-9466-F5BA216DA27E}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>690 -815</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>ProtocolCommentSize</sci:help>
												<sci:value>1100 500</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Numbers consecutive records with a sequential index number.</sci:value>
												<sci:value>Sets an index number (starting at 1) on a data record, then increments the number so that consecutive records get sequentially numbered.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value>With added index property</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.1.1.400</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>7</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Deprecated\Add Index Property</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.MergeProperties.1">
										<sci:component name="Merge Data" version="2">
											<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Name of the key property (or a comma separated list
of properties) that contain the value identifying those 
records to be merged into one</sci:help>
												<sci:value>RPCAindex</sci:value>
											</sci:arg>
											<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Indicates what happens to the values of properties (other than the &apos;MergeUsing&apos;
property) from those records that are merged.
    KeepAll:  Keeps all property values by creating new property names to hold
                   the multiple values for a single property
    KeepFirst:  Keeps only the properties and values from the first example
                      received.  All properties and values from subsequent records
                      matching the &apos;MergeUsing&apos; property are discarded.
    KeepTogether:  Keeps all records with matching &apos;MergeUsing&apos; property 
                      values together.</sci:help>
												<sci:legalval selected="true">KeepAll</sci:legalval>
												<sci:legalval>KeepFirst</sci:legalval>
												<sci:legalval>KeepTogether</sci:legalval>
											</sci:arg>
											<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Whether to consider lower-case and upper-case
letters as equivalent when determining the identity 
of &apos;MergeUsing&apos; propety values</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Whether to add a property called &apos;Frequency&apos; that
contains the number of individual records included
in the resulting merged record</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>Indicates how MergeUsing properties are to be interpreted when 
more than one property is listed.
    UseFirstDefinedValue:  Merges using only the first property in the 
                                         list that has a defined value for a record
    UseAllValues:  Merges using the concatentation of the values
                                      of ALL properties listed.</sci:help>
												<sci:legalval>UseFirstDefinedValue</sci:legalval>
												<sci:legalval selected="true">UseAllValues</sci:legalval>
											</sci:arg>
											<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>The kind of values found in the &apos;MergeUsing&apos; property.
    IsNumeric:  All numbers are converted to doubles for
                       comparison (so 1 = 1.0) 
    IsText:  All comparisons are made as string values</sci:help>
												<sci:legalval>IsNumeric</sci:legalval>
												<sci:legalval selected="true">IsText</sci:legalval>
											</sci:arg>
											<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>This string is used during append in KeepAll to pad out empty values. This 
keeps the generated arrays of values in-sync for multiple samples. The value
None causes no padding to occur.</sci:help>
												<sci:value>None</sci:value>
											</sci:arg>
											<sci:arg name="WhenMerging" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>During the merging of two records, this tells what to do
when copying properties from a newly-discovered object onto the base record.
OverwriteOrCreate always copies all properties onto the base object; 
OverwriteExisting only copies properties that already exist on the base; 
CreateIfNew leaves any existing properties alone, and writes only new properties; 
AppendOrCreate appends if the property exists, else it creates it; 
AppendExisting appends to current-existing properties.</sci:help>
												<sci:legalval>OverwriteOrCreate</sci:legalval>
												<sci:legalval>OverwriteExisting</sci:legalval>
												<sci:legalval>CreateIfNew</sci:legalval>
												<sci:legalval selected="true">AppendOrCreate</sci:legalval>
												<sci:legalval>AppendExisting</sci:legalval>
											</sci:arg>
											<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>[optional]
When multiple property names are created (by KeepAll merge
behavior) to hold the multiple values for a single property
during merge, the original property name will be prefixed
differently for each original value it must hold.  The Prefix will
be constructed from the value of this property, followed by an underscore.
When not specified, no prefix will be used, and multiple values
will be separated as an array (e.g., property[1], property[2], etc].</sci:help>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>SciTegic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed May 26 16:11:41 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Merge Data</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Merge Data</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>JoinNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>990 -995</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Produces a single data record from multiple data records having an identical value for a given property.
</sci:value>
												<sci:value>Incoming data records are merged into a single data record if they have the same value as each other for the &apos;MergeUsing&apos; named property(s). If multiple &apos;MergeUsing&apos; names are given, all must be identical for a merge event to occur. &apos;MergeBehavior&apos; can be KeepAll, which keeps all values by appending any new ones; KeepFirst, which only keeps the properties of the first record found,  and KeepTogether, which keeps matching items sequentially together (like Sort). The properties of merged data records are appended in the form of an array. unless a &apos;PrefixUsingProperty&apos; is given, so the value of the given property is prepended to each property name on each data item.  This is often useful when merging multiple data files with a &apos;SourceTag&apos; parameter (available in many readers).&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;See Also:&lt;/a&gt;To merge records based on identical molecular structures use the &quot;Merge Molecules&quot; component.&lt;/p&gt;</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value>Data records that contain the properties being used for merging</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Data records that do not contain the properties being used for merging</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.1.0.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="Remove Properties" version="2">
											<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>The names of properties to remove from each data record entering the component</sci:help>
												<sci:value>RPCAindex</sci:value>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>Remove</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue Oct 12 14:23:53 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Remove properties</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ExpressionNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1290 -995</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Removes the specified properties.</sci:value>
												<sci:value>For each data record that enters the component, the specified properties are removed and the modified record is passed out.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;: To keep only a few properties from a long list, it may be more efficient to specify those properties in the &lt;i&gt;Keep Properties&lt;/i&gt; component.&lt;/p&gt;</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value>Data records with the specified properties removed</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.5.0.1</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>9</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:value>@pass := true;

if PC1 is not defined then
	@pass := false;
	ErrorText := &apos;Missing or invalid property value&apos;;
end if;

@pass
</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Check for bad records</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1590 -995</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
												<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>10</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@OutputScores = True</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Output scores?</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1890 -995</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
												<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>11</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.DelimitedReader.1">
										<sci:component name="Delimited Text Reader" version="2">
											<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
												<sci:help>The file(s) or URL source to read</sci:help>
												<sci:value>$(Routput1file)</sci:value>
											</sci:arg>
											<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>The maximum number of data items to read (all if value is empty)</sci:help>
											</sci:arg>
											<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
												<sci:help>A list of properties that are to be retained in each data record output
by the reader component. If the value is left blank, then all properties
are retained. If the parameter contains the value &quot;-&quot; (minus sign), then
no properties are to be retained.</sci:help>
											</sci:arg>
											<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Specifies the character which separates the fields in the file.
  To determine automatically use:   FigureOut  
  For &quot;tab&quot; delimited type:              tab
  For &quot;space&quot; delimited type:         space
  For &quot;comma&quot; delimited type:       comma
  For &quot;colon&quot; delimited type:          colon</sci:help>
												<sci:legalval>FigureOut</sci:legalval>
												<sci:legalval>Tab</sci:legalval>
												<sci:legalval>Space</sci:legalval>
												<sci:legalval selected="true">Comma</sci:legalval>
												<sci:legalval>Colon</sci:legalval>
											</sci:arg>
											<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
												<sci:help>When TRUE, property names are taken
from the first line of data in the file.  When
FALSE, properties will be called: Column1,
Column2, etc. by default</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>The type of tag to create to identify the source of data records.  A property 
called &apos;SourceTag&apos; will be created and will hold the value indicated:
   None - no SourceTag property will be created, and any existing will be removed
   Filename - the name of the file read
   FilenameAndExtension - the name of the file read with it&apos;s file extension
   FullFilename - the name of the file read including the directory path
   Number - when multiple files are read in this component, they are numbered 1,2,3...
   Letter - when multiple files are read in this component, they are lettered A, B, C...
   KeepCurrent - keep the current value of SourceTag</sci:help>
												<sci:legalval selected="true">None</sci:legalval>
												<sci:legalval>Filename</sci:legalval>
												<sci:legalval>FilenameAndExtension</sci:legalval>
												<sci:legalval>FullFilename</sci:legalval>
												<sci:legalval>Number</sci:legalval>
												<sci:legalval>Letter</sci:legalval>
												<sci:legalval>KeepCurrent</sci:legalval>
											</sci:arg>
											<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
											</sci:arg>
											<sci:arg name="UndefinedString" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>Specifies the character or string used to represent an 
undefined string in the file being read</sci:help>
											</sci:arg>
											<sci:arg name="AllLines" type="BoolType" required="true" visibility="hidden" multi="false">
												<sci:help>When TRUE, all lines of the text file become
part of a single data record.  The values for
a column from each row become multiple [array]
values for the property (column).</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="hidden" multi="false">
												<sci:help>Whether to trim whitespace from the left and right ends of each value</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>SciTegic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue May 18 12:07:14 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Read R output</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Delimited Reader</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DocumentNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>390 -1175</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Reads text files containing one record per line with data separated by delimiters.</sci:value>
												<sci:value>Reads textual data from one or more files that are formated with a single record per line. Individual data items on each line should be separated by a delimiter character (e.g. space, comma, tab). The first line is treated as column names for defining property names. If column names are not declared, they are given standard names of Column1, Column2, etc. 

This component should be used to read comma delimited text files from Excel (.csv).

</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.0.5.0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>13</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>for #i in 1 .. numproperties() loop
	if isinteger(ithproperty(#i)) then
		changepropertytype(ithproperty(#i), &apos;Long&apos;);
	elsif isnumber(ithproperty(#i)) then
		changepropertytype(ithproperty(#i), &apos;Double&apos;);
	end if;
end loop;
</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Convert numbers</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ExpressionNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>690 -1175</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.1.1.400</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>14</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:value>fileexists(&quot;$(Routput1file)&quot;) = true and @RExitStatus == 0</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>SciTegic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Output1 file exists (scores)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -1355</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
												<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.1.0.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>15</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Display R stdout and halt protocol" version="2">
											<sci:arg name="ControlProperty" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>ControlProperty</sci:help>
												<sci:value>@ShowRStdOutput</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Oct 22 12:08:22 2014</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Display R stdout and halt protocol</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ViewerNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{9E6F3C8B-E5AB-4d51-B5E5-C0F20559F6FF}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>390 -1535</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Display R standard output</sci:value>
												<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>9.5.0.608</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>16</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout and halt protocol</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:value>fileexists(&quot;$(Routput2file)&quot;) = true</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>SciTegic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Output2 file exists (loadings)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -1895</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
												<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.1.0.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>17</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.DelimitedReader.1">
										<sci:component name="Delimited Text Reader" version="2">
											<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
												<sci:help>The file(s) or URL source to read</sci:help>
												<sci:value>$(Routput2file)</sci:value>
											</sci:arg>
											<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>The maximum number of data items to read (all if value is empty)</sci:help>
											</sci:arg>
											<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
												<sci:help>A list of properties that are to be retained in each data record output
by the reader component. If the value is left blank, then all properties
are retained. If the parameter contains the value &quot;-&quot; (minus sign), then
no properties are to be retained.</sci:help>
											</sci:arg>
											<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Specifies the character which separates the fields in the file.
  To determine automatically use:   FigureOut  
  For &quot;tab&quot; delimited type:              tab
  For &quot;space&quot; delimited type:         space
  For &quot;comma&quot; delimited type:       comma
  For &quot;colon&quot; delimited type:          colon</sci:help>
												<sci:legalval>FigureOut</sci:legalval>
												<sci:legalval>Tab</sci:legalval>
												<sci:legalval>Space</sci:legalval>
												<sci:legalval selected="true">Comma</sci:legalval>
												<sci:legalval>Colon</sci:legalval>
											</sci:arg>
											<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
												<sci:help>When TRUE, property names are taken
from the first line of data in the file.  When
FALSE, properties will be called: Column1,
Column2, etc. by default</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>The type of tag to create to identify the source of data records.  A property 
called &apos;SourceTag&apos; will be created and will hold the value indicated:
   None - no SourceTag property will be created, and any existing will be removed
   Filename - the name of the file read
   FilenameAndExtension - the name of the file read with it&apos;s file extension
   FullFilename - the name of the file read including the directory path
   Number - when multiple files are read in this component, they are numbered 1,2,3...
   Letter - when multiple files are read in this component, they are lettered A, B, C...
   KeepCurrent - keep the current value of SourceTag</sci:help>
												<sci:legalval selected="true">None</sci:legalval>
												<sci:legalval>Filename</sci:legalval>
												<sci:legalval>FilenameAndExtension</sci:legalval>
												<sci:legalval>FullFilename</sci:legalval>
												<sci:legalval>Number</sci:legalval>
												<sci:legalval>Letter</sci:legalval>
												<sci:legalval>KeepCurrent</sci:legalval>
											</sci:arg>
											<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
											</sci:arg>
											<sci:arg name="UndefinedString" type="StringType" required="false" visibility="hidden" multi="false">
												<sci:help>Specifies the character or string used to represent an 
undefined string in the file being read</sci:help>
											</sci:arg>
											<sci:arg name="AllLines" type="BoolType" required="true" visibility="hidden" multi="false">
												<sci:help>When TRUE, all lines of the text file become
part of a single data record.  The values for
a column from each row become multiple [array]
values for the property (column).</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="hidden" multi="false">
												<sci:help>Whether to trim whitespace from the left and right ends of each value</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>SciTegic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue May 18 12:07:14 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Read R output</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Delimited Reader</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DocumentNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>390 -1895</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Reads text files containing one record per line with data separated by delimiters.</sci:value>
												<sci:value>Reads textual data from one or more files that are formated with a single record per line. Individual data items on each line should be separated by a delimiter character (e.g. space, comma, tab). The first line is treated as column names for defining property names. If column names are not declared, they are given standard names of Column1, Column2, etc. 

This component should be used to read comma delimited text files from Excel (.csv).

</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.0.5.0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>18</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>for #i in 1 .. numproperties() loop
	if isnumber(ithproperty(#i)) then
		changepropertytype(ithproperty(#i), &apos;Double&apos;);
	end if;
end loop;
</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Convert doubles</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ExpressionNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>690 -1895</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.1.1.400</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>19</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="Data to Fail Port" version="2">
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>CustomErrorText</sci:help>
											</sci:arg>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Data to Fail Port</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{A718CDEE-EE7D-4B75-9346-C3780D347090}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>990 -1895</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Directs records to the Fail port for use in subprotocol building.</sci:value>
												<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Fail port of the subprotocol.
</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value>All data records</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.0.4.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>20</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Fail Port</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:connectid from="0" to="1" type="true"/>
									<sci:connectid from="1" to="2" type="true"/>
									<sci:connectid from="3" to="4" type="true"/>
									<sci:connectid from="3" to="4" type="false"/>
									<sci:connectid from="4" to="5" type="true"/>
									<sci:connectid from="6" to="3" type="true"/>
									<sci:connectid from="6" to="7" type="true"/>
									<sci:connectid from="7" to="8" type="true"/>
									<sci:connectid from="8" to="9" type="true"/>
									<sci:connectid from="9" to="10" type="true"/>
									<sci:connectid from="10" to="11" type="true"/>
									<sci:connectid from="13" to="14" type="true"/>
									<sci:connectid from="14" to="8" type="true"/>
									<sci:connectid from="15" to="13" type="true"/>
									<sci:connectid from="15" to="16" type="false"/>
									<sci:connectid from="17" to="18" type="true"/>
									<sci:connectid from="18" to="19" type="true"/>
									<sci:connectid from="19" to="20" type="true"/>
									<sci:version iVal="1"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.RangeScreen.1">
								<sci:component name="Range Filter" version="2">
									<sci:arg name="List" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>A list of which data records to pass:
  e.g.,  1,3-5,7,10-11
     will pass the first, third, fourth, fifth and so on.</sci:help>
										<sci:value>1-3</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Fri Dec 13 12:38:32 2002</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;List&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>if (strlength(parameter(&apos;List&apos;, 2)) &gt; 0) then
	&quot;Filter range &quot; . parameter(&apos;List&apos;, 2);
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0C71D911-BF35-4A1B-8B2C-B9A586BD39F3}</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Range Filter</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1290 -455</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records within a specified range based on the order in which they arrive</sci:value>
										<sci:value>&lt;p&gt;Data records are numbered consecutively (from 1) as they arrive at the component.  The record numbers specified by &lt;i&gt;List&lt;/i&gt; are sent out the Pass port. Records not specified are sent out the Fail port.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;List&lt;/i&gt; items need to be entered as comma-separated values. &lt;i&gt;List&lt;/i&gt; can accept single item indices or ranges (such as &quot;1-5,7,9,13-15&quot;).&lt;/p&gt; 

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records whose indices match the specified list</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records whose indices do not match the specified list</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>24</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Filters\Range Filter</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="Keep or Reorder Properties" version="2">
									<sci:arg name="Action" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&quot;Keep&quot; reorders the properties in the data record to the same order as provided in PropertyList, and removes all others. 

&quot;Reorder&quot; reorders the properties in the data record to the same order as provided in PropertyList, and has all other properties in subsequent columns.</sci:help>
										<sci:legalval selected="true">Keep</sci:legalval>
										<sci:legalval>Reorder</sci:legalval>
									</sci:arg>
									<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
										<sci:help>The list of property names to keep</sci:help>
										<sci:member>RenameList</sci:member>
										<sci:value>Property</sci:value>
										<sci:value>PC1</sci:value>
										<sci:value>PC2</sci:value>
										<sci:value>PC3</sci:value>
									</sci:arg>
									<sci:arg name="RenameList" type="PropertyNameType" required="false" visibility="visible" multi="true">
										<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Apr 26 10:59:51 2018</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	Parameter(&apos;Action&apos;) . &apos; &apos; . #displayName;
else
	Parameter(&apos;Action&apos;) . &apos; Properties&apos;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1590 -455</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Reorder the specified properties, optionally keeping only properties specified by the user</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, reorders  the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt; (&quot;Reorder&quot;), and optionally removing all others (&quot;Keep&quot;).&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>With only the specified properties remaining</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>19.1.0.1786</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>25</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep or Reorder Properties</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Sortable Table" version="2">
									<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>The optional title at the top of the table.</sci:help>
										<sci:member>Title Format</sci:member>
										<sci:member>Title Position</sci:member>
										<sci:value>PCA loadings</sci:value>
									</sci:arg>
									<sci:arg name="Title Format" type="FormatType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.Title</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Title Position" type="PositionType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
										<sci:value>600</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.Title</sci:value>
									</sci:arg>
									<sci:arg name="Table Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Format and position for the table as a whole.&lt;/p&gt;</sci:help>
										<sci:member>Format</sci:member>
										<sci:member>Position</sci:member>
									</sci:arg>
									<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.General</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
										<sci:value>600</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.General</sci:value>
										<sci:value>Width</sci:value>
										<sci:value>400</sci:value>
										<sci:value>Pixels</sci:value>
									</sci:arg>
									<sci:arg name="Header Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Options controlling the table header.&lt;/p&gt;</sci:help>
										<sci:member>Header Format</sci:member>
										<sci:member>Header Position</sci:member>
										<sci:member>Freeze Table Header</sci:member>
									</sci:arg>
									<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.Header</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Header Position" type="PositionType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
										<sci:value>600</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.Header</sci:value>
									</sci:arg>
									<sci:arg name="Cell Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Options controlling the table cells.&lt;/p&gt;</sci:help>
										<sci:member>Cell Format</sci:member>
										<sci:member>Cell Position</sci:member>
									</sci:arg>
									<sci:arg name="Cell Format" type="FormatType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.Cell</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Cell Position" type="PositionType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
										<sci:value>600</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.Cell</sci:value>
									</sci:arg>
									<sci:arg name="Data Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Options controlling the table data.&lt;/p&gt;</sci:help>
										<sci:member>Exclude Properties</sci:member>
										<sci:member>Column Order</sci:member>
										<sci:member>Array Value Display</sci:member>
										<sci:member>Aggregate Data</sci:member>
										<sci:member>When Data Contains Reporting Information</sci:member>
									</sci:arg>
									<sci:arg name="Exclude Properties" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-delimited list of properties which will not be rendered in an autogenerated table.</sci:help>
									</sci:arg>
									<sci:arg name="Column Order" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of property names, indicating the order the columns should appear in an autogenerated table. Any non-listed properties will be added as subsequent columns.</sci:help>
									</sci:arg>
									<sci:arg name="Array Value Display" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Determines how array values are separated when they are displayed in an autogenerated table.</sci:help>
										<sci:legalval>Separate By Commas</sci:legalval>
										<sci:legalval selected="true">Separate By Newlines</sci:legalval>
										<sci:legalval>One Array Element Per Cell</sci:legalval>
									</sci:arg>
									<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>If True, all incoming data records are aggregated into a single output record. If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="When Data Contains Reporting Information" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Determines whether the table shows all the properties of data records that already have reporting information.</sci:help>
										<sci:legalval selected="true">Display Reporting Information Only</sci:legalval>
										<sci:legalval>Display Reporting Information and All Properties</sci:legalval>
									</sci:arg>
									<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
										<sci:member>Link Target</sci:member>
										<sci:member>Tooltip</sci:member>
									</sci:arg>
									<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
									</sci:arg>
									<sci:arg name="Tooltip" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>An optional tooltip for this reporting element.</sci:help>
									</sci:arg>
									<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
										<sci:member>Column Settings Header Text</sci:member>
										<sci:member>Column Settings Header Format</sci:member>
										<sci:member>Column Settings Header Position</sci:member>
										<sci:member>Column Settings Cell Format</sci:member>
										<sci:member>Column Settings Cell Position</sci:member>
										<sci:member>Show 4-digit Year</sci:member>
									</sci:arg>
									<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
									</sci:arg>
									<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
									</sci:arg>
									<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
										<sci:value>uid</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>When the network runs, processes once or until done for each process call</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Show 4-digit Year" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
												<sci:value>Show 4-digit Year</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>For columns of type DateTime, this parameter controls the display of years, with either four, or two digits (default).</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1890 -455</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Make Shortcut by Default</sci:legalval>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Processing Order</sci:help>
										<sci:value>DrainTopDown</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.2.0.1312</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>26</sci:value>
									</sci:arg>
									<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
										<sci:value>Format</sci:value>
										<sci:value>Link Options</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/report</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Oct 31 13:23:59 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>REPORTTABLENODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Creates a table with sortable columns</sci:value>
										<sci:value>&lt;p&gt;The resulting table has columns that can be sorted by clicking the column headers.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>None</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{A13A80BA-3576-403a-8177-A7797894DD32}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Sortable Table</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Reporting and Visualization\Reporting\Web Application Development\HTML Elements\Sortable Table</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:data object="SciTegic.ComponentJavaPlugin.1">
								<sci:component name="Tile Vertical" version="2">
									<sci:arg name="Allow Rows To Cross Pages" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>If True, rows will be allowed to span multiple pages.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:value>600</sci:value>
									</sci:arg>
									<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
									</sci:arg>
									<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>If True, all incoming data records are aggregated into a single output record. 

If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Cell Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Options controlling how the cells are formatted and positioned.</sci:help>
										<sci:member>Cell Format</sci:member>
										<sci:member>Cell Position</sci:member>
									</sci:arg>
									<sci:arg name="Cell Format" type="FormatType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:value>600</sci:value>
									</sci:arg>
									<sci:arg name="Cell Position" type="PositionType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
										<sci:value>600</sci:value>
										<sci:value>Padding Left</sci:value>
										<sci:value>1.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>Padding Right</sci:value>
										<sci:value>1.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>Padding Bottom</sci:value>
										<sci:value>1.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>Padding Top</sci:value>
										<sci:value>1.0</sci:value>
										<sci:value>Pixels</sci:value>
									</sci:arg>
									<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
										<sci:member>Link</sci:member>
										<sci:member>Link Target</sci:member>
										<sci:member>HTML Attributes</sci:member>
										<sci:member>Tooltip</sci:member>
										<sci:member>Protocol Link</sci:member>
										<sci:member>Link Options</sci:member>
										<sci:member>Data Connector</sci:member>
									</sci:arg>
									<sci:arg name="Link" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;An optional parameter specifying a link for the reporting element produced by this component. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
&lt;ul&gt;
&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Example:&lt;/b&gt;
To create a link from a combination of a property and static text, create a valid PilotScript expression. For example, if you have internal web pages linking to research projects that have addresses of the form: &lt;i&gt;http://mydomain.com/ProjectID&lt;/i&gt;, where &lt;i&gt;ProjectID&lt;/i&gt; is the actual project ID, and also a local property on the datastream, you would use:
&lt;p&gt;&lt;code&gt;&apos;http://mydomain.com&apos; . ProjectID&lt;/code&gt;
&lt;p&gt;as the value for &lt;i&gt;Link&lt;/i&gt;.</sci:help>
										<sci:enabledscript>prefixLength := StringLen(&apos;Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
protocolLinkParameterName := prefix.&apos;Protocol Link&apos;;
enabled := true;
if (parameter(protocolLinkParameterName) is Defined ) then 
	enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
	End if;
end if;	
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;Specifies a link that runs a protocol.  Editing this parameter opens up the Protocol Link Dialog.&lt;/p&gt;</sci:help>
										<sci:enabledscript>prefixLength := StringLen(&apos;Protocol Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
linkParameterName := prefix.&apos;Link&apos;;
enabled := true;
if (parameter(linkParameterName) is Defined ) then 
	enabled := Parameter(linkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
	End if;
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies how to display pages linked to the reporting element. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the component.</sci:help>
									</sci:arg>
									<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
									</sci:arg>
									<sci:arg name="Tooltip" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>An optional tooltip for this reporting element.</sci:help>
									</sci:arg>
									<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
									</sci:arg>
									<sci:arg name="Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
										<sci:member>Subscriber Event Handling</sci:member>
										<sci:member>Publisher Event Handling</sci:member>
										<sci:member>Publisher Subscriber Model</sci:member>
									</sci:arg>
									<sci:arg name="Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
										<sci:legalval>Publisher and Subscriber</sci:legalval>
										<sci:legalval>Publisher</sci:legalval>
										<sci:legalval>Subscriber</sci:legalval>
										<sci:legalval selected="true">None</sci:legalval>
									</sci:arg>
									<sci:arg name="Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
										<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalval selected="true">Highlight</sci:legalval>
										<sci:legalval>Filter</sci:legalval>
										<sci:legalval>Reverse Filter</sci:legalval>
									</sci:arg>
									<sci:arg name="Publisher Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Setting the publishing event type.&lt;/p&gt;</sci:help>
										<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Publisher Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Subscriber&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Subscriber&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalval selected="true">On Click</sci:legalval>
										<sci:legalval>On Mouse Over</sci:legalval>
									</sci:arg>
									<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
										<sci:member>Column Settings Header Text</sci:member>
										<sci:member>Column Settings Header Format</sci:member>
										<sci:member>Column Settings Header Position</sci:member>
										<sci:member>Column Settings Cell Format</sci:member>
										<sci:member>Column Settings Cell Position</sci:member>
									</sci:arg>
									<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
									</sci:arg>
									<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>600</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
										<sci:value>500</sci:value>
										<sci:value>100.0</sci:value>
										<sci:value>Percent</sci:value>
										<sci:value>100.0</sci:value>
										<sci:value>Percent</sci:value>
										<sci:value>0.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>0.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>0.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>0.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>0.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>0.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>0.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>0.0</sci:value>
										<sci:value>Pixels</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>600</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Arranges data from upstream components so they are tiled from top-to-bottom in a single column</sci:value>
										<sci:value>&lt;p&gt;Each item that flows into this component is placed on a separate row.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records representing a reporting objects</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>One or more data records representing the tiled data is sent to the pass port.</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>8.0.0.14</sci:value>
									</sci:arg>
									<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>DrainTopDown</sci:value>
									</sci:arg>
									<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>com.scitegic.report.component.TileVerticalComponent</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>2790 -455</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>REPORTTABLENODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{1A59E782-CC6A-4655-8C57-7C868DAC6D69}</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Plug In</sci:value>
									</sci:arg>
									<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>scitegic/report</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>27</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/report</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Fri Feb 12 10:00:00 2010</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Tile Vertical</sci:value>
									</sci:arg>
									<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
										<sci:help>CaptureStdoutStderr</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
										<sci:value>Format</sci:value>
										<sci:value>Link Options</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Reporting and Visualization\Reporting\Elements\Tile Vertical</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>FOREACH #PROP IN @PROPS LOOP
	property(#PROP) := globalproperty(#PROP);
END LOOP;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>3090 -455</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>30</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@Set := Set</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -815</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>18</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.UngroupData.1">
								<sci:component name="Ungroup Data" version="2">
									<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>GroupName</sci:member>
									</sci:arg>
									<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>(Optional) Restricts the ungroup process to only those groups having the given name -- the same name as specified by the &quot;Group Data&quot; component</sci:help>
										<sci:value>Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Jan 19 10:40:59 2006</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Ungroup Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>GENERATORNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Ungroup Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{57833F08-BD53-42AE-A14C-87EED61B8FBD}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>390 -815</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Separates data records previously grouped together into the original records</sci:value>
										<sci:value>&lt;p&gt;The input record is assumed to be a grouped data record.  The individual records are extracted from the group and sent out the Pass port.  The incoming data record is discarded.&lt;/p&gt;

&lt;p&gt;You would typically use Ungroup Data as the first component inside a &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocol that expects grouped data.  This executes the remainder of the subprotocol over the individual data records in the group.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;It is possible to have a group which in turn has another group as one of its members (nested groups). In this case, ungrouping will separate only the top level groups. Multiple Ungroup Data components operating in series are needed to separate nested groups.&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To group data records together use &lt;a href=&quot;javascript:DoLink(&apos;{3FDE8197-D86F-4EB0-99FF-82D6430AF466}&apos;)&quot;&gt;Group Data by Tag&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}&apos;)&quot;&gt;Group Data by Number&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To view the structure of grouped data records use &lt;a href=&quot;javascript:DoLink(&apos;{AA4369ED-A1A1-4949-8520-39B23096ACFD}&apos;)&quot;&gt;Data Record Tree Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To learn more about &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocols, see the parameter help on &lt;a href=&quot;javascript:DoLink(&apos;{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}&apos;)&quot;&gt;Subprotocol&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value>Data records with a hierarchical group of other data records</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value>The individual data records that were contained within a hierarchical group of the incoming data</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value>Data records on which the GroupName property is missing</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>6.0.0.6</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>15</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Ungroup Data</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>Func := strReplace(Func,&apos;&quot;&apos;,&apos;&apos;);
Cmpd1 := strReplace(Cmpd1,&apos;&quot;&apos;,&apos;&apos;);
Conc1 := Log10(Conc1)
</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>690 -815</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Confusion Matrix" version="2">
									<sci:arg name="Actual Property" type="PropertyNameType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Property containing actual category (class). If a value is defined for both &lt;i&gt;Actual Property&lt;/i&gt; and &lt;i&gt;TestForGood&lt;/i&gt;, &lt;i&gt;Actual Property&lt;/i&gt; takes precedence.</sci:help>
										<sci:member>Preferred Value</sci:member>
										<sci:member>TestForGood</sci:member>
										<sci:validscript>Parameter() ne &apos;&apos; or Parameter(&apos;TestForGood&apos;) ne &apos;&apos;</sci:validscript>
										<sci:value>Func</sci:value>
									</sci:arg>
									<sci:arg name="Preferred Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Specifies the name of the &quot;positive&quot; class for the purpose of calculating true positive, false positive, and so on</sci:help>
										<sci:enabledscript>Parameter(&apos;Actual Property&apos;) ne &apos;&apos;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="TestForGood" type="ExpressionType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>A PilotScript expression applied to each data record to determine if it is part of the &quot;good&quot; subset. For a Bayesian model, use this in place of a value for &lt;i&gt;Actual Property&lt;/i&gt;. If a value is defined for both &lt;i&gt;Actual Property&lt;/i&gt; and &lt;i&gt;TestForGood&lt;/i&gt;, &lt;i&gt;Actual Property&lt;/i&gt; takes precedence.</sci:help>
										<sci:validscript>Parameter() ne &apos;&apos; or Parameter(&apos;Actual Property&apos;) ne &apos;&apos;</sci:validscript>
										<sci:enabledscript>Parameter(&apos;Actual Property&apos;) eq &apos;&apos;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Prediction Property" type="PropertyNameType" required="true" visibility="visible" multi="false">
										<sci:help>Property containing predicted category (class)</sci:help>
										<sci:value>knnobject</sci:value>
									</sci:arg>
									<sci:arg name="Class Order" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list specifying the order in which you wish the classes to appear in the confusion matrix. If left blank, alphabetical order is used.</sci:help>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
										<sci:member>RunToCompletion Categorize Using</sci:member>
										<sci:legalval selected="true">False</sci:legalval>
										<sci:legalval>True - For Each Data Record</sci:legalval>
										<sci:legalval>True - For Each Category</sci:legalval>
									</sci:arg>
									<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
										<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
										<sci:value>temp</sci:value>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
										<sci:value>ConfusionHash,AllClassHash</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Confusion Matrix</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ComponentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>790</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{A1F1D4A0-91E7-463D-AEE4-F4C6F744F592}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1890 -815</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Calculates a confusion matrix</sci:value>
										<sci:value>&lt;i&gt;Actual Property&lt;/i&gt; specifies the name of the property containing the actual class (category) for each data record, or use &lt;i&gt;TestForGood&lt;/i&gt; to identify &quot;good&quot; data records for a Bayesian model. &lt;i&gt;Prediction Property&lt;/i&gt; specifies the name of the property containing the predicted class.
&lt;p&gt;
If the input data are binary or if you specify a &lt;i&gt;Preferred Value&lt;/i&gt;, then additional statistics such as true positives (TP), false positives (FP), sensitivity, specificity, and so on are output. A small subset of these statistics are output for the multi-class case (those that are applicable and can be calculated).
&lt;br&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For most classification model types, the default &lt;i&gt;modelname&lt;/i&gt; output (where &lt;i&gt;modelname&lt;/i&gt; is the name of the model) contains the predicted class. But for a Bayesian model created by &lt;a href=&quot;javascript:DoLink(&apos;{22699AB0-7583-4062-976F-46E680B2CBFF}&apos;)&quot;&gt;Learn Good From Bad&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{0855FA42-AADB-47AA-B821-592699C86396}&apos;)&quot;&gt;Learn Good Molecules&lt;/a&gt;, the property containing the prediction (True for &quot;good&quot; or False for &quot;bad&quot;) is named &lt;i&gt;modelname&lt;/i&gt;#Prediction. The &lt;i&gt;modelname&lt;/i&gt; output in this case contains the Bayesian score.
&lt;/ul&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Confusion Matrix</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records missing one or both of the required properties</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>16.1.0.1140</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Mar 22 08:06:36 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Analysis and Statistics\Basic Math and Statistics\Confusion Matrix</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Convert N-Dim Arrays to Reporting" version="2">
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
										<sci:value>_2D_PropNames,_2D_PropNameIndex,_3D_PropNames,_3D_PropNameIndex</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>25</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Convert N-Dim Arrays to Reporting</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>SUBPROTOCOLNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{F7AEE44F-588F-4E9C-9207-BF40E37002DE}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>2190 -815</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Creates nested tables for 2D and 3D arrays</sci:value>
										<sci:value>Properties with N-Dimensional Arrays of two or three dimensions are replaced with reporting tables.</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.50</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Make Shortcut by Default</sci:legalval>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Fri Feb 26 20:03:43 2010</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Internals\Reference Components\Convert N-Dim Arrays to Reporting</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Subprotocol" version="2">
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>25</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Create 3D Property Tables</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>REPORTSUBPROTOCOLNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1590 -95</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
												<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.1.0.21</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue May 01 14:06:30 2007</sci:value>
											</sci:arg>
											<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Processing Order</sci:help>
												<sci:value>DrainTopDown</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>5</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="No-op" version="2">
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>PassDataToPort</sci:value>
													</sci:arg>
													<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>the port to pass data to</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>No-op</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
														<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.1.1</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@_3D_PropNameIndex &lt;= NumValues(@_3D_PropNames);</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>354 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@_3D_PropName := @_3D_PropNames[@_3D_PropNameIndex];</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>690 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Subprotocol" version="2">
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:value>25</sci:value>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
														<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Create Table For 3D Prop</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>REPORTSUBPROTOCOLNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -95</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
														<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.21</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Make Shortcut by Default</sci:legalval>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 01 14:06:30 2007</sci:value>
													</sci:arg>
													<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Processing Order</sci:help>
														<sci:value>DrainTopDown</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>#prop3DName := @_3D_PropNames[@_3D_PropNameIndex];
remove(#prop3DName);</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.AttachChildren.1">
														<sci:component name="Attach Reporting Children" version="2">
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Attachment Location" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The deep node specification of the point in the parent data record to attach the child data records.
If left blank, the child nodes ara attached to the root node of the parent record.</sci:help>
																<sci:value>/*/SciTegic.ReportingGroup/</sci:value>
															</sci:arg>
															<sci:arg name="Child Node Location" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>If specified, this parameter specifies the location of nodes that are to
be extracted from the child data records and attached to the parent
record.

If no nodes match this location for a specific record, then no child nodes are attached from that record.

If the parameter value is left empty, then the whole data record is attached,
using the root node of the child record as the node location.</sci:help>
																<sci:value>/*/SciTegic.ReportingGroup/*/</sci:value>
															</sci:arg>
															<sci:arg name="If Attachment Location Missing" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>What to do if the specified attachment location is missing:

&lt;b&gt;Throw Error&lt;/b&gt;:  Throws a general error.

&lt;b&gt;Attach to Root Node&lt;/b&gt;:  Attaches child data under the root node.</sci:help>
																<sci:legalval>Throw Error</sci:legalval>
																<sci:legalval>Attach to Root Node</sci:legalval>
																<sci:legalval>Create Node Below Root</sci:legalval>
																<sci:legalval selected="true">Create Non-Empty Node Below Root</sci:legalval>
															</sci:arg>
															<sci:arg name="Created Node Name" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>&lt;p&gt;When &apos;If Attachment Location Missing&apos; is set to &apos;Create Node Below Root&apos;, this parameter is used to set the name of the new node that will be created and appended to the root node.&lt;/p&gt;</sci:help>
																<sci:value>SciTegic.ReportingGroup</sci:value>
															</sci:arg>
															<sci:arg name="Allow Missing Child Data" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>When set, this parameter allows input child node pipes to be &apos;skipped&apos;.  For example, data from the third input pipe is allowed even if there was no data from the second input pipe.

</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/report</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Feb 11 11:00:00 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Attach Reporting Children</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>JOINNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{464D0663-9F56-43ca-AB3B-F3592BCA3EEE}</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Attach Children</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Attaches the reporting contents of one or more secondary data records to a primary record</sci:value>
																<sci:value>&lt;p&gt;This component is used to add the reporting contents of one or more secondary data records to a primary record.&lt;/p&gt;

&lt;p&gt;The data record input on the top pipe is considerd the primary, parent record. Data input on the lower pipes must be received in order of input. The reporting contents each such record is added to the parent data record.&lt;/p&gt;

&lt;p&gt;When a new primary record is input on the top pipe, any stored primary record is output and the sequence begins again.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.0.0.13</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Components\Reporting and Visualization\Basic Reporting\Utilities\Attach Reporting Children</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Branch</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -295</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.UnpackChildren.1">
														<sci:component name="Delete Reporting Children" version="2">
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Location To Unpack" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>The location of a node in the hierarchy; the children of this node will be deleted. </sci:help>
																<sci:value>/*/SciTegic.ReportingGroup/</sci:value>
															</sci:arg>
															<sci:arg name="PackId Property" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>This parameter contains the name of a property that will be created on the location, and containing a sequence number for repacking later using the Pack Children component.  Leave this blank if you do not want this property added.</sci:help>
															</sci:arg>
															<sci:arg name="What to Output" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>Whether to output the parent structure or the children</sci:help>
																<sci:legalval selected="true">Parent</sci:legalval>
																<sci:legalval>Children</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/report</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jun 18 15:15:18 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Delete Reporting Children</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{EBED5007-AC93-421e-AAA5-536BFDCBB0B2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -470</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Deletes the reporting contents of the incoming data records</sci:value>
																<sci:value>&lt;p&gt;This component deletes the reporting contents (if any) on the incoming data records.&lt;/p&gt;
			</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Hierarchical data records</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>The remaining data record after removing the children from the requested location</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records that did not contain the location</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.1.0.7</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon</sci:help>
																<sci:value>Delete Children</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Components\Reporting and Visualization\Basic Reporting\Utilities\Delete Reporting Children</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Subprotocol" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>prop3D,prop3DName</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:value>25</sci:value>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Collect 2D Slices</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>REPORTSUBPROTOCOLNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -470</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.1.0.21</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue May 01 14:06:30 2007</sci:value>
															</sci:arg>
															<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Processing Order</sci:help>
																<sci:value>DrainTopDown</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Manipulator (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>@prop3DName := @_3D_PropNames[@_3D_PropNameIndex];
@prop3D := property(@prop3DName);
#dims := ArrayGetDimensions(@prop3D);
@ThirdDimensionSize := #dims[3];
@ThirdDimensionIndex := 1;

keep(@prop3DName);
remove(@prop3DName);</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>EXPRESSIONNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>90 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																		<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.0.0.35</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.PropertyFunctions.1">
																<sci:component name="No-op" version="2">
																	<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																		<sci:legalval selected="true">LeaveData</sci:legalval>
																		<sci:legalval>ClearData</sci:legalval>
																		<sci:legalval>DeleteData</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the action to perform</sci:help>
																		<sci:value>PassDataToPort</sci:value>
																	</sci:arg>
																	<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the port to pass data to</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>COMPONENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>No-op</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Evaluate Expression</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>354 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																		<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>6.0.1.1</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Subprotocol" version="2">
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																		<sci:value>_numRows,_rowIndex</sci:value>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:value>25</sci:value>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>2D Slice of 3D Table</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>REPORTTABLENODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>SubProtocol</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>642 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																		<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																		<sci:value>None</sci:value>
																		<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>6.1.0.21</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Make Shortcut by Default</sci:legalval>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue May 01 14:06:30 2007</sci:value>
																	</sci:arg>
																	<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Processing Order</sci:help>
																		<sci:value>DrainTopDown</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.AttachChildren.1">
																		<sci:component name="Attach Reporting Children" version="2">
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Attachment Location" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The deep node specification of the point in the parent data record to attach the child data records.
If left blank, the child nodes ara attached to the root node of the parent record.</sci:help>
																				<sci:value>/*/SciTegic.ReportingGroup/</sci:value>
																			</sci:arg>
																			<sci:arg name="Child Node Location" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>If specified, this parameter specifies the location of nodes that are to
be extracted from the child data records and attached to the parent
record.

If no nodes match this location for a specific record, then no child nodes are attached from that record.

If the parameter value is left empty, then the whole data record is attached,
using the root node of the child record as the node location.</sci:help>
																				<sci:value>/*/SciTegic.ReportingGroup/*/</sci:value>
																			</sci:arg>
																			<sci:arg name="If Attachment Location Missing" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>What to do if the specified attachment location is missing:

&lt;b&gt;Throw Error&lt;/b&gt;:  Throws a general error.

&lt;b&gt;Attach to Root Node&lt;/b&gt;:  Attaches child data under the root node.</sci:help>
																				<sci:legalval>Throw Error</sci:legalval>
																				<sci:legalval>Attach to Root Node</sci:legalval>
																				<sci:legalval>Create Node Below Root</sci:legalval>
																				<sci:legalval selected="true">Create Non-Empty Node Below Root</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Created Node Name" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>&lt;p&gt;When &apos;If Attachment Location Missing&apos; is set to &apos;Create Node Below Root&apos;, this parameter is used to set the name of the new node that will be created and appended to the root node.&lt;/p&gt;</sci:help>
																				<sci:value>SciTegic.ReportingGroup</sci:value>
																			</sci:arg>
																			<sci:arg name="Allow Missing Child Data" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>When set, this parameter allows input child node pipes to be &apos;skipped&apos;.  For example, data from the third input pipe is allowed even if there was no data from the second input pipe.

</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/report</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Thu Feb 11 11:00:00 2010</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Attach Reporting Children</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>JOINNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{464D0663-9F56-43ca-AB3B-F3592BCA3EEE}</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Attach Children</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>378 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Attaches the reporting contents of one or more secondary data records to a primary record</sci:value>
																				<sci:value>&lt;p&gt;This component is used to add the reporting contents of one or more secondary data records to a primary record.&lt;/p&gt;

&lt;p&gt;The data record input on the top pipe is considerd the primary, parent record. Data input on the lower pipes must be received in order of input. The reporting contents each such record is added to the parent data record.&lt;/p&gt;

&lt;p&gt;When a new primary record is input on the top pipe, any stored primary record is output and the sequence begins again.&lt;/p&gt;
</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>8.0.0.13</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Reporting and Visualization\Basic Reporting\Utilities\Attach Reporting Children</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:data object="SciTegic.EvaluateExpression.1">
																		<sci:component name="Custom Manipulator (PilotScript)" version="2">
																			<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																				<sci:member>Initial Expression</sci:member>
																				<sci:member>Final Expression</sci:member>
																				<sci:member>Keep Calculated Properties</sci:member>
																				<sci:value>keep(&quot;&quot;);</sci:value>
																			</sci:arg>
																			<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Version of expression parser to use.</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>EXPRESSIONNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -295</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																				<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.35</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:data object="SciTegic.UnpackChildren.1">
																		<sci:component name="Delete Reporting Children" version="2">
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Location To Unpack" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:help>The location of a node in the hierarchy; the children of this node will be deleted. </sci:help>
																				<sci:value>/*/SciTegic.ReportingGroup/</sci:value>
																			</sci:arg>
																			<sci:arg name="PackId Property" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>This parameter contains the name of a property that will be created on the location, and containing a sequence number for repacking later using the Pack Children component.  Leave this blank if you do not want this property added.</sci:help>
																			</sci:arg>
																			<sci:arg name="What to Output" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Whether to output the parent structure or the children</sci:help>
																				<sci:legalval selected="true">Parent</sci:legalval>
																				<sci:legalval>Children</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/report</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Wed Jun 18 15:15:18 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Delete Reporting Children</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>COMPONENTNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{EBED5007-AC93-421e-AAA5-536BFDCBB0B2}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>378 -470</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Deletes the reporting contents of the incoming data records</sci:value>
																				<sci:value>&lt;p&gt;This component deletes the reporting contents (if any) on the incoming data records.&lt;/p&gt;
			</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value>Hierarchical data records</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value>The remaining data record after removing the children from the requested location</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value>Data records that did not contain the location</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.1.0.7</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon</sci:help>
																				<sci:value>Delete Children</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Reporting and Visualization\Basic Reporting\Utilities\Delete Reporting Children</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:data object="SciTegic.EvaluateExpression.1">
																		<sci:component name="Custom Manipulator (PilotScript)" version="2">
																			<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																				<sci:member>Initial Expression</sci:member>
																				<sci:member>Final Expression</sci:member>
																				<sci:member>Keep Calculated Properties</sci:member>
																				<sci:value>@_numRows := ArrayNumRows(@prop3D);
@_rowIndex := 1;</sci:value>
																			</sci:arg>
																			<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Version of expression parser to use.</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>EXPRESSIONNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>666 -470</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																				<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.35</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>3</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Generate Cloned Data" version="2">
																			<sci:arg name="NumberOfOutput" type="LongType" required="true" visibility="visible" multi="false">
																				<sci:help>The number of outputs per each data record input</sci:help>
																				<sci:value>$(_numRows)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																				<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																				<sci:help>When the network runs, processes once or until done for each process call</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																				<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
																				<sci:value>Count,MaxCount</sci:value>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue Jul 12 15:15:42 2005</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{044595ED-0ED6-4287-B25E-A197102ABC0F}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Generate Cloned Data</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>GeneratorNode</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>954 -470</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>For each input data record, generates the requested number of identical copies.</sci:value>
																				<sci:value>Duplicates each input record producing N output records, where N is user-specified in the &lt;i&gt;NumberOfOutput&lt;/i&gt; parameter.  

This component is implemented internally using a Generate Data component, which you can change by opening the subprotocol and editing the parameters. Use the conditions to create variants that output copies of the incoming data when the last expression in the Condition is True. The example expression in the advanced parameters generates @MaxCount records. You can change the initial value of @MaxCount in the Initialize Condition to change the number, or replace these expressions with your own.</sci:value>
																				<sci:value>Generic Data</sci:value>
																				<sci:value/>
																				<sci:value>Generic Data</sci:value>
																				<sci:value>The given number of copies of each incoming record</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>5.0.0.108</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Made Link Into Copy</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>4</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Utilities\Generate Cloned Data</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol/>
																	</sci:data>
																	<sci:data object="SciTegic.EvaluateExpression.1">
																		<sci:component name="Custom Manipulator (PilotScript)" version="2">
																			<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																				<sci:member>Initial Expression</sci:member>
																				<sci:member>Final Expression</sci:member>
																				<sci:member>Keep Calculated Properties</sci:member>
																				<sci:value>#numCols := ArrayNumColumns(@prop3D);

for #c in 1 .. #numCols
loop
	#colPropName := &quot;&quot;.#c;
	property(#colPropName) := @prop3D[@_rowIndex][#c][@ThirdDimensionIndex];
end loop;
</sci:value>
																			</sci:arg>
																			<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Version of expression parser to use.</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>EXPRESSIONNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>1242 -470</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																				<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.35</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>5</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:data object="SciTegic.EvaluateExpression.1">
																		<sci:component name="Custom Manipulator (PilotScript)" version="2">
																			<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																				<sci:member>Initial Expression</sci:member>
																				<sci:member>Final Expression</sci:member>
																				<sci:member>Keep Calculated Properties</sci:member>
																				<sci:value>@_rowIndex++;</sci:value>
																			</sci:arg>
																			<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Version of expression parser to use.</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>EXPRESSIONNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>1530 -470</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																				<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.35</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>6</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:data object="SciTegic.ComponentJavaPlugin.1">
																		<sci:component name="Table" version="2">
																			<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
																				<sci:help>The optional title at the top of the table.</sci:help>
																				<sci:member>Title Format</sci:member>
																				<sci:member>Title Position</sci:member>
																			</sci:arg>
																			<sci:arg name="Title Format" type="FormatType" required="false" visibility="visible" multi="false">
																				<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server to be used (for example, 
you can copy images to the apps\scitegic\core\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																				<sci:value>700</sci:value>
																				<sci:value>Style</sci:value>
																				<sci:value>Table.Title</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="Title Position" type="PositionType" required="false" visibility="visible" multi="false">
																				<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
																				<sci:value>600</sci:value>
																				<sci:value>Style</sci:value>
																				<sci:value>Table.Title</sci:value>
																			</sci:arg>
																			<sci:arg name="Table Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																				<sci:help>&lt;p&gt;Format and position for the table as a whole.&lt;/p&gt;</sci:help>
																				<sci:member>Format</sci:member>
																				<sci:member>Position</sci:member>
																			</sci:arg>
																			<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
																				<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server to be used (for example, 
you can copy images to the apps\scitegic\core\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																				<sci:value>700</sci:value>
																				<sci:value>Style</sci:value>
																				<sci:value>Table.General</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
																				<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
																				<sci:value>600</sci:value>
																				<sci:value>Style</sci:value>
																				<sci:value>Table.General</sci:value>
																				<sci:value>Margin Top</sci:value>
																				<sci:value>3.0</sci:value>
																				<sci:value>Pixels</sci:value>
																				<sci:value>Margin Bottom</sci:value>
																				<sci:value>3.0</sci:value>
																				<sci:value>Pixels</sci:value>
																				<sci:value>Margin Left</sci:value>
																				<sci:value>0.0</sci:value>
																				<sci:value>Pixels</sci:value>
																				<sci:value>Margin Right</sci:value>
																				<sci:value>0.0</sci:value>
																				<sci:value>Pixels</sci:value>
																			</sci:arg>
																			<sci:arg name="Header Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																				<sci:help>&lt;p&gt;Options controlling the table header.&lt;/p&gt;</sci:help>
																				<sci:member>Header Format</sci:member>
																				<sci:member>Header Position</sci:member>
																				<sci:member>Show Table Header</sci:member>
																			</sci:arg>
																			<sci:arg name="Show Table Header" type="BoolType" required="false" visibility="visible" multi="false">
																				<sci:help>Specifies whether table headers should be visible or not.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
																				<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server to be used (for example, 
you can copy images to the apps\scitegic\core\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																				<sci:value>700</sci:value>
																				<sci:value>Style</sci:value>
																				<sci:value>Table.Header</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="Header Position" type="PositionType" required="false" visibility="visible" multi="false">
																				<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
																				<sci:value>600</sci:value>
																				<sci:value>Style</sci:value>
																				<sci:value>Table.Header</sci:value>
																			</sci:arg>
																			<sci:arg name="Cell Options" type="GroupType" required="false" visibility="visible" multi="false">
																				<sci:help>&lt;p&gt;Options controlling the table cells.&lt;/p&gt;</sci:help>
																				<sci:member>Cell Format</sci:member>
																				<sci:member>Cell Position</sci:member>
																			</sci:arg>
																			<sci:arg name="Cell Format" type="FormatType" required="false" visibility="visible" multi="false">
																				<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server to be used (for example, 
you can copy images to the apps\scitegic\core\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																				<sci:value>700</sci:value>
																				<sci:value>Style</sci:value>
																				<sci:value>Table.Cell</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="Cell Position" type="PositionType" required="false" visibility="visible" multi="false">
																				<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
																				<sci:value>600</sci:value>
																				<sci:value>Style</sci:value>
																				<sci:value>Table.Cell</sci:value>
																			</sci:arg>
																			<sci:arg name="Data Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																				<sci:help>&lt;p&gt;Options controlling the table data.&lt;/p&gt;</sci:help>
																				<sci:member>Exclude Properties</sci:member>
																				<sci:member>Column Order</sci:member>
																				<sci:member>Array Value Display</sci:member>
																				<sci:member>When Data Contains Reporting Information</sci:member>
																				<sci:member>Aggregate Data</sci:member>
																			</sci:arg>
																			<sci:arg name="Exclude Properties" type="StringType" required="false" visibility="visible" multi="false">
																				<sci:help>&lt;p&gt;A comma-delimited list of properties which will not be rendered in an autogenerated table.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Column Order" type="StringType" required="false" visibility="visible" multi="false">
																				<sci:help>&lt;p&gt;A comma-separated list of Header Text names (which may differ from the corresponding property names), indicating the order the columns should appear. Any non-listed properties will be added as subsequent columns.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The column names are case-sensitive&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Array Value Display" type="StringType" required="true" visibility="visible" multi="false">
																				<sci:help>&lt;p&gt;Determines how array values are separated when they are displayed in an autogenerated table.&lt;/p&gt;</sci:help>
																				<sci:legalval>Separate by Commas</sci:legalval>
																				<sci:legalval selected="true">Separate by Newlines</sci:legalval>
																				<sci:legalval>One Array Element per Cell</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false">
																				<sci:help>&lt;p&gt;If True, all incoming data records are aggregated into a single output record. If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.&lt;/p&gt;</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="When Data Contains Reporting Information" type="StringType" required="false" visibility="visible" multi="false">
																				<sci:help>&lt;p&gt;Determines whether the table shows all the properties of data records that already have reporting information.&lt;/p&gt;</sci:help>
																				<sci:legalval>Display Reporting Information Only</sci:legalval>
																				<sci:legalval selected="true">Display Reporting Information and All Properties</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
																				<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
																				<sci:member>Link Target</sci:member>
																				<sci:member>HTML Attributes</sci:member>
																				<sci:member>Tooltip</sci:member>
																				<sci:member>Data Connector</sci:member>
																			</sci:arg>
																			<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																				<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
																			</sci:arg>
																			<sci:arg name="Tooltip" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																				<sci:help>An optional tooltip for this reporting element.</sci:help>
																			</sci:arg>
																			<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
																				<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
																			</sci:arg>
																			<sci:arg name="Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
																				<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
																				<sci:member>Subscriber Event Handling</sci:member>
																				<sci:member>Publisher Event Handling</sci:member>
																				<sci:member>Publisher Subscriber Model</sci:member>
																			</sci:arg>
																			<sci:arg name="Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																				<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
																				<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
																				<sci:legalval>Publisher</sci:legalval>
																				<sci:legalval>Subscriber</sci:legalval>
																				<sci:legalval>None</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																				<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
																				<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
																				<sci:legalval selected="true">Highlight</sci:legalval>
																				<sci:legalval>Filter</sci:legalval>
																				<sci:legalval>Reverse Filter</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Publisher Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																				<sci:help>&lt;p&gt;Setting the publishing event type.&lt;/p&gt;</sci:help>
																				<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Publisher Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Subscriber&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Subscriber&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
																				<sci:legalval selected="true">On Click</sci:legalval>
																				<sci:legalval>On Mouse Over</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
																				<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
																				<sci:member>Column Settings Header Text</sci:member>
																				<sci:member>Column Settings Header Format</sci:member>
																				<sci:member>Column Settings Header Position</sci:member>
																				<sci:member>Column Settings Cell Format</sci:member>
																				<sci:member>Column Settings Cell Position</sci:member>
																			</sci:arg>
																			<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																				<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
																			</sci:arg>
																			<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																				<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																				<sci:value>600</sci:value>
																			</sci:arg>
																			<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																				<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
																			</sci:arg>
																			<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																				<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																				<sci:value>600</sci:value>
																			</sci:arg>
																			<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																				<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true" expanded="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false" expanded="true">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true" expanded="true">
																				<sci:value>100</sci:value>
																				<sci:value>Creates a table in a report by collecting data records and displaying them in rows and columns</sci:value>
																				<sci:value>&lt;p&gt;There are three ways you can create tables:&lt;/p&gt;

&lt;ul&gt;

&lt;li&gt;&lt;b&gt;Auto-generated:&lt;/b&gt; Quickly build a table by adding one Table component in a report, immediately following data (i.e., blue) components). The Table component takes your data sources and creates one column for each property on your data stream. The table includes some pre-set formats to save you time. &lt;/li&gt; 

&lt;li&gt;&lt;b&gt;Column-generated:&lt;/b&gt; You specify the content of your data source that should be used in the table. For each data property to include, add a component defining the content (e.g., &lt;a href=&quot;javascript:DoLink(&apos;{34E6C845-4ACB-4212-BBA3-7422213D458F}&apos;)&quot;&gt;Text&lt;/a&gt; or a chart component, plus a separate &lt;a href=&quot;javascript:DoLink(&apos;{EB2E16E8-D13E-4C7F-BB46-0E06502A6833}&apos;)&quot;&gt;Column component&lt;/a&gt; for each column of the table to be created.  Branch the data source to each pair of content/Column components and then pipe all of them into a single Table component. Each column is added to the table in the order it is shown visually in the protocol (top to bottom).  Each column in a table must have the same number of rows.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;In-line:&lt;/b&gt; Similar to Column-generated but instead of branching the data for each column of the table, place the &quot;content&quot; components in the sequence for the final table and then pipe this into a Table component.  In each content component, use the Column Settings components to define column header and cell options.&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value>Input can be raw data records, column objects or a sequence of Reporting components.</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value>A data record representing the table is sent to the pass port.</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>8.0.0.14</sci:value>
																			</sci:arg>
																			<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																				<sci:value>DrainTopDown</sci:value>
																			</sci:arg>
																			<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
																				<sci:value>com.scitegic.report.component.TableComponent</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																				<sci:value>1818 -470</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
																				<sci:value>REPORTTABLENODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																				<sci:value>{8DD32465-CB99-4A1E-870D-1A2F56D2C249}</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Plug In</sci:value>
																			</sci:arg>
																			<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>scitegic/report</sci:value>
																			</sci:arg>
																			<sci:arg name="ClasspathShortcut" type="URLType" required="false" visibility="nevershow" multi="false">
																				<sci:value>..\bin\lang\java\reportgeneration\Classpath.txt</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>8</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/report</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Fri Feb 12 11:46:16 2010</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																				<sci:value>Table</sci:value>
																			</sci:arg>
																			<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false" expanded="true">
																				<sci:help>CaptureStdoutStderr</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
																				<sci:value>Format</sci:value>
																				<sci:value>Link Options</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Reporting and Visualization\Basic Reporting\Elements\Table</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:connectid from="1" to="0" type="true"/>
																	<sci:connectid from="1" to="2" type="true"/>
																	<sci:connectid from="2" to="3" type="true"/>
																	<sci:connectid from="3" to="4" type="true"/>
																	<sci:connectid from="4" to="5" type="true"/>
																	<sci:connectid from="5" to="6" type="true"/>
																	<sci:connectid from="6" to="8" type="true"/>
																	<sci:connectid from="8" to="0" type="true"/>
																</sci:protocol>
															</sci:data>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Manipulator (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>@ThirdDimensionIndex++;</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>EXPRESSIONNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>1146 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																		<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.0.0.35</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>3</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:data object="SciTegic.EvaluateExpression.1">
																<sci:component name="Custom Filter (PilotScript)" version="2">
																	<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>The PilotScript expression used to filter the data.</sci:help>
																		<sci:member>Initial Expression</sci:member>
																		<sci:member>Final Expression</sci:member>
																		<sci:member>Keep Calculated Properties</sci:member>
																		<sci:value>@ThirdDimensionIndex &lt;= @ThirdDimensionSize</sci:value>
																	</sci:arg>
																	<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																		<sci:help>Version of expression parser to use.</sci:help>
																		<sci:value>2</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Custom Filter (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>FILTERNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Custom Filter (PilotScript)</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>1458 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																		<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>4</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:proplist>
																	<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																</sci:proplist>
															</sci:data>
															<sci:data object="SciTegic.PropertyFunctions.1">
																<sci:component name="Data to Pass Port" version="2">
																	<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																		<sci:legalval selected="true">LeaveData</sci:legalval>
																		<sci:legalval>ClearData</sci:legalval>
																		<sci:legalval>DeleteData</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval>ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the action to perform</sci:help>
																		<sci:value>PassDataToPort</sci:value>
																	</sci:arg>
																	<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>the port to pass data to</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>FilterNode</sci:value>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/generic</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Data to Pass Port</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>Evaluate Expression</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{3162E91B-4C82-4303-BCF1-C4D59B36709E}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>2010 -545</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Directs records to the Pass port for use in subprotocol building.</sci:value>
																		<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Pass port of the subprotocol.</sci:value>
																		<sci:value>Generic Data</sci:value>
																		<sci:value/>
																		<sci:value>Generic Data</sci:value>
																		<sci:value>All data records</sci:value>
																		<sci:value>None</sci:value>
																		<sci:value/>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>4.0.4.0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>5</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Pass Port</sci:value>
																	</sci:arg>
																</sci:component>
															</sci:data>
															<sci:connectid from="0" to="1" type="true"/>
															<sci:connectid from="1" to="2" type="true"/>
															<sci:connectid from="2" to="3" type="true"/>
															<sci:connectid from="3" to="4" type="true"/>
															<sci:connectid from="4" to="1" type="true"/>
															<sci:connectid from="4" to="5" type="false"/>
														</sci:protocol>
													</sci:data>
													<sci:data object="SciTegic.ComponentJavaPlugin.1">
														<sci:component name="Tile Vertical" version="2">
															<sci:arg name="Allow Rows To Cross Pages" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>If True, rows will be allowed to span multiple pages.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server to be used (for example, 
you can copy images to the apps\scitegic\core\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
																<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
															</sci:arg>
															<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>If True, all incoming data records are aggregated into a single output record. 

If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Cell Options" type="GroupType" required="false" visibility="visible" multi="false">
																<sci:help>Options controlling how the cells are formatted and positioned.</sci:help>
																<sci:member>Cell Format</sci:member>
																<sci:member>Cell Position</sci:member>
															</sci:arg>
															<sci:arg name="Cell Format" type="FormatType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server to be used (for example, 
you can copy images to the apps\scitegic\core\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Cell Position" type="PositionType" required="false" visibility="visible" multi="false">
																<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
																<sci:value>500</sci:value>
																<sci:value>100.0</sci:value>
																<sci:value>Percent</sci:value>
																<sci:value>100.0</sci:value>
																<sci:value>Percent</sci:value>
																<sci:value>0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>1</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>1</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>1</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>1</sci:value>
																<sci:value>Pixels</sci:value>
															</sci:arg>
															<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
																<sci:member>Link</sci:member>
																<sci:member>Link Target</sci:member>
																<sci:member>HTML Attributes</sci:member>
																<sci:member>Tooltip</sci:member>
																<sci:member>Protocol Link</sci:member>
																<sci:member>Link Options</sci:member>
																<sci:member>Data Connector</sci:member>
															</sci:arg>
															<sci:arg name="Link" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>&lt;p&gt;An optional parameter specifying a link for the reporting element produced by this component. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
	&lt;ul&gt;
	&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
 	&lt;li&gt;&apos;file://///machine_name/C/.../document.pdf&apos; - when using a Windows UNC path visible to the Pipeline Pilot server&lt;/li&gt;
	&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
	&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:enabledscript>enabled := (Parameter(&quot;Protocol Link&quot;) eq &apos;&apos;);
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>&lt;p&gt;Specifies a link that runs a protocol.  Editing this parameter opens up the Protocol Link Dialog.&lt;/p&gt;</sci:help>
																<sci:enabledscript>enabled := (Parameter(&quot;Link&quot;) eq &apos;&apos;);
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Specifies how to display pages linked to the reporting element. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the component.</sci:help>
															</sci:arg>
															<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
															</sci:arg>
															<sci:arg name="Tooltip" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>An optional tooltip for this reporting element.</sci:help>
															</sci:arg>
															<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
															</sci:arg>
															<sci:arg name="Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
																<sci:member>Subscriber Event Handling</sci:member>
																<sci:member>Publisher Event Handling</sci:member>
																<sci:member>Publisher Subscriber Model</sci:member>
															</sci:arg>
															<sci:arg name="Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
																<sci:legalval>Publisher and Subscriber</sci:legalval>
																<sci:legalval>Publisher</sci:legalval>
																<sci:legalval>Subscriber</sci:legalval>
																<sci:legalval selected="true">None</sci:legalval>
															</sci:arg>
															<sci:arg name="Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
																<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
																<sci:legalval selected="true">Highlight</sci:legalval>
																<sci:legalval>Filter</sci:legalval>
																<sci:legalval>Reverse Filter</sci:legalval>
															</sci:arg>
															<sci:arg name="Publisher Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>&lt;p&gt;Setting the publishing event type.&lt;/p&gt;</sci:help>
																<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Publisher Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Subscriber&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Subscriber&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
																<sci:legalval selected="true">On Click</sci:legalval>
																<sci:legalval>On Mouse Over</sci:legalval>
															</sci:arg>
															<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
																<sci:member>Column Settings Header Text</sci:member>
																<sci:member>Column Settings Header Format</sci:member>
																<sci:member>Column Settings Header Position</sci:member>
																<sci:member>Column Settings Cell Format</sci:member>
																<sci:member>Column Settings Cell Position</sci:member>
															</sci:arg>
															<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
																<sci:value>$(_3D_PropName)</sci:value>
															</sci:arg>
															<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>600</sci:value>
															</sci:arg>
															<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
																<sci:value>500</sci:value>
																<sci:value>100.0</sci:value>
																<sci:value>Percent</sci:value>
																<sci:value>100.0</sci:value>
																<sci:value>Percent</sci:value>
																<sci:value>0.0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>0.0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>0.0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>0.0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>0.0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>0.0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>0.0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>0.0</sci:value>
																<sci:value>Pixels</sci:value>
															</sci:arg>
															<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>600</sci:value>
															</sci:arg>
															<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Arranges data from upstream components so they are tiled from top-to-bottom in a single column</sci:value>
																<sci:value>&lt;p&gt;Each item that flows into this component is placed on a separate row.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Data records representing a reporting objects</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>One or more data records representing the tiled data is sent to the pass port.</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.0.0.14</sci:value>
															</sci:arg>
															<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>DrainTopDown</sci:value>
															</sci:arg>
															<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>com.scitegic.report.component.TileVerticalComponent</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>954 -470</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>REPORTTABLENODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{1A59E782-CC6A-4655-8C57-7C868DAC6D69}</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Plug In</sci:value>
															</sci:arg>
															<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>scitegic/report</sci:value>
															</sci:arg>
															<sci:arg name="ClasspathShortcut" type="URLType" required="false" visibility="nevershow" multi="false">
																<sci:value>..\bin\lang\java\reportgeneration\Classpath.txt</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/report</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Feb 12 10:00:00 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Tile Vertical</sci:value>
															</sci:arg>
															<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
																<sci:help>CaptureStdoutStderr</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
																<sci:value>Format</sci:value>
																<sci:value>Link Options</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Components\Reporting and Visualization\Basic Reporting\Elements\Tile Vertical</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="2" to="0" type="true"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="3" to="4" type="true"/>
													<sci:connectid from="4" to="5" type="true"/>
													<sci:connectid from="5" to="1" type="true"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@_3D_PropNameIndex++;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1266 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="Data to Pass Port" version="2">
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>PassDataToPort</sci:value>
													</sci:arg>
													<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>the port to pass data to</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Data to Pass Port</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{3162E91B-4C82-4303-BCF1-C4D59B36709E}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>834 -595</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Directs records to the Pass port for use in subprotocol building.</sci:value>
														<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Pass port of the subprotocol.</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>All data records</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.4.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>5</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Pass Port</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:connectid from="0" to="1" type="true"/>
											<sci:connectid from="1" to="2" type="true"/>
											<sci:connectid from="1" to="5" type="false"/>
											<sci:connectid from="2" to="3" type="true"/>
											<sci:connectid from="3" to="4" type="true"/>
											<sci:connectid from="4" to="1" type="true"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.NDArrayScreen.1">
										<sci:component name="NDArray Filter" version="2">
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>dfoss</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Feb 07 14:26:39 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>NDArray Filter</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{78070809-336E-48FB-9F20-852965B221DF}</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Range Filter</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -185</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records based on whether NDimensional arrays are present</sci:value>
												<sci:value>Passes data records based on whether NDimensional arrays are present

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records whose indices match the specified list</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records whose indices do not match the specified list</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.42</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Unknown</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>resize(@_2D_PropNames, 0);
resize(@_3D_PropNames, 0);
#numProps := NumProperties();
for #i in 1 .. #numProps 
loop
	if (getPropertyType(ithProperty(#i)) eq &quot;Scitegic.Value.NDimensionalValueArrayValue&quot;) then
		#ndim := ArrayNumDimensions(ithProperty(#i));
		if (#ndim == 2) then
			append(@_2D_PropNames, ithPropertyName(#i));
		elsif (#ndim == 3) then
			append(@_3D_PropNames, ithPropertyName(#i));
		elsif (#ndim &gt; 3) then
			/* replace property with string stating dimensions */
			#newVal := &quot;&quot;;
			#newVal .= #ndim;
			#newVal .= &quot;-D Array Property (&quot;;
			#dims := ArrayGetDimensions(ithProperty(#i));
			for #j in 1 .. #ndim
			loop
				if (#j &gt; 1) then
					#newVal .= &quot; x &quot;;
				end if;
				#newVal .= #dims[#j];
			end loop;
			#newVal .= &quot;)&quot;;
			property(ithPropertyName(#i)) := #newVal;
		end if;
	end if;
end loop;

@_2D_PropNameIndex := 1;
@_3D_PropNameIndex := 1;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Collect 2D/3D Property Names</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>390 -185</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>NumValues(@_2D_PropNames) &gt; 0</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Has 2D Properties?</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>690 -185</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Subprotocol" version="2">
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>25</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Create 2D Property Tables</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>REPORTSUBPROTOCOLNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>990 -185</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
												<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.1.0.21</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue May 01 14:06:30 2007</sci:value>
											</sci:arg>
											<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Processing Order</sci:help>
												<sci:value>DrainTopDown</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="No-op" version="2">
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>PassDataToPort</sci:value>
													</sci:arg>
													<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>the port to pass data to</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>No-op</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
														<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.1.1</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@_2D_PropNameIndex &lt;= NumValues(@_2D_PropNames);</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>354 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@_2D_PropName := @_2D_PropNames[@_2D_PropNameIndex];</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>690 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Subprotocol" version="2">
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
														<sci:value>_numRows,_RowIndex</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:value>25</sci:value>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
														<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Create Table For 2D Prop</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>REPORTSUBPROTOCOLNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -95</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
														<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.21</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Make Shortcut by Default</sci:legalval>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 01 14:06:30 2007</sci:value>
													</sci:arg>
													<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Processing Order</sci:help>
														<sci:value>DrainTopDown</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>#prop2DName := @_2D_PropNames[@_2D_PropNameIndex];
remove(#prop2DName);</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>390 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Branch</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.AttachChildren.1">
														<sci:component name="Attach Reporting Children" version="2">
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Attachment Location" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The deep node specification of the point in the parent data record to attach the child data records.
If left blank, the child nodes ara attached to the root node of the parent record.</sci:help>
																<sci:value>/*/SciTegic.ReportingGroup/</sci:value>
															</sci:arg>
															<sci:arg name="Child Node Location" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>If specified, this parameter specifies the location of nodes that are to
be extracted from the child data records and attached to the parent
record.

If no nodes match this location for a specific record, then no child nodes are attached from that record.

If the parameter value is left empty, then the whole data record is attached,
using the root node of the child record as the node location.</sci:help>
																<sci:value>/*/SciTegic.ReportingGroup/*/</sci:value>
															</sci:arg>
															<sci:arg name="If Attachment Location Missing" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>What to do if the specified attachment location is missing:

&lt;b&gt;Throw Error&lt;/b&gt;:  Throws a general error.

&lt;b&gt;Attach to Root Node&lt;/b&gt;:  Attaches child data under the root node.</sci:help>
																<sci:legalval>Throw Error</sci:legalval>
																<sci:legalval>Attach to Root Node</sci:legalval>
																<sci:legalval>Create Node Below Root</sci:legalval>
																<sci:legalval selected="true">Create Non-Empty Node Below Root</sci:legalval>
															</sci:arg>
															<sci:arg name="Created Node Name" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>&lt;p&gt;When &apos;If Attachment Location Missing&apos; is set to &apos;Create Node Below Root&apos;, this parameter is used to set the name of the new node that will be created and appended to the root node.&lt;/p&gt;</sci:help>
																<sci:value>SciTegic.ReportingGroup</sci:value>
															</sci:arg>
															<sci:arg name="Allow Missing Child Data" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>When set, this parameter allows input child node pipes to be &apos;skipped&apos;.  For example, data from the third input pipe is allowed even if there was no data from the second input pipe.

</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/report</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Feb 11 11:00:00 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Attach Reporting Children</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>JOINNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{464D0663-9F56-43ca-AB3B-F3592BCA3EEE}</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Attach Children</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>2190 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Attaches the reporting contents of one or more secondary data records to a primary record</sci:value>
																<sci:value>&lt;p&gt;This component is used to add the reporting contents of one or more secondary data records to a primary record.&lt;/p&gt;

&lt;p&gt;The data record input on the top pipe is considerd the primary, parent record. Data input on the lower pipes must be received in order of input. The reporting contents each such record is added to the parent data record.&lt;/p&gt;

&lt;p&gt;When a new primary record is input on the top pipe, any stored primary record is output and the sequence begins again.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.0.0.13</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Reporting and Visualization\Reporting\Utilities\Attach Reporting Children</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.UnpackChildren.1">
														<sci:component name="Delete Reporting Children" version="2">
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Location To Unpack" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>The location of a node in the hierarchy; the children of this node will be deleted. </sci:help>
																<sci:value>/*/SciTegic.ReportingGroup/</sci:value>
															</sci:arg>
															<sci:arg name="PackId Property" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>This parameter contains the name of a property that will be created on the location, and containing a sequence number for repacking later using the Pack Children component.  Leave this blank if you do not want this property added.</sci:help>
															</sci:arg>
															<sci:arg name="What to Output" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>Whether to output the parent structure or the children</sci:help>
																<sci:legalval selected="true">Parent</sci:legalval>
																<sci:legalval>Children</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/report</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jun 18 15:15:18 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Delete Reporting Children</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{EBED5007-AC93-421e-AAA5-536BFDCBB0B2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>390 -455</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Deletes the reporting contents of the incoming data records</sci:value>
																<sci:value>&lt;p&gt;This component deletes the reporting contents (if any) on the incoming data records.&lt;/p&gt;
			</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Hierarchical data records</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>The remaining data record after removing the children from the requested location</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records that did not contain the location</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.1.0.7</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon</sci:help>
																<sci:value>Delete Children</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Reporting and Visualization\Reporting\Utilities\Delete Reporting Children</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>#prop2DName := @_2D_PropNames[@_2D_PropNameIndex];
#prop2D := property(#prop2DName);
@_numRows := ArrayNumRows(#prop2D);
@_rowIndex := 1;</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>690 -455</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Clone Data" version="2">
															<sci:arg name="NumberOfOutput" type="LongType" required="true" visibility="visible" multi="false">
																<sci:help>The number of outputs per each data record input</sci:help>
																<sci:value>$(_numRows)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>When the network runs, processes once or until done for each process call</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
																<sci:value>Count,MaxCount</sci:value>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Jul 12 15:15:42 2005</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{044595ED-0ED6-4287-B25E-A197102ABC0F}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Generate Cloned Data</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
																<sci:help>Automatically update the component display name when the &quot;NumberOfOutput&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
																<sci:value>
#number := Parameter(&apos;NumberOfOutput&apos;, 2);
if(StrLength(String(#number)) &gt; 0 AND #number &gt; 1) then
	&apos;Clone data &apos; . #number . &apos; times&apos;;
else
	&apos;&apos;;
end if;
			</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>GeneratorNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>990 -455</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>For each input data record, generates the requested number of identical copies. (Formerly called &quot;Generated Cloned Data&quot;.)</sci:value>
																<sci:value>Duplicates each input record producing N output records, where N is user-specified in the &lt;i&gt;NumberOfOutput&lt;/i&gt; parameter.  

This component is implemented internally using a Generate Data component, which you can change by opening the subprotocol and editing the parameters. Use the conditions to create variants that output copies of the incoming data when the last expression in the Condition is True. The example expression in the advanced parameters generates @MaxCount records. You can change the initial value of @MaxCount in the Initialize Condition to change the number, or replace these expressions with your own.</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>The given number of copies of each incoming record</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>5.0.0.108</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Clone Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>#prop2DName := @_2D_PropNames[@_2D_PropNameIndex];
#prop2D := property(#prop2DName);

keep(#prop2DName);

#numRows := ArrayNumRows(#prop2D);
#numCols := ArrayNumColumns(#prop2D);

for #c in 1 .. #numCols
loop
	#colPropName := &quot;&quot;.#c;
	property(#colPropName) := #prop2D[@_rowIndex][#c];
end loop;

remove(#prop2DName);</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1290 -455</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>@_rowIndex++;</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1590 -455</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>7</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.ComponentJavaPlugin.1">
														<sci:component name="Table" version="2">
															<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>The optional title at the top of the table.</sci:help>
																<sci:member>Title Format</sci:member>
																<sci:member>Title Position</sci:member>
																<sci:value>Confusion matrix for kNN Clustering</sci:value>
															</sci:arg>
															<sci:arg name="Title Format" type="FormatType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server to be used (for example, 
you can copy images to the apps\scitegic\core\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>700</sci:value>
																<sci:value>Style</sci:value>
																<sci:value>Table.Title</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Title Position" type="PositionType" required="false" visibility="visible" multi="false">
																<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
																<sci:value>600</sci:value>
																<sci:value>Style</sci:value>
																<sci:value>Table.Title</sci:value>
															</sci:arg>
															<sci:arg name="Table Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>&lt;p&gt;Format and position for the table as a whole.&lt;/p&gt;</sci:help>
																<sci:member>Format</sci:member>
																<sci:member>Position</sci:member>
															</sci:arg>
															<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server to be used (for example, 
you can copy images to the apps\scitegic\core\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>700</sci:value>
																<sci:value>Style</sci:value>
																<sci:value>Table.General</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
																<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
																<sci:value>600</sci:value>
																<sci:value>Style</sci:value>
																<sci:value>Table.General</sci:value>
																<sci:value>Width</sci:value>
																<sci:value>400</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>Margin Top</sci:value>
																<sci:value>3.0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>Margin Bottom</sci:value>
																<sci:value>3.0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>Margin Left</sci:value>
																<sci:value>0.0</sci:value>
																<sci:value>Pixels</sci:value>
																<sci:value>Margin Right</sci:value>
																<sci:value>0.0</sci:value>
																<sci:value>Pixels</sci:value>
															</sci:arg>
															<sci:arg name="Header Options" type="GroupType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Options controlling the table header.&lt;/p&gt;</sci:help>
																<sci:member>Header Format</sci:member>
																<sci:member>Header Position</sci:member>
																<sci:member>Show Table Header</sci:member>
															</sci:arg>
															<sci:arg name="Show Table Header" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Specifies whether table headers should be visible or not.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server to be used (for example, 
you can copy images to the apps\scitegic\core\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>700</sci:value>
																<sci:value>Style</sci:value>
																<sci:value>Table.Header</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Header Position" type="PositionType" required="false" visibility="visible" multi="false">
																<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
																<sci:value>600</sci:value>
																<sci:value>Style</sci:value>
																<sci:value>Table.Header</sci:value>
															</sci:arg>
															<sci:arg name="Cell Options" type="GroupType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Options controlling the table cells.&lt;/p&gt;</sci:help>
																<sci:member>Cell Format</sci:member>
																<sci:member>Cell Position</sci:member>
															</sci:arg>
															<sci:arg name="Cell Format" type="FormatType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Formatting to be applied to this element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server to be used (for example, 
you can copy images to the apps\scitegic\core\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available). Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>700</sci:value>
																<sci:value>Style</sci:value>
																<sci:value>Table.Cell</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Cell Position" type="PositionType" required="false" visibility="visible" multi="false">
																<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
																<sci:value>600</sci:value>
																<sci:value>Style</sci:value>
																<sci:value>Table.Cell</sci:value>
															</sci:arg>
															<sci:arg name="Data Options" type="GroupType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Options controlling the table data.&lt;/p&gt;</sci:help>
																<sci:member>Exclude Properties</sci:member>
																<sci:member>Column Order</sci:member>
																<sci:member>Array Value Display</sci:member>
																<sci:member>When Data Contains Reporting Information</sci:member>
																<sci:member>Aggregate Data</sci:member>
															</sci:arg>
															<sci:arg name="Exclude Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;A comma-delimited list of properties which will not be rendered in an autogenerated table.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Column Order" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;A comma-separated list of Header Text names (which may differ from the corresponding property names), indicating the order the columns should appear. Any non-listed properties will be added as subsequent columns.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The column names are case-sensitive&lt;/li&gt;
&lt;/ul&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Array Value Display" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Determines how array values are separated when they are displayed in an autogenerated table.&lt;/p&gt;</sci:help>
																<sci:legalval>Separate by Commas</sci:legalval>
																<sci:legalval selected="true">Separate by Newlines</sci:legalval>
																<sci:legalval>One Array Element per Cell</sci:legalval>
															</sci:arg>
															<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;If True, all incoming data records are aggregated into a single output record. If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.&lt;/p&gt;</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="When Data Contains Reporting Information" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Determines whether the table shows all the properties of data records that already have reporting information.&lt;/p&gt;</sci:help>
																<sci:legalval>Display Reporting Information Only</sci:legalval>
																<sci:legalval selected="true">Display Reporting Information and All Properties</sci:legalval>
															</sci:arg>
															<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
																<sci:member>Link Target</sci:member>
																<sci:member>HTML Attributes</sci:member>
																<sci:member>Tooltip</sci:member>
																<sci:member>Data Connector</sci:member>
															</sci:arg>
															<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
															</sci:arg>
															<sci:arg name="Tooltip" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>An optional tooltip for this reporting element.</sci:help>
															</sci:arg>
															<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
															</sci:arg>
															<sci:arg name="Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
																<sci:member>Subscriber Event Handling</sci:member>
																<sci:member>Publisher Event Handling</sci:member>
																<sci:member>Publisher Subscriber Model</sci:member>
															</sci:arg>
															<sci:arg name="Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
																<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
																<sci:legalval>Publisher</sci:legalval>
																<sci:legalval>Subscriber</sci:legalval>
																<sci:legalval>None</sci:legalval>
															</sci:arg>
															<sci:arg name="Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
																<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
																<sci:legalval selected="true">Highlight</sci:legalval>
																<sci:legalval>Filter</sci:legalval>
																<sci:legalval>Reverse Filter</sci:legalval>
															</sci:arg>
															<sci:arg name="Publisher Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>&lt;p&gt;Setting the publishing event type.&lt;/p&gt;</sci:help>
																<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Publisher Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Subscriber&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Subscriber&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
																<sci:legalval selected="true">On Click</sci:legalval>
																<sci:legalval>On Mouse Over</sci:legalval>
															</sci:arg>
															<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
																<sci:member>Column Settings Header Text</sci:member>
																<sci:member>Column Settings Header Format</sci:member>
																<sci:member>Column Settings Header Position</sci:member>
																<sci:member>Column Settings Cell Format</sci:member>
																<sci:member>Column Settings Cell Position</sci:member>
															</sci:arg>
															<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
																<sci:value>$(_2D_PropName)</sci:value>
															</sci:arg>
															<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>600</sci:value>
															</sci:arg>
															<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
															</sci:arg>
															<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>600</sci:value>
															</sci:arg>
															<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
																<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true" expanded="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false" expanded="true">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true" expanded="true">
																<sci:value>100</sci:value>
																<sci:value>Creates a table in a report by collecting data records and displaying them in rows and columns</sci:value>
																<sci:value>&lt;p&gt;There are three ways you can create tables:&lt;/p&gt;

&lt;ul&gt;

&lt;li&gt;&lt;b&gt;Auto-generated:&lt;/b&gt; Quickly build a table by adding one Table component in a report, immediately following data (i.e., blue) components). The Table component takes your data sources and creates one column for each property on your data stream. The table includes some pre-set formats to save you time. &lt;/li&gt; 

&lt;li&gt;&lt;b&gt;Column-generated:&lt;/b&gt; You specify the content of your data source that should be used in the table. For each data property to include, add a component defining the content (e.g., &lt;a href=&quot;javascript:DoLink(&apos;{34E6C845-4ACB-4212-BBA3-7422213D458F}&apos;)&quot;&gt;Text&lt;/a&gt; or a chart component, plus a separate &lt;a href=&quot;javascript:DoLink(&apos;{EB2E16E8-D13E-4C7F-BB46-0E06502A6833}&apos;)&quot;&gt;Column component&lt;/a&gt; for each column of the table to be created.  Branch the data source to each pair of content/Column components and then pipe all of them into a single Table component. Each column is added to the table in the order it is shown visually in the protocol (top to bottom).  Each column in a table must have the same number of rows.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;In-line:&lt;/b&gt; Similar to Column-generated but instead of branching the data for each column of the table, place the &quot;content&quot; components in the sequence for the final table and then pipe this into a Table component.  In each content component, use the Column Settings components to define column header and cell options.&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Input can be raw data records, column objects or a sequence of Reporting components.</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>A data record representing the table is sent to the pass port.</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.0.0.14</sci:value>
															</sci:arg>
															<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																<sci:value>DrainTopDown</sci:value>
															</sci:arg>
															<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
																<sci:value>com.scitegic.report.component.TableComponent</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																<sci:value>1890 -455</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
																<sci:value>REPORTTABLENODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																<sci:value>{8DD32465-CB99-4A1E-870D-1A2F56D2C249}</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Plug In</sci:value>
															</sci:arg>
															<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>scitegic/report</sci:value>
															</sci:arg>
															<sci:arg name="ClasspathShortcut" type="URLType" required="false" visibility="nevershow" multi="false">
																<sci:value>..\bin\lang\java\reportgeneration\Classpath.txt</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>9</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/report</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Feb 12 11:46:16 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
																<sci:value>Table</sci:value>
															</sci:arg>
															<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false" expanded="true">
																<sci:help>CaptureStdoutStderr</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
																<sci:value>Format</sci:value>
																<sci:value>Link Options</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Reporting and Visualization\Reporting\Elements\Table</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="2" to="0" type="true"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="3" to="4" type="true"/>
													<sci:connectid from="4" to="5" type="true"/>
													<sci:connectid from="5" to="6" type="true"/>
													<sci:connectid from="6" to="7" type="true"/>
													<sci:connectid from="7" to="9" type="true"/>
													<sci:connectid from="9" to="1" type="true"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@_2D_PropNameIndex++;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1266 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="Data to Pass Port" version="2">
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>PassDataToPort</sci:value>
													</sci:arg>
													<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>the port to pass data to</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Data to Pass Port</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{3162E91B-4C82-4303-BCF1-C4D59B36709E}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>834 -595</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Directs records to the Pass port for use in subprotocol building.</sci:value>
														<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Pass port of the subprotocol.</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>All data records</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.4.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>5</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Pass Port</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:connectid from="0" to="1" type="true"/>
											<sci:connectid from="1" to="2" type="true"/>
											<sci:connectid from="1" to="5" type="false"/>
											<sci:connectid from="2" to="3" type="true"/>
											<sci:connectid from="3" to="4" type="true"/>
											<sci:connectid from="4" to="1" type="true"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>NumValues(@_3D_PropNames) &gt; 0</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Has 3D Properties?</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1290 -365</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="Data to Pass Port" version="2">
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Data to Pass Port</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{3162E91B-4C82-4303-BCF1-C4D59B36709E}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1590 -455</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Directs records to the Pass port for use in subprotocol building.</sci:value>
												<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Pass port of the subprotocol.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value>All data records</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.0.4.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>6</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Pass Port</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:connectid from="4" to="0" type="true"/>
									<sci:connectid from="4" to="6" type="false"/>
									<sci:connectid from="0" to="1" type="true"/>
									<sci:connectid from="1" to="2" type="true"/>
									<sci:connectid from="1" to="3" type="false"/>
									<sci:connectid from="2" to="3" type="true"/>
									<sci:connectid from="3" to="5" type="true"/>
									<sci:connectid from="3" to="6" type="false"/>
									<sci:version iVal="1"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>//Promote all metadata into globals
@Props := RPROPERTYNAMES(&apos;&apos;);
FOREACH #PROP IN @PROPS LOOP
	globalproperty(#PROP) := property(#PROP);
END LOOP;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>2490 -815</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>29</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Subprotocol" version="2">
									<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
										<sci:member>RunToCompletion Categorize Using</sci:member>
										<sci:legalval selected="true">False</sci:legalval>
										<sci:legalval>True - For Each Data Record</sci:legalval>
										<sci:legalval>True - For Each Category</sci:legalval>
									</sci:arg>
									<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
										<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>KNN embedding</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>SUBPROTOCOLNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>790</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>990 -995</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
										<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.2.0.1267</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>80</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/coreutils</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>6</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.GroupData.1">
										<sci:component name="Group Data by Tag" version="2">
											<sci:arg name="GroupUsing" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>The name of a property or list of properties separated by commas that act as a common key for those records to be grouped
</sci:help>
												<sci:member>GroupUsingListType</sci:member>
												<sci:value>Func</sci:value>
											</sci:arg>
											<sci:arg name="GroupUsingListType" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Indicates how &quot;GroupUsing&quot; properties are interpreted when  more than one property is listed:
 
    - UseFirstDefinedValue: Group using only the first property in the list with a defined value for a record.
 
  - UseAllValues: Groups using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.</sci:help>
												<sci:legalval>UseFirstDefinedValue</sci:legalval>
												<sci:legalval selected="true">UseAllValues</sci:legalval>
											</sci:arg>
											<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
												<sci:help>Contains less commonly used parameters</sci:help>
												<sci:member>GroupName</sci:member>
												<sci:member>Data Are Sorted</sci:member>
											</sci:arg>
											<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>If given, a new property called &quot;GroupName&quot; is created with this value. It can aid in unpacking only selected groups by name.
</sci:help>
												<sci:value>Data</sci:value>
											</sci:arg>
											<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;GroupUsing&lt;/i&gt; properties. If so, then the grouping can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Mar 16 08:27:06 2011</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{3FDE8197-D86F-4EB0-99FF-82D6430AF466}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;GroupUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>if (strlength(trim(parameter(&apos;GroupUsing&apos;, 2))) &gt; 0) then
	&quot;Group on &quot; . trim(parameter(&apos;GroupUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>JOINNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Group Data by Tag</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>498 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Groups all data records with the same property value into a single data record</sci:value>
												<sci:value>&lt;p&gt;&lt;i&gt;GroupUsing&lt;/i&gt; specifies the property or comma separated list of properties to use for determining which records will be grouped together.  These grouped data records can later be unbundled by &lt;i&gt;Ungroup Data&lt;/i&gt;.  Any records lacking the &lt;i&gt;GroupUsing&lt;/i&gt; key are sent out the Fail port.&lt;/p&gt;

&lt;p&gt;
One use of grouped data is to provide input to a subprotocol for which &lt;i&gt;RunToCompletion&lt;/i&gt; has been set to True. The subprotocol will then operate on each group independently. You would typically use &lt;i&gt;Ungroup Data&lt;/i&gt; as the first component of the subprotocol.
&lt;p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;No data are lost or changed when you create a grouped record from separate data records.  Grouping is simply a way to bundle records together.
&lt;li&gt;For the purpose of matching records to be grouped, the &lt;i&gt;GroupUsing&lt;/i&gt; property is treated as a string. (Thus, for example, the values &quot;1.0&quot; and &quot;1&quot; do not match.)
&lt;li&gt;The new data record has three properties defined at the top level:
	&lt;ul&gt;
	&lt;li&gt;&lt;b&gt;GroupName&lt;/b&gt; contains the name of the group as specified by the parameter &lt;i&gt;GroupName&lt;/i&gt;.&lt;/li&gt;  
	&lt;li&gt;&lt;b&gt;NumberInGroup&lt;/b&gt; contains the number of records in the group. 
	&lt;li&gt; The properties named by &lt;i&gt;GroupUsing&lt;/i&gt; contain the values of these properties shared by all members of the group.&lt;/li&gt;
	&lt;/ul&gt;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To group every N data records together as an alternative to using a &lt;i&gt;GroupUsing&lt;/i&gt; property, use &lt;a href=&quot;javascript:DoLink(&apos;{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}&apos;)&quot;&gt;Group Data by Number&lt;/a&gt;
&lt;li&gt;To separate the grouped data into the original records, use &lt;a href=&quot;javascript:DoLink(&apos;{57833F08-BD53-42AE-A14C-87EED61B8FBD}&apos;)&quot;&gt;Ungroup Data&lt;/a&gt;.  You would typically use Ungroup Data as the first component of a &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocol designed to operate on grouped data.
&lt;li&gt;For a different approach to combining data records, analogous to a database join operation, see &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records, each containing a collection of grouped records stored in a hierarchy</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records that lack the &lt;i&gt;GroupUsing&lt;/i&gt; property</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>8.4.5.20</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Data Manipulators\Group Data by Tag</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Subprotocol" version="2">
											<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
												<sci:member>RunToCompletion Categorize Using</sci:member>
												<sci:legalval>False</sci:legalval>
												<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
												<sci:legalval>True - For Each Category</sci:legalval>
											</sci:arg>
											<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
												<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
												<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
												<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
												<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
												<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
												<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
												<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Keep Half</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>SUBPROTOCOLNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>790</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>834 -95</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
												<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>17.2.0.1267</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>80</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/coreutils</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@Keep := floor(NumberInGroup/2);</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>5</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.UngroupData.1">
												<sci:component name="Ungroup Data" version="2">
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>GroupName</sci:member>
													</sci:arg>
													<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>(Optional) Restricts the ungroup process to only those groups having the given name -- the same name as specified by the &quot;Group Data&quot; component</sci:help>
														<sci:value>Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jan 19 10:40:59 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Ungroup Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>GENERATORNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Ungroup Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{57833F08-BD53-42AE-A14C-87EED61B8FBD}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>390 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Separates data records previously grouped together into the original records</sci:value>
														<sci:value>&lt;p&gt;The input record is assumed to be a grouped data record.  The individual records are extracted from the group and sent out the Pass port.  The incoming data record is discarded.&lt;/p&gt;

&lt;p&gt;You would typically use Ungroup Data as the first component inside a &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocol that expects grouped data.  This executes the remainder of the subprotocol over the individual data records in the group.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;It is possible to have a group which in turn has another group as one of its members (nested groups). In this case, ungrouping will separate only the top level groups. Multiple Ungroup Data components operating in series are needed to separate nested groups.&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To group data records together use &lt;a href=&quot;javascript:DoLink(&apos;{3FDE8197-D86F-4EB0-99FF-82D6430AF466}&apos;)&quot;&gt;Group Data by Tag&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}&apos;)&quot;&gt;Group Data by Number&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To view the structure of grouped data records use &lt;a href=&quot;javascript:DoLink(&apos;{AA4369ED-A1A1-4949-8520-39B23096ACFD}&apos;)&quot;&gt;Data Record Tree Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To learn more about &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocols, see the parameter help on &lt;a href=&quot;javascript:DoLink(&apos;{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}&apos;)&quot;&gt;Subprotocol&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with a hierarchical group of other data records</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>The individual data records that were contained within a hierarchical group of the incoming data</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records on which the GroupName property is missing</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.6</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Ungroup Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Add Random Number Property" version="2">
													<sci:arg name="Output" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Indicates the name of the property to
receive the randomly generated number</sci:help>
														<sci:legalval type="DoubleType" selected="true">RandomNumber</sci:legalval>
													</sci:arg>
													<sci:arg name="Seed" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>A user-specified number to initialize the random number generation the first time.  Leave this blank if you would like to get a different random series each time you run the protocol.</sci:help>
														<sci:value>3333</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Set up the random number seed.</sci:help>
														<sci:value>srand($(seed));</sci:value>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>The calculation of the random number.</sci:help>
														<sci:value>%&apos;$(Output)&apos; := Rand();
TRUE;</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Not used.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
														<sci:help>Add any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Argument Description</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Oct 30 19:41:39 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Add Random Number Property</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>RandomNumber</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>CALCULATORNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0BD882F6-F202-42E0-8DE4-2463C2B2207B}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>690 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Generates a random number</sci:value>
														<sci:value>A random number, uniformly distributed in the range [0, 1), is calculated for each record and assigned to a property named &lt;b&gt;RandomNumber&lt;/b&gt;. To get a different sequence of random numbers, change &lt;i&gt;Seed&lt;/i&gt;.  To get a different sequence of random numbers each time you run the protocol, leave &lt;i&gt;Seed&lt;/i&gt; blank.</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records with the random number property added</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Add Random Number Property</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">6.0.1.5</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.SortData.1">
												<sci:component name="Sort Data" version="2">
													<sci:arg name="Sort By" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
														<sci:help>Defines properties for sorting. Use this parameter to add, remove and reorder properties to be used for sorting.</sci:help>
														<sci:member>Property 1</sci:member>
														<sci:member>Property 2</sci:member>
														<sci:member>Property 3</sci:member>
													</sci:arg>
													<sci:arg name="Property 1" type="PropertyNameType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The property to sort by.</sci:help>
														<sci:member>Property 1 Sort Order</sci:member>
														<sci:member>Property 1 Sort As</sci:member>
														<sci:value>RandomNumber</sci:value>
													</sci:arg>
													<sci:arg name="Property 1 Sort Order" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to sort in ascending or descending order.</sci:help>
														<sci:legalval selected="true">Ascending</sci:legalval>
														<sci:legalval>Descending</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 1 Sort As" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">Numbers</sci:legalval>
														<sci:legalval>Text</sci:legalval>
														<sci:legalval>Case Sensitive Text</sci:legalval>
														<sci:legalval>Text Containing Numbers</sci:legalval>
														<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
														<sci:legalval>Dates</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 2" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>The property to sort by.</sci:help>
														<sci:member>Property 2 Sort Order</sci:member>
														<sci:member>Property 2 Sort As</sci:member>
													</sci:arg>
													<sci:arg name="Property 2 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort in ascending or descending order.</sci:help>
														<sci:legalval selected="true">Ascending</sci:legalval>
														<sci:legalval>Descending</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 2 Sort As" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">Numbers</sci:legalval>
														<sci:legalval>Text</sci:legalval>
														<sci:legalval>Case Sensitive Text</sci:legalval>
														<sci:legalval>Text Containing Numbers</sci:legalval>
														<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
														<sci:legalval>Dates</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 3" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>The property to sort by.</sci:help>
														<sci:member>Property 3 Sort Order</sci:member>
														<sci:member>Property 3 Sort As</sci:member>
													</sci:arg>
													<sci:arg name="Property 3 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort in ascending or descending order.</sci:help>
														<sci:legalval selected="true">Ascending</sci:legalval>
														<sci:legalval>Descending</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 3 Sort As" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">Numbers</sci:legalval>
														<sci:legalval>Text</sci:legalval>
														<sci:legalval>Case Sensitive Text</sci:legalval>
														<sci:legalval>Text Containing Numbers</sci:legalval>
														<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
														<sci:legalval>Dates</sci:legalval>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>You can provide this to only return this number of records. This is useful when you only want to see the &quot;best&quot; record or records.</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Mar 27 13:39:02 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>/* Start from &apos;Property 1&apos; since it must be defined.
   Keep this following line for the client auto-rename to use.
	 Parameter(&apos;Property 1&apos;), 
     Parameter(&apos;Property 2&apos;), 
	 Parameter(&apos;Property 3&apos;)
	 Parameter(&apos;Property 4&apos;)
	 Parameter(&apos;Property 5&apos;)
 */
if (trim(strlength(parameter(&apos;Property 1&apos;, 2))) &gt; 0) then
	#name := &quot;Sort on &quot; . trim(parameter(&apos;Property 1&apos;, 2));
	
	/* Get other sort properties that have values */
	#paramKey := &apos;Property &apos;;
	#count := 2;
	#paramName := #paramKey . #count;

	while (#count &lt;= 5 and parameter(#paramName, 2) is defined)
	loop
		if (strlength(parameter(#paramName, 2)) &gt; 0) then		
			#name := #name . &apos;, &apos;;
			#name := #name . parameter(#paramName, 2);
		end if;
	
		#count++;
		#paramName := #paramKey . #count;
	end loop;
	#name;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Sort Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{BC934106-6EA5-44e1-93C3-8787DECA9D15}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>990 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Sorts data records according to one or more properties</sci:value>
														<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sort By&lt;/i&gt; parameter to add more properties for sorting.&lt;/p&gt;

&lt;p&gt;When multiple properties are used by sorting, the property values of &lt;i&gt;Property 1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;Property 2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;Property 3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The order of sorting can be changed using &lt;i&gt;Sort Order&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;li&gt;Records containing Null or undefined &lt;i&gt;Sort By&lt;/i&gt; properties will be output to the Fail Port.
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records in sorted order</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records that do not contain the sort field(s)</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1396</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Sort Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="Remove Properties" version="2">
													<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
														<sci:help>The names of properties to remove from each data record entering the component</sci:help>
														<sci:value>RandomNumber</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>Remove</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Sep 13 07:18:43 2016</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;PropertyList&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Remove &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>true</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1290 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Removes the specified properties</sci:value>
														<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records with the specified properties removed</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>17.1.0.119</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.RangeScreen.1">
												<sci:component name="Range Filter" version="2">
													<sci:arg name="List" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>A list of which data records to pass:
  e.g.,  1,3-5,7,10-11
     will pass the first, third, fourth, fifth and so on.</sci:help>
														<sci:value>1-$(Keep)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Dec 13 12:38:32 2002</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;List&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>if (strlength(parameter(&apos;List&apos;, 2)) &gt; 0) then
	&quot;Filter range &quot; . parameter(&apos;List&apos;, 2);
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0C71D911-BF35-4A1B-8B2C-B9A586BD39F3}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Range Filter</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1590 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records within a specified range based on the order in which they arrive</sci:value>
														<sci:value>&lt;p&gt;Data records are numbered consecutively (from 1) as they arrive at the component.  The record numbers specified by &lt;i&gt;List&lt;/i&gt; are sent out the Pass port. Records not specified are sent out the Fail port.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;List&lt;/i&gt; items need to be entered as comma-separated values. &lt;i&gt;List&lt;/i&gt; can accept single item indices or ranges (such as &quot;1-5,7,9,13-15&quot;).&lt;/p&gt; 

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records whose indices match the specified list</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records whose indices do not match the specified list</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>6</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Filters\Range Filter</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:connectid from="5" to="0" type="true"/>
											<sci:connectid from="0" to="1" type="true"/>
											<sci:connectid from="1" to="2" type="true"/>
											<sci:connectid from="2" to="3" type="true"/>
											<sci:connectid from="3" to="6" type="true"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Add Tag Property" version="2">
											<sci:arg name="TagName" type="PropertyNameType" required="true" visibility="visible" multi="false">
												<sci:help>Name of a new property to create to serve as a tag</sci:help>
												<sci:value>Training</sci:value>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
												<sci:value>Property(&apos;$(TagName)&apos;) := true;</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)
</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
												<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue Sep 13 07:36:32 2016</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Add Tag Property</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{BCF71EB2-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1266 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Tags data records with a specified property name for later identification</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, a new property is created and assigned a value of True.  The name of the property is specified by &lt;i&gt;TagName&lt;/i&gt;.  Data records tagged in this way can be identified in downstream components by checking whether the property is defined. This is useful for marking a data stream prior to combining it with other streams for learning or other operations.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;An alternative method for tagging records is available in most reader component by using &lt;i&gt;SourceTag&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To remove a tag, use &lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To separate tagged data records into a separate data stream, use &lt;a href=&quot;javascript:DoLink(&apos;{F69870E0-BAF7-43E4-8B09-F53C47DB94F3}&apos;)&quot;&gt;Remove Tagged Filter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To group data together by tag for use in run-to-completion subprotocols, use &lt;a href=&quot;javascript:DoLink(&apos;{3FDE8197-D86F-4EB0-99FF-82D6430AF466}&apos;)&quot;&gt;Group Data by Tag&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records with the additional tag property</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>17.1.0.119</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Add Tag Property</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="R K Nearest Neighbors" version="2">
											<sci:arg name="ClassificationProperty" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Property containing the classes or factors for each data record belonging to the training set.</sci:help>
												<sci:value>Func</sci:value>
											</sci:arg>
											<sci:arg name="TrainingSetTag" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Property that identifies the data records as belonging to the training set</sci:help>
												<sci:value>Training</sci:value>
											</sci:arg>
											<sci:arg name="TestSetTag" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Property that identifies the data records as belonging to the test set</sci:help>
												<sci:value>Testing</sci:value>
											</sci:arg>
											<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:help>The properties to use: 
  &apos;AllPropertiesOnFirstData&apos; uses all those that are found on the first data object;
  &apos;CalculablePropertiesOnFirstData&apos; uses all those that are found on the first data that can be calculated;
  &apos;UserSet&apos; takes the list of properties from the parameter UserSet. Property ranges can be given by giving the first and last property in the range separated by a hyphen; properties can be referred to by index using the word &quot;Column&quot; followed by the index, i.e., Column3-Column10.</sci:help>
												<sci:member>UserSet</sci:member>
												<sci:member>PredefinedSet</sci:member>
												<sci:member>IgnoreProperties</sci:member>
												<sci:legalval>AllPropertiesOnFirstData</sci:legalval>
												<sci:legalval>CalculablePropertiesOnFirsrData</sci:legalval>
												<sci:legalval>PredefinedSet</sci:legalval>
												<sci:legalval selected="true">UserSet</sci:legalval>
											</sci:arg>
											<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="true">
												<sci:help>A predefined set of properties to use</sci:help>
												<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
												<sci:legalval selected="true">ALogP</sci:legalval>
												<sci:legalval selected="true">Molecular_Weight</sci:legalval>
												<sci:legalval selected="true">Num_H_Donors</sci:legalval>
												<sci:legalval selected="true">Num_H_Acceptors</sci:legalval>
												<sci:legalval selected="true">Num_RotatableBonds</sci:legalval>
												<sci:legalval selected="true">Num_Atoms</sci:legalval>
												<sci:legalval selected="true">Num_Rings</sci:legalval>
												<sci:legalval selected="true">Num_AromaticRings</sci:legalval>
												<sci:legalval>Molecular_Solubility</sci:legalval>
												<sci:legalval>Molecular_SurfaceArea</sci:legalval>
												<sci:legalval>Molecular_PolarSurfaceArea</sci:legalval>
												<sci:legalval>AlogP_Count</sci:legalval>
												<sci:legalval>Estate_Keys</sci:legalval>
												<sci:legalval>Estate_Counts</sci:legalval>
												<sci:legalval>MDLPublicKeys</sci:legalval>
												<sci:legalval>FCFP_2</sci:legalval>
												<sci:legalval>FCFP_4</sci:legalval>
												<sci:legalval>FCFP_6</sci:legalval>
												<sci:legalval>ECFP_2</sci:legalval>
												<sci:legalval>ECFP_4</sci:legalval>
												<sci:legalval>ECFP_6</sci:legalval>
											</sci:arg>
											<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>A comma-separated list of properties to use. If an item on the list contains a hyphen, and the names on either side are defined on the first data item, then all properties in that range are added.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
												<sci:value>$(Feat)</sci:value>
											</sci:arg>
											<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>A comma-separated list of properties to ignore. This is used, for example, if UseProperties is AllPropertiesOnFirstData, but there is a small set of undesirable properties you don&apos;t wish to use but can&apos;t remove (i.e., record names)</sci:help>
											</sci:arg>
											<sci:arg name="NumberOfNeighbors" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>Number of neighbors to use in the knn algorithm</sci:help>
												<sci:value>6</sci:value>
											</sci:arg>
											<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>Contains less commonly used parameters</sci:help>
												<sci:member>Fixed Length</sci:member>
												<sci:member>ShowRInputOutput</sci:member>
												<sci:member>Convert Fingerprints To</sci:member>
											</sci:arg>
											<sci:arg name="Convert Fingerprints To" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>Specifies the format into which fingerprints are to be transformed in order to be compatible with the R data frame format.  Options are:
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;Fixed-Length Array of Bits: Fingerprints are &quot;folded&quot; to a smaller size given by &lt;i&gt;Fixed Length&lt;/i&gt;, with each member of the fixed length array equal to 0 or 1.  For each &quot;on&quot; bit B in the original fingerprint, the array element whose index is B modulo L is set to 1, where L is the fixed length.
&lt;li&gt;Fixed-Length Array of Counts: Fingerprints are &quot;folded&quot; to a smaller size given by &lt;i&gt;Fixed Length&lt;/i&gt;, with each member of the fixed length array equal to 0 or greater.  For each &quot;on&quot; bit B in the original fingerprint, the value of the array element whose index is B modulo L is incremented by 1.
&lt;/ul&gt;</sci:help>
												<sci:legalval>Fixed-Length Array of Bits</sci:legalval>
												<sci:legalval selected="true">Fixed-Length Array of Counts</sci:legalval>
											</sci:arg>
											<sci:arg name="Fixed Length" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
												<sci:value>256</sci:value>
											</sci:arg>
											<sci:arg name="ShowRInputOutput" type="StringType" required="false" visibility="visible" multi="true">
												<sci:help>Specify whether or not to show the R script and the R stdout in Notepad viewers.</sci:help>
												<sci:legalval>Script</sci:legalval>
												<sci:legalval>StdOutput</sci:legalval>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
												<sci:value>RExitStatus,PlotName,RFunctionsFile,pass,CalculatedProperties,calcProps,ShowrScript,ShowRStdOutput,PointInfoText,stderr,RParScript,RPlotWidth,RPlotHeight</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:value>$(R_Run_Remote)</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>100000000</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>$(R_Server)</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Jul 20 08:59:58 2017</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>R KNN</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>CalculatorNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{57ECF0D3-ED71-4B14-894A-70FBDCC3D5CC}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1674 -245</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Classifies samples using R function &quot;knn&quot;</sci:value>
												<sci:value>Uses a k-nearest neighbors (knn) method to classify incoming data records into one of a set of classes (categories).  The knn approach is an example of &quot;instance-based learning&quot; which assumes that samples &quot;close&quot; to each other are likely to be of the same class. 
&lt;p&gt;
The known class for each sample tagged by the &lt;i&gt;TrainingSetTag&lt;/i&gt; property is given by the &lt;i&gt;ClassificationProperty&lt;/i&gt; property.  For each sample tagged by the &lt;i&gt;TestSetTag&lt;/i&gt; property, the &lt;i&gt;NumberOfNeighbors&lt;/i&gt; nearest neighbors to this sample are located from the training set samples.  The sample is then assigned to a class as determined by majority vote among these neighbors.  (Any ties are broken at random.)
&lt;p&gt;
&lt;i&gt;UseProperties&lt;/i&gt; specifies the properties to use for determining the distances between samples.  Distances are computed using a Euclidean metric.
&lt;p&gt;
The component outputs only the data records in the test set, with the following two additional properties:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;KNN_Predicted_class&lt;/b&gt;: the predicted class to which the record belongs.
&lt;li&gt;&lt;b&gt;KNN_Probability&lt;/b&gt;: an estimate of the likelihood that the assigned class is correct.  This is simply the fraction of nearest neighbors (from the training set) belonging to this class.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;All properties given by &lt;i&gt;UseProperties&lt;/i&gt; should be numerical.  The values of any non-numerical properties will be replaced by arbitrary integer values.
&lt;li&gt;Requires R package &quot;class&quot;.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>18.1.0.1523</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>%VERSION 3%</sci:value>
												<sci:value>1850 -794 300 426</sci:value>
												<sci:value>255 255 0</sci:value>
												<sci:value>Modified version of KNN component that uses KNN3</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
												<sci:legalval>Cant Replace With Copy</sci:legalval>
												<sci:legalval>Cant Open</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Analysis\R K Nearest Neighbors</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Check R exe" version="2">
													<sci:arg name="Error Behavior" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies action to take in case of a problem with the Pipeline Pilot R configuration. Options are:
&lt;ul&gt;
&lt;li&gt;Default: For fatal errors such as a missing R executable, show a message in a dialog and halt the protocol if running from Pipeline Pilot; raise an exception if running from another client such as Web Port. For a non-fatal error such as an unsupported R version, show a message but do not halt the protocol if running from Pipeline Pilot; do nothing if running from another client.
&lt;li&gt;Message out Fail Port: For any type of error, send a message out the fail port in a property named &lt;b&gt;ErrorText&lt;/b&gt;. Do not raise an exception or display a message.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If the global property @SuppressRVersionWarning is set to True, no message is shown in the &quot;Default&quot; case for unsupported R versions.
&lt;/ul&gt;</sci:help>
														<sci:legalval selected="true">Default</sci:legalval>
														<sci:legalval>Message out Fail Port</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>ver,ErrorText,EnvOverride</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
														<sci:legalval>Cant Replace With Copy</sci:legalval>
														<sci:legalval>Cant Open</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Aug  1 05:48:46 2018</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Check R exe</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{320AE9ED-071D-4ad7-AE87-2D692FAED359}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Check R executable</sci:value>
														<sci:value>Checks that the global variable &apos;R_exe&apos;, which points to the location of the R executable, is defined, and that the R executable file is in the location specified by R_exe. </sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>19.1.0.1872</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Check R exe</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Set R IO to display" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>PilotScript expression to be evaluated.</sci:help>
														<sci:value>@ShowRScript := false;
@ShowRStdOutput := false;
for #i in 1 .. numvalues(@ShowRInputOutput) loop
   #s := @ShowRInputOutput[#i];
   if (#s eq &quot;Script&quot;) then 
      @ShowRScript := true;
   end if;
   if (#s eq &quot;StdOutput&quot;) then 
      @ShowRStdOutput := true;
   end if;
end loop;
</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>drogers</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Aug 26 13:07:26 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Set R I/O to display</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{E45B61F2-FFD5-49F2-9178-E35F2471E749}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>390 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Executes a PilotScript to rapidly manipulate data records.</sci:value>
														<sci:value>This component executes the PilotScript specified in the component. The component is used to build new, specialized data manipulation components.

The &apos;Expression&apos; is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.5.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Unknown</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.ClientTempFiles.1">
												<sci:component name="Create Tempfiles for R" version="2">
													<sci:arg name="Server Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma separated list of global parameter names (such as &quot;tmp1,tmp2&quot;) to assign with temporary filenames obtained from the server</sci:help>
														<sci:value>Rmodelfile, Rscriptfile, Rstdoutfile, Rinput1file, Rinput2file, Rinput3file, Rinput4file, Rinput5file, Routput1file,Routput2file, Routput3file, Routput4file, Routput5file</sci:value>
													</sci:arg>
													<sci:arg name="Client Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma separated list of global parameter names (such as &quot;ctmp1,ctmp2&quot;) to assign with temporary filenames obtained from the client</sci:help>
													</sci:arg>
													<sci:arg name="Force Forward Slashes" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to force all server tempfiles to use forward slashes; this is useful if the temp file name is used to communicate with a external program that cannot handle backslashes on Windows</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>mhassan</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jul 13 10:17:05 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Create Tempfiles for R</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{2BFBE007-9937-47EB-A9B4-B76491D99C59}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Client Temp Filenames</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>690 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Obtains temporary filenames from the client or the server that are added to the global property list.</sci:value>
														<sci:value>&lt;p&gt;These names can be used later within the protocol as global variables within component parameters or as PilotScript expressions. For example, if your component executes on the client, but requires specific files to be present, you can create a temporary file named &quot;clientTmpFile1&quot; and later refer to it in a parameter or PilotScript entry via &quot;$(clientTmpFile1)&quot;.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Server Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the server.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Client Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the client.&lt;/p&gt;

&lt;p&gt;All files created in this way are deleted when the protocol is closed or, in the case of client tempfiles, when the client starts up again. (They are not permanent files.)&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.100</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Create Tempfiles for R</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:value>if @IgnoreProperties eq &apos;&apos; then
     @IgnoreProperties := @ClassificationProperty;
else
     @IgnoreProperties .= &apos;,&apos; . @ClassificationProperty;
end if;
</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Oct 11 12:46:55 2005</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Ensure y is on ignore list</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -455</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Executes PilotScript to modify data records.</sci:value>
														<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>5.1.0.7</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.PropertyCalculator.1">
												<sci:component name="Calculate Properties" version="2">
													<sci:arg name="UseProperties" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>The properties to learn from: 
  &apos;AllPropertiesOnFirstData&apos; uses all those that are found
on the first data object;
  &apos;CalculablePropertiesOnFirstData&apos; uses all those that are
found on the first data that can be calculated;
  &apos;UserSet&apos; takes the list of properties from the parameter
UserSet.  Property ranges can be given by giving the first
and last property in the range separated by a hyphen; 
properties can be referred to by index using the word &quot;Column&quot;
followed by the index, i.e., Column3-Column10.
</sci:help>
														<sci:value>$(UseProperties)</sci:value>
													</sci:arg>
													<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>A predefined set of properties to use for learning</sci:help>
														<sci:value>$(PredefinedSet)</sci:value>
													</sci:arg>
													<sci:arg name="UserSet" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>A comma-separated list of properties to use for learning. 
If an item on the list contains a hyphen, and the names on either side are defined
on the first data item, then all properties in that range are added.</sci:help>
														<sci:value>$(UserSet)</sci:value>
													</sci:arg>
													<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>A comma-separated list of properties to ignore.  This is used, for example, if UseProperties is AllPropertiesOnFirstData, but there is a small set of undesirable properties you don&apos;t wish to use but can&apos;t remove (i.e., record names)</sci:help>
														<sci:value>$(IgnoreProperties)</sci:value>
													</sci:arg>
													<sci:arg name="PutPropertyListInGlobal" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>If given, the array of properties that are being calculated is placed into this global property when the first data is passed into the component.</sci:help>
														<sci:value>CalculatedProperties</sci:value>
													</sci:arg>
													<sci:arg name="PutCalculatedPropertiesInProperty" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>If given, the array of properties that are newly calculated for a particlar sample are placed into this property on each data</sci:help>
													</sci:arg>
													<sci:arg name="Convert Fingerprints To" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
														<sci:value>$(Convert Fingerprints To)</sci:value>
													</sci:arg>
													<sci:arg name="Fixed Length" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
														<sci:value>$(Fixed Length)</sci:value>
													</sci:arg>
													<sci:arg name="IllegalCharacters" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>If given, this is a regular expression that is applied to property names to discover illegal characters.  In this case, the illegal characters are replaced with underscores, and the original property names and the new property names added to the global values PropertyCalculatorOriginalNames and PropertyCalculatorNewNames, respectively.  This gives you the mapping from the original name to the internal R names.</sci:help>
														<sci:value>-|\s</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="RemoveCalculatedPropertiesInProperty" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Remove the properties listed in the particular property name</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jun 02 09:08:51 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Calculate Properties</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>CalculatorNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{22FFFABF-758F-406F-976F-46E680B2CBFF}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon</sci:help>
														<sci:value>Calculate Properties</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1290 -815</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value/>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Calculate Properties</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Keep only calculated properties" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
														<sci:value>
@calcProps :=  @CalculatedProperties;
expand(&apos;,&apos;, @calcProps);</sci:value>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>PilotScript expression to be evaluated.</sci:help>
														<sci:value>keep(@calcProps);</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:41 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>keep only calculated properties</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{98F24BEC-C0A3-48C6-AE87-44EDC894B19E}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1590 -815</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Executes a PilotScript to rapidly manipulate data records.</sci:value>
														<sci:value>This component executes the PilotScript specified in the component. The component is used to build new, specialized data manipulation components.

The &apos;Expression&apos; is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>5</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Unknown</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedWriter.1">
												<sci:component name="Delimited Text Writer" version="2">
													<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz to the filename. </sci:help>
														<sci:value>$(Rinput1file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What to do if the given file already exists.</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.)</sci:help>
														<sci:legalval>Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval selected="true">Comma</sci:legalval>
													</sci:arg>
													<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The delimiter to use between multiple value on a single property.  If None, 
then the multiple values are separated into their own columns.</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>What text to output when data for a given column is not present
  (leave empty enter text of choice)</sci:help>
													</sci:arg>
													<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to output column names</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to output a row which includes the column types</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>SpotfireFormat</sci:legalval>
														<sci:legalval>NDIFormat</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Includes the number of the record as the first
field for each record.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:18 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Write Input Data for R</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1890 -815</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a text file, separating the individual fields with a specified delimiter character. </sci:value>
														<sci:value>Writes data records to a text file, separating the records with a new line and the individual fields within a record with the character specified in the &apos;Delimiter&apos; character.  The property names for the fields will be stored as the first line of the file.

&apos;MultipleValueDelimiter&apos; controls properties with more than one value. If None, then they are written as multiple fields (e.g., prop[1], prop[2] ...). Else, they are written into a single value separated by the chosen delimiter.

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>6</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Remove Properties" version="2">
													<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The names of properties to be removed.</sci:help>
														<sci:value>$(TrainingSetTag)</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
														<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
														<sci:value>list</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
														<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jun 15 10:33:33 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Remove properties</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>true</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>990 -995</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Removes the specified properties from the property list.</sci:value>
														<sci:value>Removes the properties specified in the PropertyList and passes the remainder to the output port.&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Keep Properties&quot;. To keep only a few properties from a long list, it may be more efficient to specify those properties to the &quot;Keep Properties&quot; component.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with the specified properties removed</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.100</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Make Shortcut by Default</sci:legalval>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>7</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Internal Remove Properties" version="2">
															<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The list of property names that we wish to keep</sci:help>
																<sci:value>$(PropertyList)</sci:value>
															</sci:arg>
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to be evaluated.</sci:help>
																<sci:value>remove(@list);</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
																<sci:value>@list := &apos;$(propertyList)&apos;;
expand(&apos;,&apos;, @list);</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
																<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>CustomErrorText</sci:help>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>Sets the Components Icon</sci:help>
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Apr 26 11:22:01 2002</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Display Name</sci:help>
																<sci:value>Remove properties</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Component RunTimeID</sci:help>
																<sci:value>{C7AD8995-C647-11D4-9D08-0050DA2F1AAC}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Disabled</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>GUID</sci:help>
																<sci:value>{C2ED35AA-6401-4877-AADB-10F1A15D60E2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:help>Fancy Help</sci:help>
																<sci:value>100</sci:value>
																<sci:value>Removes the specified properties from the property list.</sci:value>
																<sci:value>Removes the properties specified in the PropertyList and passes the remainder to the output port.&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Keep Properties&quot;. To keep only a few properties from a long list, it may be more efficient to specify those properties to the &quot;Keep Properties&quot; component.&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records with the specified properties removed</sci:value>
																<sci:value>none</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Component Point</sci:help>
																<sci:value>85 -50</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Keep Properties" version="2">
													<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The names of properties to be kept.</sci:help>
														<sci:value>$(ClassificationProperty)</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
														<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
														<sci:value>list</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
														<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jun 02 14:33:20 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>keep Dependent Property</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>true</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1290 -1175</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Removes all but the specified properties from the property list.
</sci:value>
														<sci:value>The component will keep only the properties listed in the PropertyList parameter and delete all the rest.&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Remove Properties&quot; - to remove only a few properties from a long list it is more efficient to list those to the &quot;Remove Properties&quot; component than all the ones to keep to the &quot;Keep Properties&quot; component.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>With only the specified properties remaining</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Make Shortcut by Default</sci:legalval>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>8</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep or Reorder Properties</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Internal Keep Properties" version="2">
															<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The list of property names that we wish to keep</sci:help>
																<sci:value>$(PropertyList)</sci:value>
															</sci:arg>
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to be evaluated.</sci:help>
																<sci:value>keep(@list);</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
																<sci:value>@list := &apos;$(propertyList)&apos;;
expand(&apos;,&apos;, @list);</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
																<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>CustomErrorText</sci:help>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>Sets the Components Icon</sci:help>
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Apr 26 11:22:01 2002</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Display Name</sci:help>
																<sci:value>Keep properties</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Component RunTimeID</sci:help>
																<sci:value>{C7AD8995-C647-11D4-9D08-0050DA2F1AAC}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Disabled</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>GUID</sci:help>
																<sci:value>{456106AA-980A-4367-B3DD-21EBF3796604}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:help>Fancy Help</sci:help>
																<sci:value>100</sci:value>
																<sci:value>Removes all but the specified properties from the property list.
		</sci:value>
																<sci:value>The component will keep only the properties listed in the PropertyList parameter and delete all the rest.&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Remove Properties&quot; - to remove only a few properties from a long list it is more efficient to list those to the &quot;Remove Properties&quot; component than all the ones to keep to the &quot;Keep Properties&quot; component.&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>With only the specified properties remaining</sci:value>
																<sci:value>none</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Component Point</sci:help>
																<sci:value>85 -50</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Location of the component in the database.</sci:help>
																<sci:value>Component Not Found</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Component Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.DelimitedWriter.1">
												<sci:component name="Delimited Text Writer" version="2">
													<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz to the filename. </sci:help>
														<sci:value>$(Rinput2file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What to do if the given file already exists.</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.)</sci:help>
														<sci:legalval>Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval selected="true">Comma</sci:legalval>
													</sci:arg>
													<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The delimiter to use between multiple value on a single property.  If None, 
then the multiple values are separated into their own columns.</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>What text to output when data for a given column is not present
  (leave empty enter text of choice)</sci:help>
													</sci:arg>
													<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to output column names</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to output a row which includes the column types</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>SpotfireFormat</sci:legalval>
														<sci:legalval>NDIFormat</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Includes the number of the record as the first
field for each record.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:18 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Write Input Data for R</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1590 -1175</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a text file, separating the individual fields with a specified delimiter character. </sci:value>
														<sci:value>Writes data records to a text file, separating the records with a new line and the individual fields within a record with the character specified in the &apos;Delimiter&apos; character.  The property names for the fields will be stored as the first line of the file.

&apos;MultipleValueDelimiter&apos; controls properties with more than one value. If None, then they are written as multiple fields (e.g., prop[1], prop[2] ...). Else, they are written into a single value separated by the chosen delimiter.

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>9</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>property(&apos;$(TrainingSetTag)&apos;) is defined</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed May 26 16:11:50 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>data is in training set</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>690 -1535</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Remove Properties" version="2">
													<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The names of properties to be removed.</sci:help>
														<sci:value>$(TestSetTag)</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
														<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
														<sci:value>list</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
														<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jun 15 10:33:33 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Remove properties</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>true</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1290 -1535</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Removes the specified properties from the property list.</sci:value>
														<sci:value>Removes the properties specified in the PropertyList and passes the remainder to the output port.&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Keep Properties&quot;. To keep only a few properties from a long list, it may be more efficient to specify those properties to the &quot;Keep Properties&quot; component.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with the specified properties removed</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.100</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Make Shortcut by Default</sci:legalval>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>11</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Internal Remove Properties" version="2">
															<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The list of property names that we wish to keep</sci:help>
																<sci:value>$(PropertyList)</sci:value>
															</sci:arg>
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to be evaluated.</sci:help>
																<sci:value>remove(@list);</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
																<sci:value>@list := &apos;$(propertyList)&apos;;
expand(&apos;,&apos;, @list);</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
																<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>CustomErrorText</sci:help>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>Sets the Components Icon</sci:help>
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Apr 26 11:22:01 2002</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Display Name</sci:help>
																<sci:value>Remove properties</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Component RunTimeID</sci:help>
																<sci:value>{C7AD8995-C647-11D4-9D08-0050DA2F1AAC}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Disabled</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>GUID</sci:help>
																<sci:value>{C2ED35AA-6401-4877-AADB-10F1A15D60E2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:help>Fancy Help</sci:help>
																<sci:value>100</sci:value>
																<sci:value>Removes the specified properties from the property list.</sci:value>
																<sci:value>Removes the properties specified in the PropertyList and passes the remainder to the output port.&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Keep Properties&quot;. To keep only a few properties from a long list, it may be more efficient to specify those properties to the &quot;Keep Properties&quot; component.&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records with the specified properties removed</sci:value>
																<sci:value>none</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Component Point</sci:help>
																<sci:value>85 -50</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.PropertyCalculator.1">
												<sci:component name="Calculate Properties" version="2">
													<sci:arg name="UseProperties" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>The properties to learn from: 
  &apos;AllPropertiesOnFirstData&apos; uses all those that are found
on the first data object;
  &apos;CalculablePropertiesOnFirstData&apos; uses all those that are
found on the first data that can be calculated;
  &apos;UserSet&apos; takes the list of properties from the parameter
UserSet.  Property ranges can be given by giving the first
and last property in the range separated by a hyphen; 
properties can be referred to by index using the word &quot;Column&quot;
followed by the index, i.e., Column3-Column10.
</sci:help>
														<sci:value>$(UseProperties)</sci:value>
													</sci:arg>
													<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>A predefined set of properties to use for learning</sci:help>
														<sci:value>$(PredefinedSet)</sci:value>
													</sci:arg>
													<sci:arg name="UserSet" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>A comma-separated list of properties to use for learning. 
If an item on the list contains a hyphen, and the names on either side are defined
on the first data item, then all properties in that range are added.</sci:help>
														<sci:value>$(UserSet)</sci:value>
													</sci:arg>
													<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>A comma-separated list of properties to ignore.  This is used, for example, if UseProperties is AllPropertiesOnFirstData, but there is a small set of undesirable properties you don&apos;t wish to use but can&apos;t remove (i.e., record names)</sci:help>
														<sci:value>$(IgnoreProperties)</sci:value>
													</sci:arg>
													<sci:arg name="PutPropertyListInGlobal" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>If given, the array of properties that are being calculated is placed into this global property when the first data is passed into the component.</sci:help>
														<sci:value>CalculatedProperties</sci:value>
													</sci:arg>
													<sci:arg name="PutCalculatedPropertiesInProperty" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>If given, the array of properties that are newly calculated for a particlar sample are placed into this property on each data</sci:help>
													</sci:arg>
													<sci:arg name="Convert Fingerprints To" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
														<sci:value>$(Convert Fingerprints To)</sci:value>
													</sci:arg>
													<sci:arg name="Fixed Length" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
														<sci:value>$(Fixed Length)</sci:value>
													</sci:arg>
													<sci:arg name="IllegalCharacters" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>If given, this is a regular expression that is applied to property names to discover illegal characters.  In this case, the illegal characters are replaced with underscores, and the original property names and the new property names added to the global values PropertyCalculatorOriginalNames and PropertyCalculatorNewNames, respectively.  This gives you the mapping from the original name to the internal R names.</sci:help>
														<sci:value>-|\s</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="RemoveCalculatedPropertiesInProperty" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Remove the properties listed in the particular property name</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jun 02 09:08:51 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Calculate Properties</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>CalculatorNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{22FFFABF-758F-406F-976F-46E680B2CBFF}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon</sci:help>
														<sci:value>Calculate Properties</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1590 -1535</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value/>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>12</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Calculate Properties</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Keep only calculated properties" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
														<sci:value>
@calcProps :=  @CalculatedProperties;
expand(&apos;,&apos;, @calcProps);</sci:value>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>PilotScript expression to be evaluated.</sci:help>
														<sci:value>keep(@calcProps);</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:41 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>keep only calculated properties</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{98F24BEC-C0A3-48C6-AE87-44EDC894B19E}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1890 -1535</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Executes a PilotScript to rapidly manipulate data records.</sci:value>
														<sci:value>This component executes the PilotScript specified in the component. The component is used to build new, specialized data manipulation components.

The &apos;Expression&apos; is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>13</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Unknown</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedWriter.1">
												<sci:component name="Delimited Text Writer" version="2">
													<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz to the filename. </sci:help>
														<sci:value>$(Rinput3file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What to do if the given file already exists.</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.)</sci:help>
														<sci:legalval>Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval selected="true">Comma</sci:legalval>
													</sci:arg>
													<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The delimiter to use between multiple value on a single property.  If None, 
then the multiple values are separated into their own columns.</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>What text to output when data for a given column is not present
  (leave empty enter text of choice)</sci:help>
													</sci:arg>
													<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to output column names</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to output a row which includes the column types</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>SpotfireFormat</sci:legalval>
														<sci:legalval>NDIFormat</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Includes the number of the record as the first
field for each record.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:18 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Write Input Data for R</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2190 -1535</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a text file, separating the individual fields with a specified delimiter character. </sci:value>
														<sci:value>Writes data records to a text file, separating the records with a new line and the individual fields within a record with the character specified in the &apos;Delimiter&apos; character.  The property names for the fields will be stored as the first line of the file.

&apos;MultipleValueDelimiter&apos; controls properties with more than one value. If None, then they are written as multiple fields (e.g., prop[1], prop[2] ...). Else, they are written into a single value separated by the chosen delimiter.

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>14</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Run R Script" version="2">
													<sci:arg name="RScriptExpression" type="ExpressionType" required="true" visibility="visible" multi="false">
														<sci:help>Expression defining the RScript property containing the script to be sent to R.</sci:help>
														<sci:value>/* R script to do KNN calculation calling the knn functions */

RScript := &apos;
source(&quot;$(RFunctionsFile)&quot;)
set.seed(1536)

# alldata has $xy (the data), $ynames (y names), $xnames (x names), and $y (y values).
alldata &lt;- readxy(yfile=&quot;$(Rinput2file)&quot;, xfile=&quot;$(Rinput1file)&quot;, outfile=&quot;$(Routput3file)&quot;, MakeYFactor=TRUE, removeZeroVar=FALSE)

attach(alldata)

testset &lt;- readData(&quot;$(Rinput3file)&quot;, omitNA=TRUE, removeZeroVar=FALSE)

# Retain indexes of kept records (keep defined in readData)
RKNNindex &lt;- (1:length(keep))[keep]

loadOrInstall(&quot;class&quot;)
library(caret)

# calculate KNN
knn_mod = knn3($(ClassificationProperty) ~ ., data = as.data.frame(xy), k = $(NumberOfNeighbors))

knnobject = predict(knn_mod, as.data.frame(testset), type = &quot;class&quot;)
fr &lt;- data.frame(knnobject, RKNNindex)
write.table(fr, file=&quot;$(Routput1file)&quot;, sep=&quot;,&quot;, col.names=T, row.names=F, quote=F, append = FALSE)

knnobject = predict(knn_mod, as.data.frame(testset), type = &quot;prob&quot;)
fr &lt;- data.frame(knnobject, RKNNindex)
write.table(fr, file=&quot;$(Routput2file)&quot;, sep=&quot;,&quot;, col.names=T, row.names=F, quote=F, append = FALSE)
&apos;</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>EnvOverride</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 30 11:47:31 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Run R Script</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{52541793-A244-485C-9B70-DC1DDD44DD6F}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -1625</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Execute R script, optionally displaying script and stdout</sci:value>
														<sci:value>Executes in R a script defined by RScriptExpression.  This is an internal component used by other R Statistics components.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1362</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>21</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R Script</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>@ShowRScript = True</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Show R script?</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FilterNode</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
																<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Notepad Viewer" version="2">
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of records to view.</sci:help>
															</sci:arg>
															<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Optional name of the document</sci:help>
																<sci:value>R_Script</sci:value>
															</sci:arg>
															<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
																<sci:member>CharacterEncoding</sci:member>
																<sci:member>HierarchyDepth</sci:member>
															</sci:arg>
															<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Indicates the character set that will be used within the file.
 
UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.
 
ANSI specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.
 
&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.
 
For more information about each of these encoding styles, go to http://www.unicode.org/</sci:help>
																<sci:legalval>ANSI</sci:legalval>
																<sci:legalval selected="true">UTF-8</sci:legalval>
																<sci:legalval>Unicode</sci:legalval>
																<sci:legalval>Unicode big endian</sci:legalval>
															</sci:arg>
															<sci:arg name="HierarchyDepth" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>Controls the maximum depth within hierarchical data records to display node and property information.  No hierarchical information will be displayed if depth is set to -1.  If no value is set, the default is 0.</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
																<sci:value>ClientFilePath,ServerFilePath</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>When the network runs, processes once or until done for each process call</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
																<sci:legalval>Cant Replace With Copy</sci:legalval>
																<sci:legalval>Cant Open</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Sep 12 07:46:27 2016</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Notepad Viewer</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ViewerNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{522F4A0B-DD0C-4C26-83DD-29A7B09F4461}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -95</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Displays data records in the Windows Notepad application</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>17.1.0.119</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Viewers\Notepad Viewer</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>$(RScriptExpression)</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
																<sci:value>@EnvOverride := &apos;LD_LIBRARY_PATH=&apos;;
if @R_LD_LIBRARY_PATH is defined then
	@EnvOverride .= @R_LD_LIBRARY_PATH;
end if;
</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>R script expression</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -395</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Executes PilotScript to modify data records.</sci:value>
																<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.1.1.400</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextWriter.1">
														<sci:component name="Text Writer" version="2">
															<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
																<sci:value>$(Rscriptfile)</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>What to do if the given file already exists.</sci:help>
																<sci:legalval selected="true">Overwrite</sci:legalval>
																<sci:legalval>Append</sci:legalval>
																<sci:legalval>Halt</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>List of which properties (separated by commas) will be written
  * means all properties</sci:help>
																<sci:value>*</sci:value>
															</sci:arg>
															<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies whether the name of each property 
is displayed along with its value(s)</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to preceed each record</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to be included after each record</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether to open the file in binary mode for outputting nontext information</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue May 18 12:07:19 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Write RScript</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DocumentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -395</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Writer</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Data records are formatted as text and written to a file. </sci:value>
																<sci:value>Data records are formatted as text written to disk as a &apos;Destination&apos; file.  Separation between data records can be indicated with user specified characters.
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited Text Writer&quot;. To write a file formatted with one record per row with delimiters between the data use the &quot;Delimited Text Writer&quot;&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.0.5.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextWriter.1">
														<sci:component name="Text Writer" version="2">
															<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
																<sci:value>$(JobDir)\Rscript.R</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>What to do if the given file already exists.</sci:help>
																<sci:legalval selected="true">Overwrite</sci:legalval>
																<sci:legalval>Append</sci:legalval>
																<sci:legalval>Halt</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>List of which properties (separated by commas) will be written
  * means all properties</sci:help>
																<sci:value>*</sci:value>
															</sci:arg>
															<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies whether the name of each property 
is displayed along with its value(s)</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to preceed each record</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to be included after each record</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether to open the file in binary mode for outputting nontext information</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue May 18 12:07:19 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Write RScript</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DocumentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -720</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Writer</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Data records are formatted as text and written to a file. </sci:value>
																<sci:value>Data records are formatted as text written to disk as a &apos;Destination&apos; file.  Separation between data records can be indicated with user specified characters.
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited Text Writer&quot;. To write a file formatted with one record per row with delimiters between the data use the &quot;Delimited Text Writer&quot;&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.0.5.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.RunProgram.1">
														<sci:component name="Run R" version="2">
															<sci:arg name="CommandLine" type="TextType" required="true" visibility="visible" multi="false">
																<sci:help>Command line for application or file to execute on the server machine.</sci:help>
																<sci:value>&quot;$(R_exe)&quot; --no-save --no-restore &lt; &quot;$(Rscriptfile)&quot; &gt; &quot;$(Rstdoutfile)&quot;</sci:value>
															</sci:arg>
															<sci:arg name="WaitForExit" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether or not to wait for the program to finish before returning from the process call.  This parameter must be set to True for StdinProperty, StdoutProperty, StderrProperty, or PropertyForExitStatus to function.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyForExitStatus" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name to hold the value of the program exit status code. Denote a global property with a leading @ character.
Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																<sci:value>@RExitStatus</sci:value>
															</sci:arg>
															<sci:arg name="StdinProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that holds the desired value of the program&apos;s standard input (stdin). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
															</sci:arg>
															<sci:arg name="StdoutProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that will hold the program&apos;s standard output (stdout). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
															</sci:arg>
															<sci:arg name="StderrProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that will hold the program&apos;s standard error (stderr). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																<sci:value>@stderr</sci:value>
															</sci:arg>
															<sci:arg name="Environment" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
																<sci:metaproplist>
																	<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAJeAlNwZWNpZmllcyBhZGRpdGlvbmFsIGVudmlyb25tZW50IHZhcmlhYmxlIHNldHRpbmdzIHRoYXQgd2lsbCBiZSB1c2VkIGJ5IHRoZSBzcGF3bmVkIHByb2Nlc3MuICBTcGVjaWZ5IGVhY2ggc2V0dGluZyBvbiBhIGxpbmUgYnkgaXRzZWxmIGFzICJ2YXJpYWJsZT1uYW1lIi4gIFRoZSBzcGF3bmVkIHByb2Nlc3Mgd2lsbCBpbmhlcml0IHRoZSBleGlzdGluZyBlbnZpcm9ubWVudCBvZiB0aGUgc2Npc3ZyIHByb2Nlc3MsIGFuZCBhbnkgc2V0dGluZ3MgaGVyZSB3aWxsIGJlIGFwcGVuZGVkIHRvIHRoZSB2YXJpYWJsZSBsaXN0LiAgVG8gbWFrZSB1c2Ugb2YgYW4gZXhpc3RpbmcgdmFyaWFibGUsIHN1cnJvdW5kIHRoZSB2YXJpYWJsZSBuYW1lIHdpdGggcGVyY2VudCBzaWducyAoZS5nLiAiUEFUSD1jOlxteWRpcjslUEFUSCUiKSAgTm90ZSB0aGF0IHRoaXMgc3ludGF4IHNob3VsZCBiZSB1c2VkIHdpdGggYm90aCBXaW5kb3dzIGFuZCBMaW51eCBzZXJ2ZXJzLiAgRHVlIHRvIE9TIGRlc2lnbnMsIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgY2FzZSBpbnNlbnNpdGl2ZSBvbiBXaW5kb3dzIHNlcnZlcnMgYW5kIGNhc2Ugc2Vuc2l0aXZlIG9uIExpbnV4IHNlcnZlcnMuJFRleHRUeXBlAAgAAAABAQABAAQA/AAAAAAAAAAAADBFbnZpcm9ubWVudAPMU8+7BAA=</sci:propval>
																	<sci:propval name="SCI_InitializeUsingOrigType">TextType</sci:propval>
																	<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
																	<sci:propval name="SCI_EvalOnInitType">TextType</sci:propval>
																</sci:metaproplist>
																<sci:help>Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the scisvr process, and any settings here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;)  Note that this syntax should be used with both Windows and Linux servers.  Due to OS designs, environment variables are case insensitive on Windows servers and case sensitive on Linux servers.</sci:help>
																<sci:value>EnvOverride</sci:value>
															</sci:arg>
															<sci:arg name="UseCommandInterpreter" type="BoolType" required="false" visibility="hidden" multi="false">
																<sci:help>Whether or not to add &quot;cmd.exe /c&quot; (or &quot;/bin/sh -c&quot; on Linux servers) to the command line.  This causes the command line to be interpreted through the operating systems standard command shell allowing the use of redirection specifiers such as &apos;&gt;&apos; and &apos;&lt;&apos; and piping via &apos;|&apos;.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Componet Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/rstats</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Dec 11 15:47:33 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8611ED9C-47D2-4EB1-A98B-CFB894E3840F}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Run R</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Run Program</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -1020</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Runs a Windows command line application on the server machine.</sci:value>
																<sci:value>&lt;p&gt;Define the command line by entering text as you would in a command prompt window. The component includes facilities for looking up a program name in the Windows registry. It can interpret a program name as a ProgID, such as &quot;InternetExplorer.Application&quot;, or as a shell command, such as &quot;IsisServer&quot;, or as a document to load into an associated program, such as &quot;c:\spreadsheet.xls&quot;.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;CommandLine&lt;/i&gt;: The command that the component will run. The correct syntax is the full command line exactly as you would type it in a shell command window. The first space- or quote-delimited item of the command line can be a ProgId, such as &quot;InternetExplorer.Application&quot;. This starts up Internet Explorer (IE) without having to specify the path to IE explicitly. Shell command associations are also supported, so &quot;IsisServer&quot; will start Isis Draw. Finally, there is support for file associations, so the path &quot;D:\docs\notes.doc&quot; will start Microsoft Word and load the specified document.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;WaitForExit&lt;/i&gt;: When TRUE, the data pipeline is blocked until the command has completed.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;PropertyForExitStatus&lt;/i&gt;: Allows you to assign the exit status of the command to a global property or to a data record property. Use either a global or local property reference, such as @status or status.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;UseCommandInterpreter&lt;/i&gt;: When True, parses the command line through the command interpreter on the remote server (with a shell such as csh or bash or the windows interpreter cmd.exe). In particular, this needs to be set to True if the CommandLine utilizes standard output or input (such as cmd.exe /c &amp;quot;c:\Program Files\R\rterm.exe&amp;quot; &amp;quot;0&amp;lt;$(CommandFile)&amp;quot;).&lt;/p&gt;
&lt;p&gt;&lt;i&gt;StdinProperty, StdoutProperty, and StderrProperty&lt;/i&gt;: Allows you to redirect standard communications to global properties or to data record properties. Use either a global or local property reference, such as @stdin or stdin.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Environment&lt;/i&gt;: Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the PipelinePilot process, and any settings defined here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;).  Since this will run on the Windows client, all environment variables are case insensitive.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt; If your command line includes a file path, create a new parameter for the component, of type URL, so the user can enter the path. Then use a token replacement in the CommandLine to pick up the value. For example: Notepad.exe &quot;$(SciTegicRoot)\$(Path)&quot;. &lt;/li&gt;
&lt;li&gt;When the component is separated from any other pipeline, the command line is run just once.&lt;/li&gt; &lt;li&gt;You can add an input or output pass port to the component, to integrate it with a pipeline. If there is an output port, but no input port, the command is run once and a single new record is generated. If there is an input port, then the command is run once for each data record passed in.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.2.0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Display R stdout" version="2">
															<sci:arg name="ControlProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>ControlProperty</sci:help>
																<sci:value>@ShowRStdOutput</sci:value>
															</sci:arg>
															<sci:arg name="Filename" type="StringType" required="true" visibility="visible" multi="false">
																<sci:value>$(Rstdoutfile)</sci:value>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/rstats</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 30 11:47:39 2017</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Display R stdout</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ViewerNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{2A8352DC-F36E-4D10-B8DE-EFF7E019C441}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -1320</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Display R standard output</sci:value>
																<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>18.1.0.1362</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Modified</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="2" to="0" type="true"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="2" to="6" type="true"/>
													<sci:version iVal="1"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>property(&apos;$(TestSetTag)&apos;) is defined</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed May 26 16:11:50 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>data is in test set</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>990 -1715</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>15</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name. Otherwise, it is considered a local property name.  
 - Globals are updated each time a data record is received.  
 - With local property names, the the property is added to each data record as they pass.

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RKNNIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index used to start the sequence</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generate an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Feb 01 16:29:46 2005</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1290 -1895</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of flowing data records.</sci:value>
														<sci:value>&lt;p&gt;A counter is incremented each time a new data record enters the component to 
  keep track of the total number. &lt;/p&gt;
&lt;p&gt;This component can operate in two modes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;If &lt;I&gt;Counter Property&lt;/I&gt; is a local name (does not start with @), a new 
    property is created holding the current count on each data record that passes 
    through. &lt;/li&gt;
  &lt;li&gt;If &lt;I&gt;Counter Property&lt;/I&gt; is a global name (starts with @), then each data 
    record that passes through causes the global record count to be incremented, 
    (but values are not added to the passing records). This global value can be 
    accessed by other components at any time. &lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>5.0.0.2</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>16</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedReader.1">
												<sci:component name="Delimited Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file(s) or URL source to read</sci:help>
														<sci:value>$(Routput1file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties that are to be retained in each data record output
by the reader component. If the value is left blank, then all properties
are retained. If the parameter contains the value &quot;-&quot; (minus sign), then
no properties are to be retained.</sci:help>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character which separates the fields in the file.
  To determine automatically use:   FigureOut  
  For &quot;tab&quot; delimited type:              tab
  For &quot;space&quot; delimited type:         space
  For &quot;comma&quot; delimited type:       comma
  For &quot;colon&quot; delimited type:          colon</sci:help>
														<sci:legalval>FigureOut</sci:legalval>
														<sci:legalval>Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval selected="true">Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
													</sci:arg>
													<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>When TRUE, property names are taken
from the first line of data in the file.  When
FALSE, properties will be called: Column1,
Column2, etc. by default</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records.  A property 
called &apos;SourceTag&apos; will be created and will hold the value indicated:
   None - no SourceTag property will be created, and any existing will be removed
   Filename - the name of the file read
   FilenameAndExtension - the name of the file read with it&apos;s file extension
   FullFilename - the name of the file read including the directory path
   Number - when multiple files are read in this component, they are numbered 1,2,3...
   Letter - when multiple files are read in this component, they are lettered A, B, C...
   KeepCurrent - keep the current value of SourceTag</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>Specifies the character or string used to represent an 
undefined string in the file being read</sci:help>
													</sci:arg>
													<sci:arg name="AllLines" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>When TRUE, all lines of the text file become
part of a single data record.  The values for
a column from each row become multiple [array]
values for the property (column).</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to trim whitespace from the left and right ends of each value</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:14 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R output</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>690 -2075</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads text files containing one record per line with data separated by delimiters.</sci:value>
														<sci:value>Reads textual data from one or more files that are formated with a single record per line. Individual data items on each line should be separated by a delimiter character (e.g. space, comma, tab). The first line is treated as column names for defining property names. If column names are not declared, they are given standard names of Column1, Column2, etc. 

This component should be used to read comma delimited text files from Excel (.csv).

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>22</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>PilotScript expression to be evaluated.</sci:help>
														<sci:value>rename(&apos;x&apos;, &apos;KNN_Predicted_&apos; . @ClassificationProperty);
</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri May 21 09:48:33 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Rename properties</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>990 -2075</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Executes a PilotScript to rapidly manipulate data records.</sci:value>
														<sci:value>This component executes the PilotScript specified in the component. The component is used to build new, specialized data manipulation components.

The &apos;Expression&apos; is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.100</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>23</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge Data" version="2">
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of the key property (or a comma separated list
of properties) that contain the value identifying those 
records to be merged into one</sci:help>
														<sci:value>RKNNindex</sci:value>
													</sci:arg>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Indicates what happens to the values of properties (other than the &apos;MergeUsing&apos;
property) from those records that are merged.
    KeepAll:  Keeps all property values by creating new property names to hold
                   the multiple values for a single property
    KeepFirst:  Keeps only the properties and values from the first example
                      received.  All properties and values from subsequent records
                      matching the &apos;MergeUsing&apos; property are discarded.
    KeepTogether:  Keeps all records with matching &apos;MergeUsing&apos; property 
                      values together.</sci:help>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
														<sci:legalval>KeepTogether</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to consider lower-case and upper-case
letters as equivalent when determining the identity 
of &apos;MergeUsing&apos; propety values</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to add a property called &apos;Frequency&apos; that
contains the number of individual records included
in the resulting merged record</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>Indicates how MergeUsing properties are to be interpreted when 
more than one property is listed.
    UseFirstDefinedValue:  Merges using only the first property in the 
                                         list that has a defined value for a record
    UseAllValues:  Merges using the concatentation of the values
                                      of ALL properties listed.</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>The kind of values found in the &apos;MergeUsing&apos; property.
    IsNumeric:  All numbers are converted to doubles for
                       comparison (so 1 = 1.0) 
    IsText:  All comparisons are made as string values</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>This string is used during append in KeepAll to pad out empty values. This 
keeps the generated arrays of values in-sync for multiple samples. The value
None causes no padding to occur.</sci:help>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>During the merging of two records, this tells what to do
when copying properties from a newly-discovered object onto the base record.
OverwriteOrCreate always copies all properties onto the base object; 
OverwriteExisting only copies properties that already exist on the base; 
CreateIfNew leaves any existing properties alone, and writes only new properties; 
AppendOrCreate appends if the property exists, else it creates it; 
AppendExisting appends to current-existing properties.</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>[optional]
When multiple property names are created (by KeepAll merge
behavior) to hold the multiple values for a single property
during merge, the original property name will be prefixed
differently for each original value it must hold.  The Prefix will
be constructed from the value of this property, followed by an underscore.
When not specified, no prefix will be used, and multiple values
will be separated as an array (e.g., property[1], property[2], etc].</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed May 26 16:11:41 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JoinNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1590 -2165</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Produces a single data record from multiple data records having an identical value for a given property.
</sci:value>
														<sci:value>Incoming data records are merged into a single data record if they have the same value as each other for the &apos;MergeUsing&apos; named property(s). If multiple &apos;MergeUsing&apos; names are given, all must be identical for a merge event to occur. &apos;MergeBehavior&apos; can be KeepAll, which keeps all values by appending any new ones; KeepFirst, which only keeps the properties of the first record found,  and KeepTogether, which keeps matching items sequentially together (like Sort). The properties of merged data records are appended in the form of an array. unless a &apos;PrefixUsingProperty&apos; is given, so the value of the given property is prepended to each property name on each data item.  This is often useful when merging multiple data files with a &apos;SourceTag&apos; parameter (available in many readers).&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;See Also:&lt;/a&gt;To merge records based on identical molecular structures use the &quot;Merge Molecules&quot; component.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records that contain the properties being used for merging</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records that do not contain the properties being used for merging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>17</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Remove Properties" version="2">
													<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The names of properties to be removed.</sci:help>
														<sci:value>RKNNindex</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
														<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
														<sci:value>list</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
														<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed May 26 16:11:41 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Remove properties</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>true</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1890 -2165</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Removes the specified properties from the property list.</sci:value>
														<sci:value>Removes the properties specified in the PropertyList and passes the remainder to the output port.&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Keep Properties&quot;. To keep only a few properties from a long list, it may be more efficient to specify those properties to the &quot;Keep Properties&quot; component.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with the specified properties removed</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Make Shortcut by Default</sci:legalval>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>18</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Internal Remove Properties" version="2">
															<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The list of property names that we wish to keep</sci:help>
																<sci:value>$(PropertyList)</sci:value>
															</sci:arg>
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to be evaluated.</sci:help>
																<sci:value>remove(@list);</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
																<sci:value>@list := &apos;$(propertyList)&apos;;
expand(&apos;,&apos;, @list);</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
																<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>CustomErrorText</sci:help>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>Sets the Components Icon</sci:help>
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Apr 26 11:22:01 2002</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Display Name</sci:help>
																<sci:value>Remove properties</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Component RunTimeID</sci:help>
																<sci:value>{C7AD8995-C647-11D4-9D08-0050DA2F1AAC}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Disabled</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>GUID</sci:help>
																<sci:value>{C2ED35AA-6401-4877-AADB-10F1A15D60E2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:help>Fancy Help</sci:help>
																<sci:value>100</sci:value>
																<sci:value>Removes the specified properties from the property list.</sci:value>
																<sci:value>Removes the properties specified in the PropertyList and passes the remainder to the output port.&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Keep Properties&quot;. To keep only a few properties from a long list, it may be more efficient to specify those properties to the &quot;Keep Properties&quot; component.&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records with the specified properties removed</sci:value>
																<sci:value>none</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Component Point</sci:help>
																<sci:value>85 -50</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@pass := true;

if KNN_Probability is not defined then
	@pass := false;
	ErrorText := &apos;Missing or invalid property value&apos;;
end if;

@pass
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Check for bad records</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2190 -2165</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>19</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Remove Properties" version="2">
													<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The names of properties to be removed.</sci:help>
														<sci:value>$(TestSetTag)</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
														<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
														<sci:value>list</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
														<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jun 15 10:33:33 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Remove properties</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>true</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2490 -2165</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Removes the specified properties from the property list.</sci:value>
														<sci:value>Removes the properties specified in the PropertyList and passes the remainder to the output port.&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Keep Properties&quot;. To keep only a few properties from a long list, it may be more efficient to specify those properties to the &quot;Keep Properties&quot; component.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with the specified properties removed</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.100</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Make Shortcut by Default</sci:legalval>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>20</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Internal Remove Properties" version="2">
															<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The list of property names that we wish to keep</sci:help>
																<sci:value>$(PropertyList)</sci:value>
															</sci:arg>
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to be evaluated.</sci:help>
																<sci:value>remove(@list);</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
																<sci:value>@list := &apos;$(propertyList)&apos;;
expand(&apos;,&apos;, @list);</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
																<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>CustomErrorText</sci:help>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>Sets the Components Icon</sci:help>
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Apr 26 11:22:01 2002</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Display Name</sci:help>
																<sci:value>Remove properties</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Component RunTimeID</sci:help>
																<sci:value>{C7AD8995-C647-11D4-9D08-0050DA2F1AAC}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Disabled</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>GUID</sci:help>
																<sci:value>{C2ED35AA-6401-4877-AADB-10F1A15D60E2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:help>Fancy Help</sci:help>
																<sci:value>100</sci:value>
																<sci:value>Removes the specified properties from the property list.</sci:value>
																<sci:value>Removes the properties specified in the PropertyList and passes the remainder to the output port.&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Keep Properties&quot;. To keep only a few properties from a long list, it may be more efficient to specify those properties to the &quot;Keep Properties&quot; component.&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records with the specified properties removed</sci:value>
																<sci:value>none</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Component Point</sci:help>
																<sci:value>85 -50</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>fileexists(&quot;$(Routput1file)&quot;) = true and @RExitStatus == 0</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Output1 file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>390 -2255</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>25</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Display R stdout and halt protocol" version="2">
													<sci:arg name="ControlProperty" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>ControlProperty</sci:help>
														<sci:value>@ShowRStdOutput</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Oct 22 12:08:22 2014</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Display R stdout and halt protocol</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ViewerNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9E6F3C8B-E5AB-4d51-B5E5-C0F20559F6FF}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>690 -2435</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Display R standard output</sci:value>
														<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>9.5.0.608</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>26</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout and halt protocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge Data" version="2">
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of the key property (or a comma separated list
of properties) that contain the value identifying those 
records to be merged into one</sci:help>
														<sci:value>RKNNindex</sci:value>
													</sci:arg>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Indicates what happens to the values of properties (other than the &apos;MergeUsing&apos;
property) from those records that are merged.
    KeepAll:  Keeps all property values by creating new property names to hold
                   the multiple values for a single property
    KeepFirst:  Keeps only the properties and values from the first example
                      received.  All properties and values from subsequent records
                      matching the &apos;MergeUsing&apos; property are discarded.
    KeepTogether:  Keeps all records with matching &apos;MergeUsing&apos; property 
                      values together.</sci:help>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
														<sci:legalval>KeepTogether</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to consider lower-case and upper-case
letters as equivalent when determining the identity 
of &apos;MergeUsing&apos; propety values</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to add a property called &apos;Frequency&apos; that
contains the number of individual records included
in the resulting merged record</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>Indicates how MergeUsing properties are to be interpreted when 
more than one property is listed.
    UseFirstDefinedValue:  Merges using only the first property in the 
                                         list that has a defined value for a record
    UseAllValues:  Merges using the concatentation of the values
                                      of ALL properties listed.</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>The kind of values found in the &apos;MergeUsing&apos; property.
    IsNumeric:  All numbers are converted to doubles for
                       comparison (so 1 = 1.0) 
    IsText:  All comparisons are made as string values</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>This string is used during append in KeepAll to pad out empty values. This 
keeps the generated arrays of values in-sync for multiple samples. The value
None causes no padding to occur.</sci:help>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>During the merging of two records, this tells what to do
when copying properties from a newly-discovered object onto the base record.
OverwriteOrCreate always copies all properties onto the base object; 
OverwriteExisting only copies properties that already exist on the base; 
CreateIfNew leaves any existing properties alone, and writes only new properties; 
AppendOrCreate appends if the property exists, else it creates it; 
AppendExisting appends to current-existing properties.</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>[optional]
When multiple property names are created (by KeepAll merge
behavior) to hold the multiple values for a single property
during merge, the original property name will be prefixed
differently for each original value it must hold.  The Prefix will
be constructed from the value of this property, followed by an underscore.
When not specified, no prefix will be used, and multiple values
will be separated as an array (e.g., property[1], property[2], etc].</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed May 26 16:11:41 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JoinNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1290 -2435</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Produces a single data record from multiple data records having an identical value for a given property.
</sci:value>
														<sci:value>Incoming data records are merged into a single data record if they have the same value as each other for the &apos;MergeUsing&apos; named property(s). If multiple &apos;MergeUsing&apos; names are given, all must be identical for a merge event to occur. &apos;MergeBehavior&apos; can be KeepAll, which keeps all values by appending any new ones; KeepFirst, which only keeps the properties of the first record found,  and KeepTogether, which keeps matching items sequentially together (like Sort). The properties of merged data records are appended in the form of an array. unless a &apos;PrefixUsingProperty&apos; is given, so the value of the given property is prepended to each property name on each data item.  This is often useful when merging multiple data files with a &apos;SourceTag&apos; parameter (available in many readers).&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;See Also:&lt;/a&gt;To merge records based on identical molecular structures use the &quot;Merge Molecules&quot; component.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records that contain the properties being used for merging</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records that do not contain the properties being used for merging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>24</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedReader.1">
												<sci:component name="Delimited Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file(s) or URL source to read</sci:help>
														<sci:value>$(Routput2file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties that are to be retained in each data record output
by the reader component. If the value is left blank, then all properties
are retained. If the parameter contains the value &quot;-&quot; (minus sign), then
no properties are to be retained.</sci:help>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character which separates the fields in the file.
  To determine automatically use:   FigureOut  
  For &quot;tab&quot; delimited type:              tab
  For &quot;space&quot; delimited type:         space
  For &quot;comma&quot; delimited type:       comma
  For &quot;colon&quot; delimited type:          colon</sci:help>
														<sci:legalval>FigureOut</sci:legalval>
														<sci:legalval>Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval selected="true">Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
													</sci:arg>
													<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>When TRUE, property names are taken
from the first line of data in the file.  When
FALSE, properties will be called: Column1,
Column2, etc. by default</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records.  A property 
called &apos;SourceTag&apos; will be created and will hold the value indicated:
   None - no SourceTag property will be created, and any existing will be removed
   Filename - the name of the file read
   FilenameAndExtension - the name of the file read with it&apos;s file extension
   FullFilename - the name of the file read including the directory path
   Number - when multiple files are read in this component, they are numbered 1,2,3...
   Letter - when multiple files are read in this component, they are lettered A, B, C...
   KeepCurrent - keep the current value of SourceTag</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>Specifies the character or string used to represent an 
undefined string in the file being read</sci:help>
													</sci:arg>
													<sci:arg name="AllLines" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>When TRUE, all lines of the text file become
part of a single data record.  The values for
a column from each row become multiple [array]
values for the property (column).</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to trim whitespace from the left and right ends of each value</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:14 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R output</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>390 -2795</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads text files containing one record per line with data separated by delimiters.</sci:value>
														<sci:value>Reads textual data from one or more files that are formated with a single record per line. Individual data items on each line should be separated by a delimiter character (e.g. space, comma, tab). The first line is treated as column names for defining property names. If column names are not declared, they are given standard names of Column1, Column2, etc. 

This component should be used to read comma delimited text files from Excel (.csv).

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>27</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>for #i in 1 .. numproperties() loop
	if isinteger(ithproperty(#i)) then
		changepropertytype(ithproperty(#i), &apos;Long&apos;);
	elsif isnumber(ithproperty(#i)) then
		changepropertytype(ithproperty(#i), &apos;Double&apos;);
	end if;
end loop;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Convert numbers</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>690 -2795</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>28</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>PilotScript expression to be evaluated.</sci:help>
														<sci:value>rename(&apos;x&apos;, &apos;KNN_Probability&apos;);
</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri May 21 09:48:33 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Rename properties</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>990 -2795</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Executes a PilotScript to rapidly manipulate data records.</sci:value>
														<sci:value>This component executes the PilotScript specified in the component. The component is used to build new, specialized data manipulation components.

The &apos;Expression&apos; is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.100</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>29</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>fileexists(&quot;$(Routput2file)&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Output2 file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -2975</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>30</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Display R stdout and halt protocol" version="2">
													<sci:arg name="ControlProperty" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>ControlProperty</sci:help>
														<sci:value>@ShowRStdOutput</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Oct 22 12:08:22 2014</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Display R stdout and halt protocol</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ViewerNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9E6F3C8B-E5AB-4d51-B5E5-C0F20559F6FF}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>390 -3155</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Display R standard output</sci:value>
														<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>9.5.0.608</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>31</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout and halt protocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Invalid XY Records to Fail Port" version="2">
													<sci:arg name="RVersionSource" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>Name of file containing R version, zero-variance properties, and IDs of records containing invalid or missing data.</sci:help>
														<sci:value>$(Routput3file)</sci:value>
													</sci:arg>
													<sci:arg name="XSource" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>Name of delimited text file containing X properties.</sci:help>
														<sci:value>$(Rinput1file)</sci:value>
													</sci:arg>
													<sci:arg name="YSource" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>Name of delimited text file containing Y property.</sci:help>
														<sci:value>$(Rinput2file)</sci:value>
													</sci:arg>
													<sci:arg name="IndexProperty" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of property to use as an index for merging X and Y records.</sci:help>
														<sci:value>RBadDataIndex</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>badRecordHash</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jul 20 12:34:16 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Invalid XY Records to Fail Port</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{803328D9-3402-47FC-85E5-18C5CE08BB43}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -3515</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Send invalid records containing X and Y data out fail port</sci:value>
														<sci:value>Internal component used by R Statistics Learners and other components to identify records containing bad X and/or Y data and send them out the Fail port.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1523</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
														<sci:value>%VERSION 3%</sci:value>
														<sci:value>1450 -201 505 308</sci:value>
														<sci:value>255 255 0</sci:value>
														<sci:value>Is it better to cache entire stream and send bad records out fail port than to just cache the model&apos;s X and Y properties as done here?</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>32</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Invalid XY Records to Fail Port</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:connectid from="0" to="1" type="true"/>
											<sci:connectid from="1" to="2" type="true"/>
											<sci:connectid from="4" to="5" type="true"/>
											<sci:connectid from="4" to="5" type="false"/>
											<sci:connectid from="5" to="6" type="true"/>
											<sci:connectid from="7" to="4" type="true"/>
											<sci:connectid from="7" to="8" type="true"/>
											<sci:connectid from="8" to="9" type="true"/>
											<sci:connectid from="10" to="7" type="true"/>
											<sci:connectid from="10" to="15" type="false"/>
											<sci:connectid from="11" to="12" type="true"/>
											<sci:connectid from="12" to="13" type="true"/>
											<sci:connectid from="12" to="13" type="false"/>
											<sci:connectid from="13" to="14" type="true"/>
											<sci:connectid from="15" to="11" type="true"/>
											<sci:connectid from="15" to="16" type="true"/>
											<sci:connectid from="16" to="17" type="true"/>
											<sci:connectid from="22" to="23" type="true"/>
											<sci:connectid from="23" to="24" type="true"/>
											<sci:connectid from="17" to="18" type="true"/>
											<sci:connectid from="18" to="19" type="true"/>
											<sci:connectid from="19" to="20" type="true"/>
											<sci:connectid from="25" to="22" type="true"/>
											<sci:connectid from="25" to="26" type="false"/>
											<sci:connectid from="24" to="17" type="true"/>
											<sci:connectid from="27" to="28" type="true"/>
											<sci:connectid from="28" to="29" type="true"/>
											<sci:connectid from="29" to="24" type="true"/>
											<sci:connectid from="30" to="27" type="true"/>
											<sci:connectid from="30" to="31" type="false"/>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>Func RLIKE(&apos;$(Controls)&apos;)</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -420</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Add Tag Property" version="2">
											<sci:arg name="TagName" type="PropertyNameType" required="true" visibility="visible" multi="false">
												<sci:help>Name of a new property to create to serve as a tag</sci:help>
												<sci:value>Testing</sci:value>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
												<sci:value>Property(&apos;$(TagName)&apos;) := true;</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)
</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
												<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue Sep 13 07:36:32 2016</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Add Tag Property</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{BCF71EB2-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1290 -445</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Tags data records with a specified property name for later identification</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, a new property is created and assigned a value of True.  The name of the property is specified by &lt;i&gt;TagName&lt;/i&gt;.  Data records tagged in this way can be identified in downstream components by checking whether the property is defined. This is useful for marking a data stream prior to combining it with other streams for learning or other operations.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;An alternative method for tagging records is available in most reader component by using &lt;i&gt;SourceTag&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To remove a tag, use &lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To separate tagged data records into a separate data stream, use &lt;a href=&quot;javascript:DoLink(&apos;{F69870E0-BAF7-43E4-8B09-F53C47DB94F3}&apos;)&quot;&gt;Remove Tagged Filter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To group data together by tag for use in run-to-completion subprotocols, use &lt;a href=&quot;javascript:DoLink(&apos;{3FDE8197-D86F-4EB0-99FF-82D6430AF466}&apos;)&quot;&gt;Group Data by Tag&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records with the additional tag property</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>17.1.0.119</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>5</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Add Tag Property</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:connectid from="0" to="1" type="true"/>
									<sci:connectid from="1" to="2" type="true"/>
									<sci:connectid from="1" to="5" type="false"/>
									<sci:connectid from="2" to="3" type="true"/>
									<sci:connectid from="4" to="0" type="true"/>
									<sci:connectid from="4" to="5" type="false"/>
									<sci:connectid from="5" to="3" type="true"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>remove(@Feat)</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1290 -995</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>7</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>Func RLIKE(&apos;$(Controls)&apos;)</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1590 -995</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>8</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@Set eq &apos;All&apos;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1890 -1175</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>16</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="Data to Fail Port" version="2">
									<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
										<sci:legalval selected="true">LeaveData</sci:legalval>
										<sci:legalval>ClearData</sci:legalval>
										<sci:legalval>DeleteData</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>CustomErrorText</sci:help>
									</sci:arg>
									<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>the action to perform</sci:help>
										<sci:value>PassDataToPort</sci:value>
									</sci:arg>
									<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>the port to pass data to</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FilterNode</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Data to Fail Port</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Evaluate Expression</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{A718CDEE-EE7D-4B75-9346-C3780D347090}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>2190 -1175</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Directs records to the Fail port for use in subprotocol building.</sci:value>
										<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Fail port of the subprotocol.
</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value>All data records</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.0.4.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>14</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Fail Port</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:connectid from="19" to="20" type="true"/>
							<sci:connectid from="20" to="21" type="true"/>
							<sci:connectid from="21" to="27" type="true"/>
							<sci:connectid from="22" to="19" type="true"/>
							<sci:connectid from="22" to="24" type="false"/>
							<sci:connectid from="24" to="25" type="true"/>
							<sci:connectid from="25" to="26" type="true"/>
							<sci:connectid from="26" to="27" type="true"/>
							<sci:connectid from="27" to="30" type="true"/>
							<sci:connectid from="18" to="15" type="true"/>
							<sci:connectid from="15" to="5" type="true"/>
							<sci:connectid from="5" to="22" type="true"/>
							<sci:connectid from="5" to="6" type="true"/>
							<sci:connectid from="0" to="1" type="true"/>
							<sci:connectid from="1" to="29" type="true"/>
							<sci:connectid from="29" to="27" type="true"/>
							<sci:connectid from="6" to="7" type="true"/>
							<sci:connectid from="7" to="8" type="true"/>
							<sci:connectid from="8" to="0" type="true"/>
							<sci:connectid from="8" to="16" type="false"/>
							<sci:connectid from="16" to="14" type="true"/>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.ComponentJavaPlugin.1">
						<sci:component name="Tab" version="2">
							<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;The optional title at the top of the tab. If left blank, the title will be auto-generated in the format Tab 1 ... Tab N, depending on the Tab&apos;s position within its Tab Group.&lt;/p&gt;</sci:help>
								<sci:value>Dose response</sci:value>
							</sci:arg>
							<sci:arg name="Tab Options" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>&lt;p&gt;Customize tab options including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;b&gt;Closable&lt;/b&gt;: If set, an x appears to the right of the tab&apos;s title, allowing the tab to be closed.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>Closable</sci:legalval>
							</sci:arg>
							<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:value>600</sci:value>
							</sci:arg>
							<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>500</sci:value>
								<sci:value>100</sci:value>
								<sci:value>Percent</sci:value>
								<sci:value>100.0</sci:value>
								<sci:value>Percent</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0</sci:value>
								<sci:value>Pixels</sci:value>
							</sci:arg>
							<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;If set to &quot;True&quot;, all incoming data records are aggregated into a single output record.&lt;/p&gt;

&lt;p&gt;If &quot;False&quot;, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:value>ComponentReturnsPass</sci:value>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>CaptureStdoutStderr</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/reportadv</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Feb 12 10:00:00 2010</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Tab</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2190 -455</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>REPORTCOLUMNNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6FBAE9E7-2825-4C1B-865E-723D10C0E04B}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Plug In</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Creates a tab for use within a tab group in an HTML report</sci:value>
								<sci:value>&lt;p&gt;Use the Tab component to group reporting contents into individual tabs. This component allows you to set the title, formatting, and other options for an individual tab within a &lt;a href=&quot;javascript:DoLink(&apos;{00D97472-FA8F-41A8-9841-095DBCB3F989}&apos;)&quot;&gt;Tab Group&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This component only works in HTML reports.&lt;/li&gt;
	&lt;li&gt;Tabs must be piped into a Tab Group component.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>One or more data records containing reporting components.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>A single data record containing the Tab to be included in a Tab Group in the HTML report.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>8.0.0.14</sci:value>
							</sci:arg>
							<sci:arg name="Output Location" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>&lt;p&gt;Irrelevant for onload events.&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">Header</sci:legalval>
								<sci:legalval>Body</sci:legalval>
							</sci:arg>
							<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>com.scitegic.report.component.extjs.TabComponent</sci:value>
							</sci:arg>
							<sci:arg name="Onload Event" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>&lt;p&gt;If true, the script is added as an onload event, which will be executed after the DOM is document&apos;s DOM is fully loaded and all external includes have been parsed.&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>scitegic/report</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>12</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Reporting and Visualization\Reporting\Web Application Development\HTML Elements\Tab</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.GroupData.1">
						<sci:component name="Group Data by Tag" version="2">
							<sci:arg name="GroupUsing" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of a property or list of properties separated by commas that act as a common key for those records to be grouped
</sci:help>
								<sci:member>GroupUsingListType</sci:member>
								<sci:value>Group</sci:value>
							</sci:arg>
							<sci:arg name="GroupUsingListType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Indicates how &quot;GroupUsing&quot; properties are interpreted when  more than one property is listed:
 
    - UseFirstDefinedValue: Group using only the first property in the list with a defined value for a record.
 
  - UseAllValues: Groups using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>GroupName</sci:member>
								<sci:member>Data Are Sorted</sci:member>
							</sci:arg>
							<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If given, a new property called &quot;GroupName&quot; is created with this value. It can aid in unpacking only selected groups by name.
</sci:help>
								<sci:value>Data</sci:value>
							</sci:arg>
							<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;GroupUsing&lt;/i&gt; properties. If so, then the grouping can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Mar 16 08:27:06 2011</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{3FDE8197-D86F-4EB0-99FF-82D6430AF466}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;GroupUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>if (strlength(trim(parameter(&apos;GroupUsing&apos;, 2))) &gt; 0) then
	&quot;Group on &quot; . trim(parameter(&apos;GroupUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Group Data by Tag</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>990 -635</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Groups all data records with the same property value into a single data record</sci:value>
								<sci:value>&lt;p&gt;&lt;i&gt;GroupUsing&lt;/i&gt; specifies the property or comma separated list of properties to use for determining which records will be grouped together.  These grouped data records can later be unbundled by &lt;i&gt;Ungroup Data&lt;/i&gt;.  Any records lacking the &lt;i&gt;GroupUsing&lt;/i&gt; key are sent out the Fail port.&lt;/p&gt;

&lt;p&gt;
One use of grouped data is to provide input to a subprotocol for which &lt;i&gt;RunToCompletion&lt;/i&gt; has been set to True. The subprotocol will then operate on each group independently. You would typically use &lt;i&gt;Ungroup Data&lt;/i&gt; as the first component of the subprotocol.
&lt;p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;No data are lost or changed when you create a grouped record from separate data records.  Grouping is simply a way to bundle records together.
&lt;li&gt;For the purpose of matching records to be grouped, the &lt;i&gt;GroupUsing&lt;/i&gt; property is treated as a string. (Thus, for example, the values &quot;1.0&quot; and &quot;1&quot; do not match.)
&lt;li&gt;The new data record has three properties defined at the top level:
	&lt;ul&gt;
	&lt;li&gt;&lt;b&gt;GroupName&lt;/b&gt; contains the name of the group as specified by the parameter &lt;i&gt;GroupName&lt;/i&gt;.&lt;/li&gt;  
	&lt;li&gt;&lt;b&gt;NumberInGroup&lt;/b&gt; contains the number of records in the group. 
	&lt;li&gt; The properties named by &lt;i&gt;GroupUsing&lt;/i&gt; contain the values of these properties shared by all members of the group.&lt;/li&gt;
	&lt;/ul&gt;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To group every N data records together as an alternative to using a &lt;i&gt;GroupUsing&lt;/i&gt; property, use &lt;a href=&quot;javascript:DoLink(&apos;{C3A203C2-9470-47F8-A7FF-D5C6DD1BAA67}&apos;)&quot;&gt;Group Data by Number&lt;/a&gt;
&lt;li&gt;To separate the grouped data into the original records, use &lt;a href=&quot;javascript:DoLink(&apos;{57833F08-BD53-42AE-A14C-87EED61B8FBD}&apos;)&quot;&gt;Ungroup Data&lt;/a&gt;.  You would typically use Ungroup Data as the first component of a &lt;i&gt;RunToCompletion&lt;/i&gt; subprotocol designed to operate on grouped data.
&lt;li&gt;For a different approach to combining data records, analogous to a database join operation, see &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records, each containing a collection of grouped records stored in a hierarchy</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that lack the &lt;i&gt;GroupUsing&lt;/i&gt; property</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>8.4.5.20</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>8</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Group Data by Tag</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>Set := &apos;All&apos;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1290 -635</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>9</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Local Shortcut" version="2">
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
								<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Fitting</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ReportSubProtocolNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{AAE3D712-7DD2-43B0-801C-F53D87056863}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1890 -635</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
								<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.2.0.1267</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Processing Order</sci:help>
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="ByLocalReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Local Reference</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.ComponentJavaPlugin.1">
								<sci:component name="XY Chart" version="2">
									<sci:arg name="Chart Data" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
										<sci:help>Defines groups of Data Series for the chart. There is no limit to the number of Data Series you can have. Use this parameter to add, remove and reorder data series in the chart.</sci:help>
										<sci:member>Data Series 1</sci:member>
										<sci:member>Data Series 2</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Settings for the Data Series to be plotted. You can add additional Data Series using &lt;i&gt;Chart Data&lt;/i&gt;.</sci:help>
										<sci:member>Data Series 1 Links and Actions</sci:member>
										<sci:member>Data Series 1 X Property</sci:member>
										<sci:member>Data Series 1 Y Property</sci:member>
										<sci:member>Data Series 1 Symbols and Lines</sci:member>
										<sci:member>Data Series 1 Data Options</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1 X Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The name of a property on the data stream, or calculable property, to plot against the X axis.</sci:help>
										<sci:value>Conc1</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 1 Y Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The name of a property on the data stream, or calculable property, to plot against the Y axis. Multiple Y properties can be supplied with a comma-delimited list of property names.</sci:help>
										<sci:value>POS,Neg,Media</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Various data options for the data series.</sci:help>
										<sci:member>Data Series 1 Data Options Error Bar</sci:member>
										<sci:member>Data Series 1 Data Options Y Axis for Plot</sci:member>
										<sci:member>Data Series 1 Data Options Regression Line</sci:member>
										<sci:member>Data Series 1 Data Options Regression Line Expression</sci:member>
										<sci:member>Data Series 1 Data Options Label</sci:member>
										<sci:member>Data Series 1 Data Options Legend Text</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Error Bar" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional parameter that is a property, or a PilotScript expression, providing values that describe the magnitude of error bars shown on individual bars. Any calculable properties must be calculated upstream.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Y Axis for Plot" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Select which Y axis to plot against (Y Axis or Second Y Axis).</sci:help>
										<sci:legalval selected="true">Y Axis</sci:legalval>
										<sci:legalval>Second Y Axis</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Regression Line" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;The type of regression line to draw in the chart.  If &quot;Custom&quot;, then the value of the &quot;Regression Line Expression&quot; parameter will be used to identify records whose values will be used to plot a regression line. If &quot;Power&quot;, then all data points need to have positive values, otherwise the regression line will not be drawn.</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Linear</sci:legalval>
										<sci:legalval>Power</sci:legalval>
										<sci:legalval>Custom</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Regression Line Expression" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;A PilotScript expression that evaluates to True for any data points that should be counted as part of a custom regression line.  This parameter is ignored unless the Regression Line parameter&apos;s value is &quot;Custom.&quot;&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:validscript>regressionLineParameterName := StrReplace(ParameterName(), &quot;Regression Line Expression&quot;, &quot;Regression Line&quot;);
valid := Parameter(regressionLineParameterName) ne &apos;Custom&apos; OR Parameter() ne &apos;&apos;;
if (not valid) then
     SetInvalidDetails(&apos;This parameter is required when Regression Line is set to &quot;Custom&quot;&apos;);
End if;
valid;</sci:validscript>
										<sci:enabledscript>regressionLineParameterName := StrReplace(ParameterName(), &quot;Regression Line Expression&quot;, &quot;Regression Line&quot;);
enabled := Parameter(regressionLineParameterName) eq &apos;Custom&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Regression Line is set to &quot;Custom&quot;&apos;);
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Label" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;The name of a property on the data stream, or a PilotScript expression, that will be displayed as a label next to each point in the chart.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Data Options Legend Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Text to be displayed in the legend. If &lt;i&gt;Y Property&lt;/i&gt; contains a single entry, then the specified string is used as the legend. If &lt;i&gt;Y Property&lt;/i&gt; contains multiple entries then this parameter should contain a comma-separated list of strings to be used as legends. If this parameter is left blank, or the number of comma-separated strings is less than the number of &lt;i&gt;Y Property&lt;/i&gt; entries then a default legend text will be supplied.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Symbol and line attributes for the data series.</sci:help>
										<sci:member>Data Series 1 Symbols and Lines Symbol Type</sci:member>
										<sci:member>Data Series 1 Symbols and Lines Symbol Size</sci:member>
										<sci:member>Data Series 1 Symbols and Lines Symbol Color</sci:member>
										<sci:member>Data Series 1 Symbols and Lines Symbol Fill Pattern</sci:member>
										<sci:member>Data Series 1 Symbols and Lines Line Type</sci:member>
										<sci:member>Data Series 1 Symbols and Lines Line Thickness</sci:member>
										<sci:member>Data Series 1 Symbols and Lines Line Color</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Symbol Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the symbol type to use.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different symbol type for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a symbol type value or an expression defining a symbol type. A symbol type can be one of the predefined strings:
&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;li&gt;Square&lt;/li&gt;
&lt;li&gt;Circle&lt;/li&gt;
&lt;li&gt;Triangle&lt;/li&gt;
&lt;li&gt;Inverted Triangle&lt;/li&gt;
&lt;li&gt;Diamond&lt;/li&gt;
&lt;li&gt;Cross&lt;/li&gt;
&lt;li&gt;Star&lt;/li&gt;
&lt;li&gt;Burst&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

</sci:help>
										<sci:legalval>None</sci:legalval>
										<sci:legalval>Square</sci:legalval>
										<sci:legalval selected="true">Circle</sci:legalval>
										<sci:legalval>Triangle</sci:legalval>
										<sci:legalval>Inverted Triangle</sci:legalval>
										<sci:legalval>Diamond</sci:legalval>
										<sci:legalval>Cross</sci:legalval>
										<sci:legalval>Star</sci:legalval>
										<sci:legalval>Burst</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Symbol Size" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the symbol size. The entered value will be used as the number of pixels in the radius of the symbol.  If the parameter is not specified the default symbol size of 6.0 is used. &lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can create bubble charts where the size of each data point reflects a meaningful aspect of the data by changing the parameter type to ExpressionType and typing an expression evaluating to a double value. If the expression is evaluated to a negative value, a symbol size of zero is used (no symbol is drawn).&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:value>6.0</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Symbol Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the symbol and error bar color.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different color for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a color value or an expression defining a color.  There are three ways to specify colors for the property or expression:
&lt;ul&gt;&lt;li&gt;Strings, e.g., Red or Blue.&lt;/li&gt;
&lt;li&gt;RGB (reg-green-blue) color values (as hexadecimal values), prefixed with a &apos;#&apos; symbol.  For example, to specify the color Red, use &lt;code&gt;#FF0000&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Integer index values that correspond to the default order of colors from the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/default_color_table.htm&apos;)&quot;&gt;Default Color Table&lt;/a&gt;. For example, to specify Yellow, use 4 (i.e., Yellow is the fourth entry in the table).&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Symbol Fill Pattern" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies the symbol fill pattern to use.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different symbol fill pattern for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a symbol fill pattern value or an expression defining a symbol fill pattern. A symbol fill pattern can be one of the predefined strings:
&lt;ul&gt;
&lt;li&gt;Gradient&lt;/li&gt;
&lt;li&gt;Solid&lt;/li&gt;
&lt;li&gt;Open&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:legalval>Solid</sci:legalval>
										<sci:legalval selected="true">Gradient</sci:legalval>
										<sci:legalval>Open</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Line Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the line type for the data.</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Solid</sci:legalval>
										<sci:legalval>Dotted</sci:legalval>
										<sci:legalval>Dashed</sci:legalval>
										<sci:legalval>Dot-dash</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Line Thickness" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the thickness of line.</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 1 Symbols and Lines Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;specifies the color of the line.</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Links and Actions options for the data series.</sci:help>
										<sci:member>Data Series 1 Links and Actions Link</sci:member>
										<sci:member>Data Series 1 Links and Actions Protocol Link</sci:member>
										<sci:member>Data Series 1 Links and Actions HTML Attributes</sci:member>
										<sci:member>Data Series 1 Links and Actions Tooltip</sci:member>
										<sci:member>Data Series 1 Links and Actions Link Options</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions Link" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
										<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to a link for each data point on the chart. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
	&lt;ul&gt;
	&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
	&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
	&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same link will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:enabledscript>protocolLinkParameterName := StrReplace(ParameterName(), &quot;Actions Link&quot;, &quot;Actions Protocol Link&quot;);
enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies a link that runs a protocol for each data point on the chart. Editing this parameter opens up the Protocol Link Dialog.
&lt;/p&gt;
&lt;p&gt;
Note: if Y Property contains more than one entry, the same protocol link will be assigned to relevant chart entries of all Y Properties.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If Y Property contains more than one entry, the same protocol link will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:enabledscript>linkParameterName := StrReplace(ParameterName(), &quot;Protocol Link&quot;, &quot;Link&quot;);
enabled := Parameter(linkParameterName) eq &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies how to display pages linked to data points. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the data series.
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;An optional property name, or PilotScript expression evaluating to a string, that will be displayed as a tooltip when the mouse hovers over a data point in the chart.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same tooltip will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 1 Links and Actions HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Defines attributes for one point on the chart. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same attributes will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 2" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Settings for the Data Series to be plotted. You can add additional Data Series using &lt;i&gt;Chart Data&lt;/i&gt;.</sci:help>
										<sci:member>Data Series 2 Links and Actions</sci:member>
										<sci:member>Data Series 2 X Property</sci:member>
										<sci:member>Data Series 2 Y Property</sci:member>
										<sci:member>Data Series 2 Symbols and Lines</sci:member>
										<sci:member>Data Series 2 Data Options</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 2 X Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>The name of a property on the data stream, or calculable property, to plot against the X axis.</sci:help>
										<sci:value>Fit_Concentration</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 2 Y Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>The name of a property on the data stream, or calculable property, to plot against the Y axis. Multiple Y properties can be supplied with a comma-delimited list of property names.</sci:help>
										<sci:value>Fit_Response_Pos,Fit_Response_Neg,Fit_Response_MEDIA</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 2 Data Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Various data options for the data series.</sci:help>
										<sci:member>Data Series 2 Data Options Error Bar</sci:member>
										<sci:member>Data Series 2 Data Options Y Axis for Plot</sci:member>
										<sci:member>Data Series 2 Data Options Regression Line</sci:member>
										<sci:member>Data Series 2 Data Options Regression Line Expression</sci:member>
										<sci:member>Data Series 2 Data Options Label</sci:member>
										<sci:member>Data Series 2 Data Options Legend Text</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 2 Data Options Error Bar" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Optional parameter that is a property, or a PilotScript expression, providing values that describe the magnitude of error bars shown on individual bars. Any calculable properties must be calculated upstream.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 2 Data Options Y Axis for Plot" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Select which Y axis to plot against (Y Axis or Second Y Axis).</sci:help>
										<sci:legalval selected="true">Y Axis</sci:legalval>
										<sci:legalval>Second Y Axis</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 2 Data Options Regression Line" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The type of regression line to draw in the chart.  If &quot;Custom&quot;, then the value of the &quot;Regression Line Expression&quot; parameter will be used to identify records whose values will be used to plot a regression line. If &quot;Power&quot;, then all data points need to have positive values, otherwise the regression line will not be drawn.</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Linear</sci:legalval>
										<sci:legalval>Power</sci:legalval>
										<sci:legalval>Custom</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 2 Data Options Regression Line Expression" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;A PilotScript expression that evaluates to True for any data points that should be counted as part of a custom regression line.  This parameter is ignored unless the Regression Line parameter&apos;s value is &quot;Custom.&quot;&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:validscript>regressionLineParameterName := StrReplace(ParameterName(), &quot;Regression Line Expression&quot;, &quot;Regression Line&quot;);
valid := Parameter(regressionLineParameterName) ne &apos;Custom&apos; OR Parameter() ne &apos;&apos;;
if (not valid) then
     SetInvalidDetails(&apos;This parameter is required when Regression Line is set to &quot;Custom&quot;&apos;);
End if;
valid;</sci:validscript>
										<sci:enabledscript>regressionLineParameterName := StrReplace(ParameterName(), &quot;Regression Line Expression&quot;, &quot;Regression Line&quot;);
enabled := Parameter(regressionLineParameterName) eq &apos;Custom&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Regression Line is set to &quot;Custom&quot;&apos;);
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Data Series 2 Data Options Label" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The name of a property on the data stream, or a PilotScript expression, that will be displayed as a label next to each point in the chart.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 2 Data Options Legend Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Text to be displayed in the legend. If &lt;i&gt;Y Property&lt;/i&gt; contains a single entry, then the specified string is used as the legend. If &lt;i&gt;Y Property&lt;/i&gt; contains multiple entries then this parameter should contain a comma-separated list of strings to be used as legends. If this parameter is left blank, or the number of comma-separated strings is less than the number of &lt;i&gt;Y Property&lt;/i&gt; entries then a default legend text will be supplied.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 2 Symbols and Lines" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Symbol and line attributes for the data series.</sci:help>
										<sci:member>Data Series 2 Symbols and Lines Symbol Type</sci:member>
										<sci:member>Data Series 2 Symbols and Lines Symbol Size</sci:member>
										<sci:member>Data Series 2 Symbols and Lines Symbol Color</sci:member>
										<sci:member>Data Series 2 Symbols and Lines Symbol Fill Pattern</sci:member>
										<sci:member>Data Series 2 Symbols and Lines Line Type</sci:member>
										<sci:member>Data Series 2 Symbols and Lines Line Thickness</sci:member>
										<sci:member>Data Series 2 Symbols and Lines Line Color</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 2 Symbols and Lines Symbol Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies the symbol type to use.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different symbol type for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a symbol type value or an expression defining a symbol type. A symbol type can be one of the predefined strings:
&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;li&gt;Square&lt;/li&gt;
&lt;li&gt;Circle&lt;/li&gt;
&lt;li&gt;Triangle&lt;/li&gt;
&lt;li&gt;Inverted Triangle&lt;/li&gt;
&lt;li&gt;Diamond&lt;/li&gt;
&lt;li&gt;Cross&lt;/li&gt;
&lt;li&gt;Star&lt;/li&gt;
&lt;li&gt;Burst&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Square</sci:legalval>
										<sci:legalval>Circle</sci:legalval>
										<sci:legalval>Triangle</sci:legalval>
										<sci:legalval>Inverted Triangle</sci:legalval>
										<sci:legalval>Diamond</sci:legalval>
										<sci:legalval>Cross</sci:legalval>
										<sci:legalval>Star</sci:legalval>
										<sci:legalval>Burst</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 2 Symbols and Lines Symbol Size" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies the symbol size. The entered value will be used as the number of pixels in the radius of the symbol.  If the parameter is not specified the default symbol size of 6.0 is used. &lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can create bubble charts where the size of each data point reflects a meaningful aspect of the data by changing the parameter type to ExpressionType and typing an expression evaluating to a double value. If the expression is evaluated to a negative value, a symbol size of zero is used (no symbol is drawn).&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:value>6.0</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 2 Symbols and Lines Symbol Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies the symbol and error bar color.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different color for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a color value or an expression defining a color.  There are three ways to specify colors for the property or expression:
&lt;ul&gt;&lt;li&gt;Strings, e.g., Red or Blue.&lt;/li&gt;
&lt;li&gt;RGB (reg-green-blue) color values (as hexadecimal values), prefixed with a &apos;#&apos; symbol.  For example, to specify the color Red, use &lt;code&gt;#FF0000&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Integer index values that correspond to the default order of colors from the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/default_color_table.htm&apos;)&quot;&gt;Default Color Table&lt;/a&gt;. For example, to specify Yellow, use 4 (i.e., Yellow is the fourth entry in the table).&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 2 Symbols and Lines Symbol Fill Pattern" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;Specifies the symbol fill pattern to use.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different symbol fill pattern for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a symbol fill pattern value or an expression defining a symbol fill pattern. A symbol fill pattern can be one of the predefined strings:
&lt;ul&gt;
&lt;li&gt;Gradient&lt;/li&gt;
&lt;li&gt;Solid&lt;/li&gt;
&lt;li&gt;Open&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:legalval>Solid</sci:legalval>
										<sci:legalval selected="true">Gradient</sci:legalval>
										<sci:legalval>Open</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 2 Symbols and Lines Line Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies the line type for the data.</sci:help>
										<sci:legalval>None</sci:legalval>
										<sci:legalval>Solid</sci:legalval>
										<sci:legalval selected="true">Dotted</sci:legalval>
										<sci:legalval>Dashed</sci:legalval>
										<sci:legalval>Dot-dash</sci:legalval>
									</sci:arg>
									<sci:arg name="Data Series 2 Symbols and Lines Line Thickness" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies the thickness of line.</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Data Series 2 Symbols and Lines Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;specifies the color of the line.</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 2 Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Links and Actions options for the data series.</sci:help>
										<sci:member>Data Series 2 Links and Actions Link</sci:member>
										<sci:member>Data Series 2 Links and Actions Protocol Link</sci:member>
										<sci:member>Data Series 2 Links and Actions HTML Attributes</sci:member>
										<sci:member>Data Series 2 Links and Actions Tooltip</sci:member>
										<sci:member>Data Series 2 Links and Actions Link Options</sci:member>
									</sci:arg>
									<sci:arg name="Data Series 2 Links and Actions Link" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to a link for each data point on the chart. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
	&lt;ul&gt;
	&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
	&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
	&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same link will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:enabledscript>protocolLinkParameterName := StrReplace(ParameterName(), &quot;Actions Link&quot;, &quot;Actions Protocol Link&quot;);
enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Data Series 2 Links and Actions Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies a link that runs a protocol for each data point on the chart. Editing this parameter opens up the Protocol Link Dialog.
&lt;/p&gt;
&lt;p&gt;
Note: if Y Property contains more than one entry, the same protocol link will be assigned to relevant chart entries of all Y Properties.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If Y Property contains more than one entry, the same protocol link will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
										<sci:enabledscript>linkParameterName := StrReplace(ParameterName(), &quot;Protocol Link&quot;, &quot;Link&quot;);
enabled := Parameter(linkParameterName) eq &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Data Series 2 Links and Actions Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies how to display pages linked to data points. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the data series.
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 2 Links and Actions Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;An optional property name, or PilotScript expression evaluating to a string, that will be displayed as a tooltip when the mouse hovers over a data point in the chart.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same tooltip will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Data Series 2 Links and Actions HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Defines attributes for one point on the chart. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same attributes will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies attributes to be applied to the whole chart.</sci:help>
										<sci:member>Chart Options Title</sci:member>
										<sci:member>Chart Options Format</sci:member>
										<sci:member>Chart Options Position</sci:member>
										<sci:member>Chart Options Chart Output</sci:member>
										<sci:member>Chart Options Force One Series per Data Record</sci:member>
										<sci:member>Chart Options Make Scriptable</sci:member>
										<sci:member>Chart Options Display Options</sci:member>
										<sci:member>Chart Options Links and Actions</sci:member>
										<sci:member>Chart Options Display Type</sci:member>
									</sci:arg>
									<sci:arg name="Chart Options Title" type="LinkDataPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAEcPHA+VGl0bGUgZm9yIHRoZSBjaGFydC48L3A+LFN0cmluZ1R5cGUACAAAAAEBAAEABAD8AS17NDJDQUVDNUQtRUY0Qy00QjE0LThFQ0YtNEUwMDJGRTYwQjlDfSFDaGFydAAAAAAAAAAAARRDaGFydCBPcHRpb25zIFRpdGxlA8xTz7sBPCQoRGF0YSBTZXJpZXMgMSBZIFByb3BlcnR5KSB2cy4gJChEYXRhIFNlcmllcyAxIFggUHJvcGVydHkpAA==</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;Title for the chart.&lt;/p&gt;</sci:help>
										<sci:value>Cmpd1</sci:value>
									</sci:arg>
									<sci:arg name="Chart Options Format" type="FormatType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.General</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Chart Options Position" type="PositionType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
										<sci:value>600</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.General</sci:value>
										<sci:value>Width</sci:value>
										<sci:value>400.0</sci:value>
										<sci:value>Pixels</sci:value>
										<sci:value>Height</sci:value>
										<sci:value>300.0</sci:value>
										<sci:value>Pixels</sci:value>
									</sci:arg>
									<sci:arg name="Chart Options Display Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the chart display format.  This can be either interactive or a static image. If the &lt;i&gt;Default&lt;/i&gt; option is selected then the server default setting as specified by the &lt;i&gt;DefaultChartDisplayType&lt;/i&gt; global in the Admin portal is used.
</sci:help>
										<sci:legalval selected="true">Default</sci:legalval>
										<sci:legalval>Interactive</sci:legalval>
										<sci:legalval>Image</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Chart Output" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Controls how data records are plotted in charts:
&lt;ul&gt;&lt;li&gt;If set to &quot;One Chart for All Data Records&quot; then all data records will be plotted in a single chart.&lt;/li&gt;
&lt;li&gt;If set to &quot;One Chart for Each Data Record&quot; then each data record will be plotted in a separate chart.  Use this when you want to create a chart for each row of a table.  Note that with the &quot;One Chart for Each Data Record&quot; setting, this applies to all Data Series specified including any non-array data series.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
										<sci:legalval>One Chart for All Data Records</sci:legalval>
										<sci:legalval selected="true">One Chart for Each Data Record</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Force One Series per Data Record" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Use this parameter to force each data record to be treated as separate data series. That is, when you want the values for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; in each data record to be treated as independent data series, so that they can be colored or sized differently, or use different symbols. This is typically done when &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; contain array data.
&lt;p&gt;Note that the effect of treating the data as separate data series will happen automatically if the first data record has array data, irrespective of the value for &lt;i&gt;Force One Series per Data Record&lt;/i&gt;. But if the first data record has single values for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; (whether of type array or not), then this parameter must be set to &lt;b&gt;True&lt;/b&gt; to force the data to be treated as separate data series. A typical use case is when the first data record has single values for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; but subsequent data records have array data.
&lt;ul&gt;&lt;li&gt;&lt;b&gt;False:&lt;/b&gt; The number of values of for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; determines whether each record creates a new data series.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;True:&lt;/b&gt; Each data record always creates a separate data series.&lt;/li&gt;&lt;/ul&gt;</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Make Scriptable" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>&lt;p&gt;Enables this chart for use with the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;Scriptable Charts API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When this parameter is sent to true, all properties on the data stream will be stored in the chart for use with the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;Scriptable Charts API&lt;/a&gt;.  If the data stream contains properties that should not be included, you can specify which properties to keep by placing a &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt; component upstream of the chart.&lt;/p&gt;
&lt;p&gt;NOTE: Making the chart Scriptable will force the &apos;Display Type&apos; to become &apos;Interactive&apos;.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Display options for the whole chart.</sci:help>
										<sci:member>Chart Options Display Options Show Legend</sci:member>
										<sci:member>Chart Options Display Options Legend Format</sci:member>
										<sci:member>Chart Options Display Options Show Horizontal Gridlines</sci:member>
										<sci:member>Chart Options Display Options Show Vertical Gridlines</sci:member>
										<sci:member>Chart Options Display Options Plot Region Color</sci:member>
										<sci:member>Chart Options Display Options Plot Region Transparency</sci:member>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Show Legend" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Show/Hide the legend.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Legend Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:help>&lt;p&gt;Formatting to be applied to the chart legend.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.  You can also set the Background and Border Color of the legend.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.Legend</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Show Horizontal Gridlines" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Show/Hide Horizontal Gridlines.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Show Vertical Gridlines" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Show/Hide Vertical Gridlines.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Plot Region Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Apply a background color to the plot.</sci:help>
										<sci:value>White</sci:value>
									</sci:arg>
									<sci:arg name="Chart Options Display Options Plot Region Transparency" type="DoubleType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;A transparency for rendering the plot region. Legal values are between 0.0 (fully transparent) and 1.0 (fully opaque). The default is 1.0. 

&lt;p&gt;This options is not currently supported for PDF reports.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;The value has to be between 0.0 and 1.0&apos;);
Parameter() &gt;= 0.0 AND Parameter() &lt;= 1.0</sci:validscript>
										<sci:value>1.0</sci:value>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:member>Chart Options Links and Actions Link</sci:member>
										<sci:member>Chart Options Links and Actions Link Target</sci:member>
										<sci:member>Chart Options Links and Actions HTML Attributes</sci:member>
										<sci:member>Chart Options Links and Actions Data Connector</sci:member>
										<sci:member>Chart Options Links and Actions Protocol Link</sci:member>
										<sci:member>Chart Options Links and Actions Link Options</sci:member>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Link" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;An optional parameter specifying a link for the reporting element produced by this component. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
&lt;ul&gt;
&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Example:&lt;/b&gt;
To create a link from a combination of a property and static text, create a valid PilotScript expression. For example, if you have internal web pages linking to research projects that have addresses of the form: &lt;i&gt;http://mydomain.com/ProjectID&lt;/i&gt;, where &lt;i&gt;ProjectID&lt;/i&gt; is the actual project ID, and also a local property on the datastream, you would use:
&lt;p&gt;&lt;code&gt;&apos;http://mydomain.com&apos; . ProjectID&lt;/code&gt;
&lt;p&gt;as the value for &lt;i&gt;Link&lt;/i&gt;.</sci:help>
										<sci:enabledscript>prefixLength := StringLen(&apos;Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
protocolLinkParameterName := prefix.&apos;Protocol Link&apos;;
enabled := true;
if (parameter(protocolLinkParameterName) is Defined ) then 
	enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
	End if;
end if;	
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies a link that runs a protocol.  Editing this parameter opens up the Protocol Link Dialog.&lt;/p&gt;</sci:help>
										<sci:enabledscript>prefixLength := StringLen(&apos;Protocol Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
linkParameterName := prefix.&apos;Link&apos;;
enabled := true;
if (parameter(linkParameterName) is Defined ) then 
	enabled := Parameter(linkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
	End if;
End if;
enabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies how to display pages linked to the reporting element. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the component.</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Link Target" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
										<sci:member>Chart Options Links and Actions Data Connector Subscriber Event Handling</sci:member>
										<sci:member>Chart Options Links and Actions Data Connector Publisher Subscriber Model</sci:member>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Data Connector Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
										<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
										<sci:legalval>Publisher</sci:legalval>
										<sci:legalval>Subscriber</sci:legalval>
										<sci:legalval>None</sci:legalval>
									</sci:arg>
									<sci:arg name="Chart Options Links and Actions Data Connector Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
										<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalval selected="true">Highlight</sci:legalval>
										<sci:legalval>Filter</sci:legalval>
										<sci:legalval>Reverse Filter</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Attributes of the X axis.</sci:help>
										<sci:member>X Axis Minimum</sci:member>
										<sci:member>X Axis Maximum</sci:member>
										<sci:member>X Axis Scaling</sci:member>
										<sci:member>X Axis Orientation</sci:member>
										<sci:member>X Axis Label</sci:member>
										<sci:member>X Axis Label Format</sci:member>
										<sci:member>X Axis Display Options</sci:member>
										<sci:member>X Axis Line Color</sci:member>
										<sci:member>X Axis Tickmark Options</sci:member>
									</sci:arg>
									<sci:arg name="X Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the lower bound of the X axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
									</sci:arg>
									<sci:arg name="X Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the upper bound of the X axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
									</sci:arg>
									<sci:arg name="X Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Scaling for X axis.</sci:help>
										<sci:legalval selected="true">Linear</sci:legalval>
										<sci:legalval>Logarithmic - base 10</sci:legalval>
										<sci:legalval>Logarithmic - natural</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Orientation" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Orientation of the X Axis. Set to &quot;Inverted&quot; to reverse the axis, so that values decrease along the axis from left to right.</sci:help>
										<sci:legalval selected="true">Normal</sci:legalval>
										<sci:legalval>Inverted</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Label for the X axis.</sci:help>
										<sci:value>Log10 Concentration</sci:value>
									</sci:arg>
									<sci:arg name="X Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.Axis Label</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="X Axis Display Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:help>&lt;p&gt;Display options for the X-Axis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Show Axis Line - Show/Hide the axis line.&lt;/li&gt;
&lt;li&gt; Show Axis Label - Show/Hide the axis label.&lt;/li&gt;
&lt;li&gt; Show Tickmark Labels - Show/Hide the tickmark labels.&lt;/li&gt;
&lt;ul&gt;</sci:help>
										<sci:legalval selected="true">Show Axis Line</sci:legalval>
										<sci:legalval selected="true">Show Axis Label</sci:legalval>
										<sci:legalval selected="true">Show Tickmark Labels</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Options for &lt;i&gt;X Axis&lt;/i&gt; tickmark labels.</sci:help>
										<sci:member>X Axis Tickmark Options Tickmark Label Type</sci:member>
										<sci:member>X Axis Tickmark Options Tickmark Label Format</sci:member>
										<sci:member>X Axis Tickmark Options Tickmark Label Orientation</sci:member>
										<sci:member>X Axis Tickmark Options Major Tickmark Start Value</sci:member>
										<sci:member>X Axis Tickmark Options Major Tickmark Spacing</sci:member>
									</sci:arg>
									<sci:arg name="X Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="X Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Spacing of major tickmarks.&lt;/p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;This option currently does not apply to DateTime type tickmarks.
</sci:help>
									</sci:arg>
									<sci:arg name="X Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
										<sci:legalval selected="true">Based on Input Data</sci:legalval>
										<sci:legalval>Double</sci:legalval>
										<sci:legalval>Integer</sci:legalval>
										<sci:legalval>DateTime</sci:legalval>
										<sci:legalval>Date</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;X Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;Default - use the date and time format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Date:
&lt;ul&gt;
&lt;li&gt;Default - use the date format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) NE &apos;Based on Input Data&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Date&apos;) then
	 resize(legalvalues, 6);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;13/06/1960&apos;;
	legalvalues[4] := &apos;06/13/60&apos;;
	legalvalues[5] := &apos;13/06/60&apos;;
	legalvalues[6] := &apos;June 13, 1960&apos;; 
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
										<sci:legalval selected="true">Default</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
										<sci:legalval selected="true">Horizontal</sci:legalval>
										<sci:legalval>Vertical</sci:legalval>
										<sci:legalval>Diagonal</sci:legalval>
									</sci:arg>
									<sci:arg name="X Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the color of the X axis line.</sci:help>
										<sci:value>Gainsboro</sci:value>
									</sci:arg>
									<sci:arg name="Y Axis" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Attributes for the left Y axis</sci:help>
										<sci:member>Y Axis Minimum</sci:member>
										<sci:member>Y Axis Maximum</sci:member>
										<sci:member>Y Axis Scaling</sci:member>
										<sci:member>Y Axis Orientation</sci:member>
										<sci:member>Y Axis Label</sci:member>
										<sci:member>Y Axis Label Format</sci:member>
										<sci:member>Y Axis Display Options</sci:member>
										<sci:member>Y Axis Line Color</sci:member>
										<sci:member>Y Axis Tickmark Options</sci:member>
									</sci:arg>
									<sci:arg name="Y Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the lower bound of the Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
										<sci:value>-0.1</sci:value>
									</sci:arg>
									<sci:arg name="Y Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the upper bound of the Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
										<sci:value>1.1</sci:value>
									</sci:arg>
									<sci:arg name="Y Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Scaling for Y axis.</sci:help>
										<sci:legalval selected="true">Linear</sci:legalval>
										<sci:legalval>Logarithmic - base 10</sci:legalval>
										<sci:legalval>Logarithmic - natural</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Orientation" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Orientation of the Y Axis. Set to &quot;Inverted&quot; to reverse the axis, so that values decrease vertically up the axis from bottom to top.</sci:help>
										<sci:legalval selected="true">Normal</sci:legalval>
										<sci:legalval>Inverted</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Label for the Y axis.</sci:help>
										<sci:value>Probability</sci:value>
									</sci:arg>
									<sci:arg name="Y Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.Axis Label</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Y Axis Display Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:help>&lt;p&gt;Display options for the Y-Axis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Show Axis Line - Show/Hide the axis line.&lt;/li&gt;
&lt;li&gt; Show Axis Label - Show/Hide the axis label.&lt;/li&gt;
&lt;li&gt; Show Tickmark Labels - Show/Hide the tickmark labels.&lt;/li&gt;
&lt;ul&gt;</sci:help>
										<sci:legalval>Show Axis Line</sci:legalval>
										<sci:legalval selected="true">Show Axis Label</sci:legalval>
										<sci:legalval selected="true">Show Tickmark Labels</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Options for &lt;i&gt;Y Axis&lt;/i&gt; tickmark labels.</sci:help>
										<sci:member>Y Axis Tickmark Options Major Tickmark Start Value</sci:member>
										<sci:member>Y Axis Tickmark Options Major Tickmark Spacing</sci:member>
										<sci:member>Y Axis Tickmark Options Tickmark Label Orientation</sci:member>
										<sci:member>Y Axis Tickmark Options Tickmark Label Type</sci:member>
										<sci:member>Y Axis Tickmark Options Tickmark Label Format</sci:member>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Spacing of major tickmarks.</sci:help>
										<sci:value>0.25</sci:value>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
										<sci:legalval>Based on Input Data</sci:legalval>
										<sci:legalval selected="true">Double</sci:legalval>
										<sci:legalval>Integer</sci:legalval>
										<sci:legalval>DateTime</sci:legalval>
										<sci:legalval>Date</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;Y Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;Default - use the date and time format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Date:
&lt;ul&gt;
&lt;li&gt;Default - use the date format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) NE &apos;Based on Input Data&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Date&apos;) then
	 resize(legalvalues, 6);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;13/06/1960&apos;;
	legalvalues[4] := &apos;06/13/60&apos;;
	legalvalues[5] := &apos;13/06/60&apos;;
	legalvalues[6] := &apos;June 13, 1960&apos;; 
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
										<sci:legalval>Default</sci:legalval>
										<sci:value>1.23</sci:value>
									</sci:arg>
									<sci:arg name="Y Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
										<sci:legalval selected="true">Horizontal</sci:legalval>
										<sci:legalval>Vertical</sci:legalval>
										<sci:legalval>Diagonal</sci:legalval>
									</sci:arg>
									<sci:arg name="Y Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the color of the Y axis line.</sci:help>
										<sci:value>Gainsboro</sci:value>
									</sci:arg>
									<sci:arg name="Second Y Axis" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Attributes for the right Y axis</sci:help>
										<sci:member>Second Y Axis Minimum</sci:member>
										<sci:member>Second Y Axis Maximum</sci:member>
										<sci:member>Second Y Axis Scaling</sci:member>
										<sci:member>Second Y Axis Label</sci:member>
										<sci:member>Second Y Axis Label Format</sci:member>
										<sci:member>Second Y Axis Display Options</sci:member>
										<sci:member>Second Y Axis Line Color</sci:member>
										<sci:member>Second Y Axis Tickmark Options</sci:member>
									</sci:arg>
									<sci:arg name="Second Y Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the lower bound of the right Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
									</sci:arg>
									<sci:arg name="Second Y Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Optional value for the upper bound of the right Y axis. If this is not specified, the axis range will be determined automatically.</sci:help>
										<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
									</sci:arg>
									<sci:arg name="Second Y Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Scaling for the right Y axis.</sci:help>
										<sci:legalval selected="true">Linear</sci:legalval>
										<sci:legalval>Logarithmic - base 10</sci:legalval>
										<sci:legalval>Logarithmic - natural</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Label for the right Y axis.</sci:help>
									</sci:arg>
									<sci:arg name="Second Y Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Chart.Axis Label</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Second Y Axis Display Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:help>&lt;p&gt;Display options for the Second Y-Axis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Show Axis Line - Show/Hide the axis line.&lt;/li&gt;
&lt;li&gt; Show Axis Label - Show/Hide the axis label.&lt;/li&gt;
&lt;li&gt; Show Tickmark Labels - Show/Hide the tickmark labels.&lt;/li&gt;
&lt;ul&gt;</sci:help>
										<sci:legalval>Show Axis Line</sci:legalval>
										<sci:legalval selected="true">Show Axis Label</sci:legalval>
										<sci:legalval selected="true">Show Tickmark Labels</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Options for &lt;i&gt;Second Y Axis&lt;/i&gt; tickmark labels.</sci:help>
										<sci:member>Second Y Axis Tickmark Options Major Tickmark Start Value</sci:member>
										<sci:member>Second Y Axis Tickmark Options Major Tickmark Spacing</sci:member>
										<sci:member>Second Y Axis Tickmark Options Tickmark Label Orientation</sci:member>
										<sci:member>Second Y Axis Tickmark Options Tickmark Label Type</sci:member>
										<sci:member>Second Y Axis Tickmark Options Tickmark Label Format</sci:member>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Spacing of major tickmarks.</sci:help>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
										<sci:legalval selected="true">Based on Input Data</sci:legalval>
										<sci:legalval>Double</sci:legalval>
										<sci:legalval>Integer</sci:legalval>
										<sci:legalval>DateTime</sci:legalval>
										<sci:legalval>Date</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;Second Y Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;Default - use the date and time format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Date:
&lt;ul&gt;
&lt;li&gt;Default - use the date format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) EQ &apos;Based on Input Data&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Date&apos;) then
	 resize(legalvalues, 6);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;13/06/1960&apos;;
	legalvalues[4] := &apos;06/13/60&apos;;
	legalvalues[5] := &apos;13/06/60&apos;;
	legalvalues[6] := &apos;June 13, 1960&apos;; 
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
										<sci:legalval selected="true">Default</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
										<sci:legalval selected="true">Horizontal</sci:legalval>
										<sci:legalval>Vertical</sci:legalval>
										<sci:legalval>Diagonal</sci:legalval>
									</sci:arg>
									<sci:arg name="Second Y Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies the color of the right Y axis line.</sci:help>
										<sci:value>Gainsboro</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
										<sci:member>Column Settings Header Text</sci:member>
										<sci:member>Column Settings Header Format</sci:member>
										<sci:member>Column Settings Header Position</sci:member>
										<sci:member>Column Settings Cell Format</sci:member>
										<sci:member>Column Settings Cell Position</sci:member>
									</sci:arg>
									<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
									</sci:arg>
									<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
									</sci:arg>
									<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
									</sci:arg>
									<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true" expanded="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
										<sci:value>REPORTCHARTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1590</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true" expanded="true">
										<sci:value>100</sci:value>
										<sci:value>Creates an XY plot for a report</sci:value>
										<sci:value>&lt;p&gt;Displays data as points and/or lines. Each incoming data record represents a single point for a given dataset. Multiple data series (i.e., &lt;em&gt;Data Series 1&lt;/em&gt;, &lt;em&gt;Data Series 2&lt;/em&gt;, etc.) can use distinct formatting. The chart as a whole and the individual axes are also customizable.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;X Property&lt;/i&gt; is the property containing the X data values. &lt;i&gt;Y Property&lt;/i&gt; is the property containing the Y data values. You can specify multiple Y properties for a given Data Series, as described below.&lt;/p&gt;

&lt;p&gt;To plot multiple datasets in a single chart, add additional Data Series using &lt;i&gt;Chart Data&lt;/i&gt; and specify an &lt;em&gt;X Property&lt;/em&gt; and &lt;em&gt;Y Property&lt;/em&gt; for &lt;em&gt;Data Series 1&lt;/em&gt; and &lt;em&gt;Data Series 2&lt;/em&gt;, etc. This allows you to control formatting options individually for each data series. Alternatively, you can enter multiple properties as a comma-separated list in &lt;em&gt;Y Property&lt;/em&gt; for a given Data Series. In this case, the same formatting is applied to each data property.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Data Series n&lt;/i&gt;: Specifies data properties and formatting options that control the particular data series.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Chart Options&lt;/i&gt;: Options that control the whole chart, such as &lt;i&gt;Title&lt;/i&gt; and various &lt;i&gt;Display Options&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;X Axis&lt;/i&gt;: Options that control the look and feel of the X Axis.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Y Axis&lt;/i&gt;: Options that control the look and feel of the Y Axis.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Second Y Axis&lt;/i&gt;: Options that control the look and feel of a second Y Axis, displayed on the right side of the chart, when any Data Series is specified to be plotted against it.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Column Settings&lt;/i&gt;: Options to control how the chart appears inside a table.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;em&gt;Chart Options&lt;/em&gt; &gt; &lt;em&gt;Chart Output&lt;/em&gt;, you can specify if all data records are plotted in a single chart or in a separate chart for each data record, (e.g., to plot array data as a chart in each table row). Array data is not required.&lt;/li&gt;
&lt;li&gt;To add additional Data Series, right-click the component to enter edit mode, and copy and paste one of the existing Data Series. Any values assigned to parameters are also copied.&lt;/li&gt;
&lt;li&gt;To display some of your data in unique way, you can add Canvas Elements to an XY Chart. You can only pipe a Canvas Element into the chart when the &lt;em&gt;Display Type&lt;/em&gt; is set to &quot;Image&quot;. &lt;/li&gt;
&lt;li&gt;To enable the &lt;A href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;Scriptable Charts API&lt;/A&gt; for this chart, set &lt;em&gt;Chart Options&lt;/em&gt; &gt; &lt;em&gt;Make Scriptable&lt;/em&gt; to &quot;True&quot;. &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_charts.pdf&apos;)&quot;&gt;Chart Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_canvas.pdf&apos;)&quot;&gt;Canvas Elements Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>A data record representing the chart is sent to the pass port.</sci:value>
										<sci:value>None</sci:value>
										<sci:value>The input data records are all sent to the fail port.</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Plug In</sci:value>
									</sci:arg>
									<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
										<sci:value>Chart Options Format</sci:value>
										<sci:value>Chart Options Links and Actions Link Options</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/report</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
									<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>DrainTopDown</sci:value>
									</sci:arg>
									<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
										<sci:value>com.scitegic.report.component.chart.XYPlotComponent</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Sep 14 11:06:16 2017</sci:value>
									</sci:arg>
									<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>scitegic/report</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>14</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>{DDD69C6F-63BC-41c0-8320-86BE1D88E458}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>XY Chart</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>2682 -95</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Reporting and Visualization\Reporting\Charts\XY Chart</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="Remove Properties" version="2">
									<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
										<sci:help>The names of properties to remove from each data record entering the component</sci:help>
										<sci:value>Fit_Response_POS</sci:value>
										<sci:value>Fit_Response_NEG</sci:value>
										<sci:value>Fit_Response_MEDIA</sci:value>
										<sci:value>Fit_Concentration</sci:value>
										<sci:value>Pos_Noise</sci:value>
										<sci:value>Neg_Noise</sci:value>
										<sci:value>Media_Noise</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>the action to perform</sci:help>
										<sci:value>Remove</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Sep 13 07:18:43 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;PropertyList&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Remove &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>2970 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Removes the specified properties</sci:value>
										<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records with the specified properties removed</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.1.0.119</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>16</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.ComponentJavaPlugin.1">
								<sci:component name="Table" version="2">
									<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>The optional title at the top of the table.</sci:help>
										<sci:member>Title Format</sci:member>
										<sci:member>Title Position</sci:member>
									</sci:arg>
									<sci:arg name="Title Format" type="FormatType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.Title</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Title Position" type="PositionType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
										<sci:value>600</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.Title</sci:value>
									</sci:arg>
									<sci:arg name="Table Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Format and position for the table as a whole.&lt;/p&gt;</sci:help>
										<sci:member>Format</sci:member>
										<sci:member>Position</sci:member>
									</sci:arg>
									<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.General</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.

Height settings will only be applied to tables in HTML reports.</sci:help>
										<sci:value>600</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.General</sci:value>
									</sci:arg>
									<sci:arg name="Header Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Options controlling the table header.&lt;/p&gt;</sci:help>
										<sci:member>Header Format</sci:member>
										<sci:member>Header Position</sci:member>
										<sci:member>Show Table Header</sci:member>
										<sci:member>Freeze Table Header</sci:member>
									</sci:arg>
									<sci:arg name="Show Table Header" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies whether table headers should be visible or not.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.Header</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Header Position" type="PositionType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
										<sci:value>600</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.Header</sci:value>
									</sci:arg>
									<sci:arg name="Cell Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Options controlling the table cells.&lt;/p&gt;</sci:help>
										<sci:member>Cell Format</sci:member>
										<sci:member>Cell Position</sci:member>
									</sci:arg>
									<sci:arg name="Cell Format" type="FormatType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:value>700</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.Cell</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Cell Position" type="PositionType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
										<sci:value>600</sci:value>
										<sci:value>Style</sci:value>
										<sci:value>Table.Cell</sci:value>
									</sci:arg>
									<sci:arg name="Data Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Options controlling the table data.&lt;/p&gt;</sci:help>
										<sci:member>Exclude Properties</sci:member>
										<sci:member>Column Order</sci:member>
										<sci:member>Array Value Display</sci:member>
										<sci:member>When Data Contains Reporting Information</sci:member>
										<sci:member>Aggregate Data</sci:member>
									</sci:arg>
									<sci:arg name="Exclude Properties" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;A comma-delimited list of properties which will not be rendered in an autogenerated table.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Column Order" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;A comma-separated list of Header Text names (which may differ from the corresponding property names), indicating the order the columns should appear. Any non-listed properties will be added as subsequent columns.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The column names are case-sensitive&lt;/li&gt;
&lt;/ul&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Array Value Display" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Determines how array values are separated when they are displayed in an autogenerated table.&lt;/p&gt;</sci:help>
										<sci:legalval>Separate by Commas</sci:legalval>
										<sci:legalval selected="true">Separate by Newlines</sci:legalval>
										<sci:legalval>One Array Element per Cell</sci:legalval>
									</sci:arg>
									<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;If True, all incoming data records are aggregated into a single output record. If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="When Data Contains Reporting Information" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Determines whether the table shows all the properties of data records that already have reporting information.&lt;/p&gt;</sci:help>
										<sci:legalval>Display Reporting Information Only</sci:legalval>
										<sci:legalval selected="true">Display Reporting Information and All Properties</sci:legalval>
									</sci:arg>
									<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
										<sci:member>Link Target</sci:member>
										<sci:member>HTML Attributes</sci:member>
										<sci:member>Tooltip</sci:member>
										<sci:member>Data Connector</sci:member>
									</sci:arg>
									<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
									</sci:arg>
									<sci:arg name="Tooltip" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>An optional tooltip for this reporting element.</sci:help>
									</sci:arg>
									<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
									</sci:arg>
									<sci:arg name="Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
										<sci:member>Subscriber Event Handling</sci:member>
										<sci:member>Publisher Event Handling</sci:member>
										<sci:member>Publisher Subscriber Model</sci:member>
									</sci:arg>
									<sci:arg name="Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
										<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
										<sci:legalval>Publisher</sci:legalval>
										<sci:legalval>Subscriber</sci:legalval>
										<sci:legalval>None</sci:legalval>
									</sci:arg>
									<sci:arg name="Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
										<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalval selected="true">Highlight</sci:legalval>
										<sci:legalval>Filter</sci:legalval>
										<sci:legalval>Reverse Filter</sci:legalval>
									</sci:arg>
									<sci:arg name="Publisher Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Setting the publishing event type.&lt;/p&gt;</sci:help>
										<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Publisher Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Subscriber&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Subscriber&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
										<sci:legalval selected="true">On Click</sci:legalval>
										<sci:legalval>On Mouse Over</sci:legalval>
									</sci:arg>
									<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
										<sci:member>Column Settings Header Text</sci:member>
										<sci:member>Column Settings Header Format</sci:member>
										<sci:member>Column Settings Header Position</sci:member>
										<sci:member>Column Settings Cell Format</sci:member>
										<sci:member>Column Settings Cell Position</sci:member>
										<sci:member>Show 4-digit Year</sci:member>
									</sci:arg>
									<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
									</sci:arg>
									<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
									</sci:arg>
									<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:value>700</sci:value>
									</sci:arg>
									<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
									</sci:arg>
									<sci:arg name="Show 4-digit Year" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>For columns of type DateTime, this parameter controls the display of years, with either four, or two digits (default).</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true" expanded="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true" expanded="true">
										<sci:value>100</sci:value>
										<sci:value>Creates a table in a report by collecting data records and displaying them in rows and columns</sci:value>
										<sci:value>&lt;p&gt;There are three ways you can create tables:&lt;/p&gt;

&lt;ul&gt;

&lt;li&gt;&lt;b&gt;Auto-generated:&lt;/b&gt; Quickly build a table by adding one Table component in a report, immediately following data (i.e., blue) components). The Table component takes your data sources and creates one column for each property on your data stream. The table includes some pre-set formats to save you time. &lt;/li&gt; 

&lt;li&gt;&lt;b&gt;Column-generated:&lt;/b&gt; You specify the content of your data source that should be used in the table. For each data property to include, add a component defining the content (e.g., &lt;a href=&quot;javascript:DoLink(&apos;{34E6C845-4ACB-4212-BBA3-7422213D458F}&apos;)&quot;&gt;Text&lt;/a&gt; or a chart component, plus a separate &lt;a href=&quot;javascript:DoLink(&apos;{EB2E16E8-D13E-4C7F-BB46-0E06502A6833}&apos;)&quot;&gt;Column component&lt;/a&gt; for each column of the table to be created.  Branch the data source to each pair of content/Column components and then pipe all of them into a single Table component. Each column is added to the table in the order it is shown visually in the protocol (top to bottom).  Each column in a table must have the same number of rows.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;In-line:&lt;/b&gt; Similar to Column-generated but instead of branching the data for each column of the table, place the &quot;content&quot; components in the sequence for the final table and then pipe this into a Table component.  In each content component, use the Column Settings components to define column header and cell options.&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Input can be raw data records, column objects or a sequence of Reporting components.</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>A data record representing the table is sent to the pass port.</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.2.0.1312</sci:value>
									</sci:arg>
									<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>DrainTopDown</sci:value>
									</sci:arg>
									<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
										<sci:value>com.scitegic.report.component.TableComponent</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>3258 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
										<sci:value>REPORTTABLENODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>{8DD32465-CB99-4A1E-870D-1A2F56D2C249}</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Plug In</sci:value>
									</sci:arg>
									<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>scitegic/report</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>9</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/report</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Oct 31 13:22:09 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:value>Table</sci:value>
									</sci:arg>
									<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false" expanded="true">
										<sci:help>CaptureStdoutStderr</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
										<sci:value>Format</sci:value>
										<sci:value>Link Options</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Reporting and Visualization\Reporting\Elements\Table</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.SortData.1">
								<sci:component name="Sort Data" version="2">
									<sci:arg name="Sort By" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
										<sci:help>Defines properties for sorting. Use this parameter to add, remove and reorder properties to be used for sorting.</sci:help>
										<sci:member>Property 1</sci:member>
										<sci:member>Property 2</sci:member>
										<sci:member>Property 3</sci:member>
									</sci:arg>
									<sci:arg name="Property 1" type="PropertyNameType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The property to sort by.</sci:help>
										<sci:member>Property 1 Sort Order</sci:member>
										<sci:member>Property 1 Sort As</sci:member>
										<sci:value>Cmpd1</sci:value>
									</sci:arg>
									<sci:arg name="Property 1 Sort Order" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to sort in ascending or descending order.</sci:help>
										<sci:legalval selected="true">Ascending</sci:legalval>
										<sci:legalval>Descending</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 1 Sort As" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
										<sci:legalval>Numbers</sci:legalval>
										<sci:legalval selected="true">Text</sci:legalval>
										<sci:legalval>Case Sensitive Text</sci:legalval>
										<sci:legalval>Text Containing Numbers</sci:legalval>
										<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
										<sci:legalval>Dates</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 2" type="PropertyNameType" required="false" visibility="visible" multi="false">
										<sci:help>The property to sort by.</sci:help>
										<sci:member>Property 2 Sort Order</sci:member>
										<sci:member>Property 2 Sort As</sci:member>
										<sci:value>Conc1</sci:value>
									</sci:arg>
									<sci:arg name="Property 2 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to sort in ascending or descending order.</sci:help>
										<sci:legalval selected="true">Ascending</sci:legalval>
										<sci:legalval>Descending</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 2 Sort As" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">Numbers</sci:legalval>
										<sci:legalval>Text</sci:legalval>
										<sci:legalval>Case Sensitive Text</sci:legalval>
										<sci:legalval>Text Containing Numbers</sci:legalval>
										<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
										<sci:legalval>Dates</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 3" type="PropertyNameType" required="false" visibility="visible" multi="false">
										<sci:help>The property to sort by.</sci:help>
										<sci:member>Property 3 Sort Order</sci:member>
										<sci:member>Property 3 Sort As</sci:member>
									</sci:arg>
									<sci:arg name="Property 3 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to sort in ascending or descending order.</sci:help>
										<sci:legalval selected="true">Ascending</sci:legalval>
										<sci:legalval>Descending</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 3 Sort As" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">Numbers</sci:legalval>
										<sci:legalval>Text</sci:legalval>
										<sci:legalval>Case Sensitive Text</sci:legalval>
										<sci:legalval>Text Containing Numbers</sci:legalval>
										<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
										<sci:legalval>Dates</sci:legalval>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>You can provide this to only return this number of records. This is useful when you only want to see the &quot;best&quot; record or records.</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Mar 27 13:39:02 2017</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>/* Start from &apos;Property 1&apos; since it must be defined.
   Keep this following line for the client auto-rename to use.
	 Parameter(&apos;Property 1&apos;), 
     Parameter(&apos;Property 2&apos;), 
	 Parameter(&apos;Property 3&apos;)
	 Parameter(&apos;Property 4&apos;)
	 Parameter(&apos;Property 5&apos;)
 */
if (trim(strlength(parameter(&apos;Property 1&apos;, 2))) &gt; 0) then
	#name := &quot;Sort on &quot; . trim(parameter(&apos;Property 1&apos;, 2));
	
	/* Get other sort properties that have values */
	#paramKey := &apos;Property &apos;;
	#count := 2;
	#paramName := #paramKey . #count;

	while (#count &lt;= 5 and parameter(#paramName, 2) is defined)
	loop
		if (strlength(parameter(#paramName, 2)) &gt; 0) then		
			#name := #name . &apos;, &apos;;
			#name := #name . parameter(#paramName, 2);
		end if;
	
		#count++;
		#paramName := #paramKey . #count;
	end loop;
	#name;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Sort Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{BC934106-6EA5-44e1-93C3-8787DECA9D15}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Sorts data records according to one or more properties</sci:value>
										<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sort By&lt;/i&gt; parameter to add more properties for sorting.&lt;/p&gt;

&lt;p&gt;When multiple properties are used by sorting, the property values of &lt;i&gt;Property 1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;Property 2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;Property 3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The order of sorting can be changed using &lt;i&gt;Sort Order&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;li&gt;Records containing Null or undefined &lt;i&gt;Sort By&lt;/i&gt; properties will be output to the Fail Port.
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records in sorted order</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records that do not contain the sort field(s)</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1396</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Sort Data</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.MergeProperties.1">
								<sci:component name="Merge Data" version="2">
									<sci:arg name="MergeUsing" type="PropertyNameType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
										<sci:member>MergeUsingListType</sci:member>
										<sci:member>MergePropertyType</sci:member>
										<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
										<sci:member>IgnoreCase</sci:member>
										<sci:value>Func,Cmpd1</sci:value>
									</sci:arg>
									<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:legalval>UseFirstDefinedValue</sci:legalval>
										<sci:legalval selected="true">UseAllValues</sci:legalval>
									</sci:arg>
									<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:legalval>IsNumeric</sci:legalval>
										<sci:legalval selected="true">IsText</sci:legalval>
										<sci:legalval>IsDate</sci:legalval>
										<sci:legalval>IsFingerprint</sci:legalval>
									</sci:arg>
									<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
										<sci:member>WhenMerging</sci:member>
										<sci:member>KeepAllNullString</sci:member>
										<sci:member>KeepAllPreferredNodeName</sci:member>
										<sci:member>PrefixUsingProperty</sci:member>
										<sci:member>Data Are Sorted</sci:member>
										<sci:legalval selected="true">KeepAll</sci:legalval>
										<sci:legalval>KeepFirst</sci:legalval>
									</sci:arg>
									<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
										<sci:legalval>OverwriteOrCreate</sci:legalval>
										<sci:legalval>OverwriteExisting</sci:legalval>
										<sci:legalval>CreateIfNew</sci:legalval>
										<sci:legalval selected="true">AppendOrCreate</sci:legalval>
										<sci:legalval>AppendExisting</sci:legalval>
									</sci:arg>
									<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
										<sci:value>None</sci:value>
									</sci:arg>
									<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
										<sci:value>Molecule</sci:value>
									</sci:arg>
									<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
									</sci:arg>
									<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;MergeUsing&lt;/i&gt; properties. If so, then the merge can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Sep 13 07:05:29 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;MergeUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>if (strlength(trim(parameter(&apos;MergeUsing&apos;, 2))) &gt; 0) then
	&quot;Merge on &quot; . trim(parameter(&apos;MergeUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Merge Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>JOINNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Merges properties of all data records that share the same key property value into a single data record</sci:value>
										<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property, which acts as an ID or index property.&lt;/p&gt;
&lt;p&gt;This component can be used to perform two types of operation:
&lt;ul&gt;
&lt;li&gt;Merge data records from multiple input streams. This combines properties from the multiple streams that are associated with the same index (i.e., &lt;i&gt;MergeUsing&lt;/i&gt;) property. Typically this will widen the data records with more properties and reduce the total number of data records.&lt;/li&gt;
&lt;li&gt;Merge data records from a single input stream to create array data. This maintains the number of properties but will reduce the number of records.&lt;/li&gt;
&lt;/ul&gt;
Note that these operations can occur simultaneously.
&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;
{2E21E16B-6901-46F3-8780-F14D3D7057CE}
&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records that contain the properties being used for merging</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records that do not contain the properties being used for merging</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.1.0.119</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
										<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>Func RLIKE(&quot;SING&quot;)</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>666 -295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>#Min := -0.00001;
#Max := 0.00001;

#Range := #Max-#Min;

#FEATS := &apos;POS,NEG,MEDIA&apos;;
EXPAND(&apos;,&apos;,#FEATS);

FOREACH #FEAT IN #FEATS LOOP
	FOR #i in 1 .. numvalues(property(#FEAT)) LOOP
		append(property(#FEAT.&apos;_noise&apos;), property(#FEAT)[#i]+((#Range*RAND())+#Min));
	END LOOP;
END LOOP;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>954 -295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Subprotocol" version="2">
									<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
										<sci:member>RunToCompletion Categorize Using</sci:member>
										<sci:legalval>False</sci:legalval>
										<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
										<sci:legalval>True - For Each Category</sci:legalval>
									</sci:arg>
									<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
										<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>$(RuntimeServer)</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>*</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval>Halt</sci:legalval>
										<sci:legalval selected="true">Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval>Halt</sci:legalval>
										<sci:legalval selected="true">Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Fit SVM</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>SUBPROTOCOLNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>790</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1242 -295</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
										<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.2.0.1267</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>120</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/coreutils</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>4</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="R Custom Script" version="2">
											<sci:arg name="Script" type="TextType" required="true" visibility="visible" multi="false">
												<sci:help>Text of the R script you wish to run.  Enter the script just as if you were typing it in R.</sci:help>
												<sci:value>library(e1071)
set.seed(1)

Conc1 = AllData$Conc1
Response = AllData$NEG_noise

df = as.data.frame(cbind(Conc1,Response))


model = svm(formula= Response~., data=df,
			type=&quot;eps-regression&quot;,
			kernel = &quot;$(kernel)&quot;,
			scale=TRUE,
			cross=2)

#tuneResult &lt;- tune(svm, Response~.,  data = df,
#                   ranges = list(epsilon = seq(0.1,1,0.1), gamma =2^(-1:1) , cost = 2^(0:3)),
#				   tunecontrol = tune.control(sampling = &quot;cross&quot;,cross=2)
#)

#tunedModel &lt;- tuneResult$best.model

Fit_Concentration = seq(from=min(AllData$Conc1),to=max(AllData$Conc1),length.out=100)
Conc1 = Fit_Concentration
Fit_Response_Neg = predict(model,type=&quot;response&quot;,newdata = Conc1)

Results = cbind(Fit_Concentration,Fit_Response_Neg)
</sci:value>
											</sci:arg>
											<sci:arg name="InputFrame" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Name to use in R script for data.frame containing input data.  Data in this frame will be sent out the pass port on completion of the script.</sci:help>
												<sci:value>AllData</sci:value>
											</sci:arg>
											<sci:arg name="ResultsFrame" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Name to use in R script for data.frame containing calculation results, which will be sent out the fail port.</sci:help>
												<sci:value>Results</sci:value>
											</sci:arg>
											<sci:arg name="kernel" type="StringType" required="false" visibility="visible" multi="false">
												<sci:legalval>polynomial</sci:legalval>
												<sci:legalval selected="true">radial</sci:legalval>
												<sci:legalval>sigmoid</sci:legalval>
											</sci:arg>
											<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
												<sci:help>Contains less commonly used parameters</sci:help>
												<sci:member>PlotWidth</sci:member>
												<sci:member>PlotHeight</sci:member>
												<sci:member>ShowRInputOutput</sci:member>
												<sci:member>R Functions Source</sci:member>
											</sci:arg>
											<sci:arg name="R Functions Source" type="URLType" required="false" visibility="visible" multi="false">
												<sci:help>Optional name of a file containing an R script or custom R functions you wish to use in the Script.  This file will be sourced in R before the Script is executed.
</sci:help>
												<sci:member>Embed External Scripts</sci:member>
											</sci:arg>
											<sci:arg name="Embed External Scripts" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>If True, indicates that the scripts specified by &lt;i&gt;R Functions Source&lt;/i&gt; are to be embedded in the R script created by this component. This can be useful for debugging purposes. If False, the scripts are concatenated into a separate temporary file that is executed using the R source() function.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="PlotWidth" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>Width in pixels of any plots created by the script</sci:help>
												<sci:value>600</sci:value>
											</sci:arg>
											<sci:arg name="PlotHeight" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>Height in pixels of any plots created by the script</sci:help>
												<sci:value>600</sci:value>
											</sci:arg>
											<sci:arg name="ShowRInputOutput" type="StringType" required="false" visibility="visible" multi="true">
												<sci:help>Specify whether or not to show the R script and the R stdout in Notepad viewers</sci:help>
												<sci:legalval>Script</sci:legalval>
												<sci:legalval>StdOutput</sci:legalval>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:value>RExitStatus,PlotName,RFunctionsFile,ShowRScript,ShowRStdOutput,RDir,ScriptPrefix,ScriptSuffix,RParScript,RPlotWidth,RPlotHeight,RplotPrefix,stderr,ExternalScript</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:value>$(R_Run_Remote)</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>100000000</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>$(R_Server)</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Jul 20 12:16:31 2017</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>R Custom Script</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{140C906F-960F-4DCD-84FD-D7DBF7277F0D}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>390 -95</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Executes R script</sci:value>
												<sci:value>Use this component to write your own custom R script for operating on incoming data records. All records coming into the component are put into an R data frame whose name is given by &lt;i&gt;InputFrame&lt;/i&gt;.  After your script has executed, the data in this frame are sent out the Pass port, including any changes made to the frame within the R script.
&lt;p&gt;
Any plots created in your script are sent out the Fail port and can be viewed with the &lt;a href=&quot;javascript:DoLink(&apos;{45979297-7C23-4374-BE33-1424E90A09A6}&apos;)&quot;&gt;R Plot Viewer&lt;/a&gt;.
&lt;p&gt;
If your R script creates a data frame with the name given by &lt;i&gt;ResultsFrame&lt;/i&gt;, the data in this frame are also  sent out the Fail port.  (You may wish to use this frame for summary statistics, for example.)
&lt;p&gt;
&lt;b&gt;Hints on manipulating R data frames&lt;/b&gt;
&lt;p&gt;
Assume that the &lt;i&gt;InputFrame&lt;/i&gt; name is &quot;AllData&quot; and that there are three properties -- ALogP, prop1, and Property 2 -- defined on each Pipeline Pilot data record (in that order).  Within the R script, you can refer to the ALogP values in any of the following ways:
&lt;p&gt;
&lt;code&gt;
ALogP&lt;br&gt;
AllData$ALogP&lt;br&gt;
AllData[&quot;ALogP&quot;]
AllData[1]&lt;br&gt;
AllData[,1]&lt;br&gt;
AllData[[1]]&lt;br&gt;
&lt;/code&gt;
&lt;p&gt;
Note that the following assignment in R does not change the value of ALogP within the AllData frame:
&lt;p&gt;
&lt;code&gt;ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
while the following assignment does change the value within the frame:
&lt;p&gt;
&lt;code&gt;AllData$ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
(The reason for this behavior is that after the data are read into R but before your script is executed, the &lt;code&gt;attach&lt;/code&gt; function is called on the data frame.  This allows you to refer to columns in the frame by column name alone, but any changes you make to the column name variables are made outside the frame.)
&lt;p&gt;
Properties with embedded spaces or special R characters such as &quot;#&quot; must always be quoted if referred to by name:
&lt;p&gt;
&lt;code&gt;AllData$&quot;Property 2&quot;&lt;/code&gt;
&lt;p&gt;
To add a new column to the frame, use the cbind function:
&lt;p&gt;
&lt;code&gt;AllData &amp;lt;- cbind(AllData, LogPCalc=ALogP+0.5)&lt;/code&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;Molecular structures are ignored by this component and will not be passed through. 
&lt;li&gt;An array property with N elements on an input data record will be converted to N scalar properties in order that the records conform to the R data frame structure.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more information on writing R scripts, see &lt;a href=&quot;javascript:DoLink(&apos;http://cran.r-project.org/doc/manuals/R-intro.html&apos;)&quot;&gt;An Introduction to R&lt;/a&gt;.
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>18.1.0.1523</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
												<sci:legalval>Cant Replace With Copy</sci:legalval>
												<sci:legalval>Cant Open</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Manipulators\R Custom Script</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Check R exe" version="2">
													<sci:arg name="Error Behavior" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies action to take in case of a problem with the Pipeline Pilot R configuration. Options are:
&lt;ul&gt;
&lt;li&gt;Default: For fatal errors such as a missing R executable, show a message in a dialog and halt the protocol if running from Pipeline Pilot; raise an exception if running from another client such as Web Port. For a non-fatal error such as an unsupported R version, show a message but do not halt the protocol if running from Pipeline Pilot; do nothing if running from another client.
&lt;li&gt;Message out Fail Port: For any type of error, send a message out the fail port in a property named &lt;b&gt;ErrorText&lt;/b&gt;. Do not raise an exception or display a message.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If the global property @SuppressRVersionWarning is set to True, no message is shown in the &quot;Default&quot; case for unsupported R versions.
&lt;/ul&gt;</sci:help>
														<sci:legalval selected="true">Default</sci:legalval>
														<sci:legalval>Message out Fail Port</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>ver,ErrorText,EnvOverride</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
														<sci:legalval>Cant Replace With Copy</sci:legalval>
														<sci:legalval>Cant Open</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Jun 02 08:18:08 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Check R exe</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{320AE9ED-071D-4ad7-AE87-2D692FAED359}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Check R executable</sci:value>
														<sci:value>Checks that the global variable &apos;R_exe&apos;, which points to the location of the R executable, is defined, and that the R executable file is in the location specified by R_exe. </sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1468</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Check R exe</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@ShowRScript := false;
@ShowRStdOutput := false;
for #i in 1 .. numvalues(@ShowRInputOutput) loop
   #s := @ShowRInputOutput[#i];
   if (#s eq &quot;Script&quot;) then 
      @ShowRScript := true;
   end if;
   if (#s eq &quot;StdOutput&quot;) then 
      @ShowRStdOutput := true;
   end if;
end loop;

@RDir := strreplace(@RunDirectory, &apos;\&apos;, &apos;/&apos;);
@RDir .= &apos;/temp&apos;;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Set R I/O to display and ROutput</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>29</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.ClientTempFiles.1">
												<sci:component name="Create Tempfiles for R" version="2">
													<sci:arg name="Server Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma separated list of global parameter names (such as &quot;tmp1,tmp2&quot;) to assign with temporary filenames obtained from the server</sci:help>
														<sci:value>Rmodelfile, Rscriptfile, Rstdoutfile, Rinput1file, Rinput2file, Rinput3file, Rinput4file, Rinput5file, Routput1file,Routput2file, Routput3file, Routput4file, Routput5file</sci:value>
													</sci:arg>
													<sci:arg name="Client Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma separated list of global parameter names (such as &quot;ctmp1,ctmp2&quot;) to assign with temporary filenames obtained from the client</sci:help>
													</sci:arg>
													<sci:arg name="Force Forward Slashes" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to force all server tempfiles to use forward slashes; this is useful if the temp file name is used to communicate with a external program that cannot handle backslashes on Windows</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>mhassan</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jul 13 10:17:05 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Create Tempfiles for R</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{2BFBE007-9937-47EB-A9B4-B76491D99C59}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Client Temp Filenames</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Obtains temporary filenames from the client or the server that are added to the global property list.</sci:value>
														<sci:value>&lt;p&gt;These names can be used later within the protocol as global variables within component parameters or as PilotScript expressions. For example, if your component executes on the client, but requires specific files to be present, you can create a temporary file named &quot;clientTmpFile1&quot; and later refer to it in a parameter or PilotScript entry via &quot;$(clientTmpFile1)&quot;.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Server Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the server.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Client Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the client.&lt;/p&gt;

&lt;p&gt;All files created in this way are deleted when the protocol is closed or, in the case of client tempfiles, when the client starts up again. (They are not permanent files.)&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.100</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Create Tempfiles for R</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>trim(@&apos;R Functions Source&apos;) ne &apos;&apos;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Any R script files?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:member>Keep Properties</sci:member>
														<sci:value>$(R Functions Source)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval>None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval selected="true">FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
													</sci:arg>
													<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies which delimiting mechanism to use:

 - EndOfFile: All text is one record.
 - EndOfParagraph: Each paragraph becomes a separate record.
 - EndOfLine: Each line becomes a separate record.
 - DelimitText: Uses the parameters BeginningText and/or EndingText.

</sci:help>
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
														<sci:legalval selected="true">EndOfFile</sci:legalval>
														<sci:legalval>EndOfParagraph</sci:legalval>
														<sci:legalval>EndOfLine</sci:legalval>
														<sci:legalval>DelimitText</sci:legalval>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:member>Binary</sci:member>
														<sci:member>KeepEndOfLine</sci:member>
														<sci:member>PutTextInProperty</sci:member>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies the name of the property list to hold the block of text</sci:help>
														<sci:value>Text</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Jan 21 11:19:34 2005</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R script files</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads raw textual data.</sci:value>
														<sci:value>&lt;p&gt;Reads text files and creates a data record for each block of text. You can specify the delimiters 
  for the blocks. Each data record is stored in a single property.
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited 
  Text Reader&quot;. If the text file is formatted with one record per line, with the 
  data records separated by delimiters (such as Excel generated .csv file), use 
  the Delimited Text Reader instead. 

If delimit text is given, the text used to delimit must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>5.0.0.1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Tag Data" version="2">
													<sci:arg name="TagName" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of a new property to create to serve as a tag</sci:help>
														<sci:value>Tagged</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:value>$(TagName) := true;</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)
</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Tag Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{BCF71EB2-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Tags each record with a given property name for later identification.</sci:value>
														<sci:value>A new property is created for each incoming data record, defined with the value &quot;True&quot;. Records tagged in this way can easily be identified in future components by evaluating whether the new property is defined. This is useful for marking a data stream prior to combining it with another stream for learning, substructure search, and other operations. An alternative method for tagging records is available in most file readers which can tag the records with a SourceTag. </sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with the additional tag property</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>5</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Add Tag Property</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge Data" version="2">
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of the key property (or a comma-separated list of properties) that contain the value identifying those records to merge. If multiple &quot;MergeUsing&quot; names are given, all must be identical for a merge event to occur (unless MergeUsingList type is set to &quot;UseFirstDefinedValue&quot;).
</sci:help>
														<sci:member>IgnoreCase</sci:member>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:value>Tagged</sci:value>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &quot;MergeUsing&quot; propety values
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>How &quot;MergeUsing&quot; properties are interpreted when  more than one property is listed:
 
    - UseFirstDefinedValue: Merges using only the first property in the list that has a defined value for a record.
 
  - UseAllValues: Merges using the concatentation of the values of all properties listed.</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Kinds of values found in the &quot;MergeUsing&quot; property:&lt;DL&gt;
&lt;DT&gt;&lt;b&gt;IsNumeric:&lt;/b&gt; &lt;DD&gt;All numbers are converted to doubles for comparison (so 1 = 1.0).
&lt;p&gt;
&lt;DT&gt;&lt;b&gt;IsText:&lt;/b&gt; &lt;DD&gt;All comparisons are made as string values.
&lt;p&gt; 
&lt;DT&gt;&lt;b&gt;IsDate:&lt;/b&gt; &lt;DD&gt;The key is considered a date
&lt;p&gt;
&lt;DT&gt;&lt;b&gt;IsFingerprint:&lt;/b&gt; &lt;DD&gt;The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.
&lt;/DL&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What happens to the values of properties represented in more than one of the records being combined. Does not apply to the &quot;MergeUsing&quot; property.

 
   KeepAll - keeps all property values by appending additional values in an array.
 
  KeepFirst - keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the &apos;MergeUsing&apos; property are discarded.
 
</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>When merging with KeepAll behavior, provides fine control over how multiple values are treated.
 
  - OverwriteOrCreate: copy all properties of each merging record sequentially, overwriting any values that may already exist (instead of generating an array). 
 
  - OverwriteExisting: Only copies properties that already exist on the first of the records merging together, overwriting those original values (instead of creating an array).
 
  - CreateIfNew: Leaves any existing properties alone, and writes only new properties.
 
  - AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.
 
  - AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>This string is used during append in &quot;KeepAll&quot; to pad out empty values. It keeps the generated arrays of values in sync for multiple samples. The value &quot;None&quot; causes no padding to occur.
</sci:help>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>If defined, and the MergeBehavior is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.</sci:help>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jun 01 10:08:02 2005</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JoinNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Combines data records having the same value for a given property.
</sci:value>
														<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the 
  same value as each other for the &lt;em&gt;MergeUsing&lt;/em&gt; parameter. If multiple 
  MergeUsing names are given, all must be identical for a merge event 
  to occur. &lt;/p&gt;
&lt;p&gt;When &lt;em&gt;MergeBehavior&lt;/em&gt; is set to &amp;quot;KeepFirst&amp;quot;, the properties 
  of merged data records are appended in the form of an array, unless the &lt;em&gt;PrefixUsingProperty 
  &lt;/em&gt;parameter is set to prepend each property name on each data item. This 
  is often useful when merging multiple data files with a &lt;em&gt;SourceTag&lt;/em&gt; parameter 
  (available in many readers). &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See Also: &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt;: Merges records based on identical molecular structures.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records that contain the properties being used for merging</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records that do not contain the properties being used for merging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>5.0.0.103</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>6</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>newtext := &apos;&apos;;

for #i in 1 .. numvalues(Text) loop
	newtext .= &apos;####  &apos; . SourceTag[#i] . &quot;  ###\n&quot;;
	newtext .= Text[#i] . &quot;\n&quot;;
end loop;

keep(&apos;newtext&apos;);

if @&apos;Embed External Scripts&apos; then
	@ExternalScript := newtext;
end if;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Condense scripts into one</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Executes PilotScript to modify data records.</sci:value>
														<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>7</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.TextWriter.1">
												<sci:component name="Text Writer" version="2">
													<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The filename for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>IfFileExists</sci:member>
														<sci:member>CharacterEncoding</sci:member>
														<sci:value>$(Rinput2file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What to do if the given destination file already exists</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org/&apos;)&quot;&gt;http://www.unicode.org/&lt;/a&gt;&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">ANSI</sci:legalval>
														<sci:legalval>UTF-8</sci:legalval>
														<sci:legalval>Unicode</sci:legalval>
														<sci:legalval>Unicode big endian</sci:legalval>
													</sci:arg>
													<sci:arg name="Delimiter Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Text that should preceed each record</sci:help>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Any text to be included after each record</sci:help>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Binary</sci:member>
														<sci:member>PropertyNames</sci:member>
														<sci:member>IncludePropertyNames</sci:member>
													</sci:arg>
													<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>List of properties to write (separated by commas). &quot;*&quot; indicates to write all properties.</sci:help>
														<sci:value>*</sci:value>
													</sci:arg>
													<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Display the name of each property along with its values</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Open the file in binary mode to output non-textual information</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Sep 07 14:08:04 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Text Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -470</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Formats and writes textual data records to a file.</sci:value>
														<sci:value>&lt;p&gt;Data records are formatted as text written to disk as a &lt;i&gt;Destination&lt;/i&gt; 
  file. You can specify how to separate the data records. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited 
  Text Writer&quot;. To write a file formatted with one record per row with delimiters 
  between the data use the &quot;Delimited Text Writer&quot;.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.5.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>8</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>srand();
@RplotPrefix := &apos;Rplot&apos; . floor(rand() * 10000000);

@ScriptPrefix := &apos;
SpecialDoubleValueStrings &lt;- c(&quot;NA&quot;, &quot;NaN&quot;, &quot;Inf&quot;, &quot;-Inf&quot;)
FactorOrNumber &lt;- function(vec)
{
	# Heuristic to see if vec is numeric but with some non-numeric values
	# Rule:
	# First trim any pre-existing NAs
	# Then if there is only 1 level in the non-numeric elements, assume that string
	# is the NA marker and the vector is actually numeric; Alternatively, 
	# if the only non-numeric values lie in the set {&quot;NA&quot;, &quot;NaN&quot;, &quot;-Inf&quot;, &quot;Inf&quot;}, treat vector as numeric;
	# otherwise, leave it as a factor.
	if (is.factor(vec))
	{
		vecNoNA &lt;- na.omit(vec)
		vecnum &lt;- suppressWarnings(as.numeric(levels(vecNoNA))[vecNoNA])
		vecNumeric &lt;- vecNoNA[!is.na(vecnum), drop=TRUE]		
		vecNonNumeric &lt;- vecNoNA[is.na(vecnum), drop=TRUE]

		if ((length(levels(vecNonNumeric)) == 1 &amp;&amp; length(vecNumeric) &gt; 1) || 
			 !any(is.na(match(vecNonNumeric, SpecialDoubleValueStrings))))
		{
			vec &lt;- suppressWarnings(as.numeric(levels(vec))[vec])
		}
	}
	
	vec
}
# Convert factors that should be numbers back to numbers.
cleanRdata &lt;- function(x)
{
	if (!is.null(x))
	{
		for (ii in 1:ncol(x))
		{	
			if (is.factor(x[[ii]]))
				x[[ii]] &lt;- FactorOrNumber(x[[ii]])
		}
	}
	
	x
}

$(InputFrame) &lt;- NULL
try($(InputFrame) &lt;- read.delim(&quot;$(Rinput1file)&quot;, comment.char=&quot;&quot;, check.names=FALSE))

# Use the following statement to turn factors that &quot;should&quot; be numeric
# back to numeric variables:
# $(InputFrame) &lt;- cleanRdata($(InputFrame))

attach($(InputFrame))
png(filename = &quot;$(RDir)/&apos; . @RplotPrefix . &apos;%03d.png&quot;, width = $(RPlotWidth), height = $(RPlotHeight))

$(RParScript)
&apos;;

@ScriptSuffix := &apos;
dev.off()

try(write.table(data.frame($(InputFrame), check.names=FALSE), file=&quot;$(Routput1file)&quot;, sep=&quot;\t&quot;, col.names=TRUE, row.names=FALSE, quote=FALSE))
if (sum(ls() == &quot;$(ResultsFrame)&quot;) == 1)
{
    write.table(data.frame($(ResultsFrame), check.names=FALSE), file=&quot;$(Routput2file)&quot;, sep=&quot;\t&quot;, col.names=TRUE, row.names=FALSE, quote=FALSE)
}
&apos;;

if trim(@&apos;R Functions Source&apos;) ne &apos;&apos; then
	if @&apos;Embed External Scripts&apos; then
		@ScriptPrefix .= &apos;

$(ExternalScript)
&apos;;
	else
		@ScriptPrefix .= &apos;

source(&quot;$(Rinput2file)&quot;)
&apos;;
	end if;
end if;

</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Define script prefix and suffix</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>9</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedWriter.1">
												<sci:component name="Delimited Text Writer" version="2">
													<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz to the filename. </sci:help>
														<sci:value>$(Rinput1file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What to do if the given file already exists.</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.)</sci:help>
														<sci:legalval selected="true">Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
													</sci:arg>
													<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The delimiter to use between multiple value on a single property.  If None, 
then the multiple values are separated into their own columns.</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>What text to output when data for a given column is not present
  (leave empty enter text of choice)</sci:help>
													</sci:arg>
													<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to output column names</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to output a row which includes the column types</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>SpotfireFormat</sci:legalval>
														<sci:legalval>NDIFormat</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Includes the number of the record as the first
field for each record.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:18 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Write Input Data for R</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -1170</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a text file, separating the individual fields with a specified delimiter character. </sci:value>
														<sci:value>Writes data records to a text file, separating the records with a new line and the individual fields within a record with the character specified in the &apos;Delimiter&apos; character.  The property names for the fields will be stored as the first line of the file.

&apos;MultipleValueDelimiter&apos; controls properties with more than one value. If None, then they are written as multiple fields (e.g., prop[1], prop[2] ...). Else, they are written into a single value separated by the chosen delimiter.

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.SeparateValues.1">
												<sci:component name="Unmerge Data" version="2">
													<sci:arg name="PropertyNames" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The names of the one or more properties to separate and return as separate data records.  If no property names are given, then all properties with
multiple values will be unmerged. If multiple properties are unmerged, the number of unmerged records is the number of values of a property with the maximum number of values.</sci:help>
													</sci:arg>
													<sci:arg name="Additional Options" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>Large Data Records</sci:member>
														<sci:member>Unmerge ByteArrayValues</sci:member>
													</sci:arg>
													<sci:arg name="Large Data Records" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each of your records are particularly large, setting this parameter to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Unmerge ByteArrayValues" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>ByteArrayValues are property representations of binary data.  Although they are technically arrays of bytes and could be unmerged, in most cases these properties should be treated as a single value rather than an array of bytes.  This parameter is available to restore the previous odd behavior, if desired.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Sep 13 07:08:33 2016</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Unmerge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Unmerge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>GENERATORNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -1345</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Separates data records containing array properties into individual records with one array value per record</sci:value>
														<sci:value>&lt;p&gt;Each incoming data record with more than one value for the property or properties specified by &lt;i&gt;PropertyNames&lt;/i&gt; is duplicated for each of the values.  For example, an input data record with three values will generate three output data records.  Each output record will contain one of the values for the &lt;i&gt;PropertyNames&lt;/i&gt; property, and all other properties will be identical.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Large Data Records&lt;/i&gt;: When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each data record is particularly large, setting &lt;i&gt;Large Data Records&lt;/i&gt; to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.&lt;/p&gt;


&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If no property names are given, then all properties with multiple values are unmerged.  In this case, unexpected occurrences of arrays in a property will cause unintentional unmerge operations.  Try to specify a value for &lt;i&gt;PropertyNames&lt;/i&gt; if possible.&lt;/li&gt;
&lt;li&gt;If multiple unmerge properties are specified, the number of data records that result from unmerging a given incoming data record is equal to the number of values of the unmerge property that has the most values.  That is, if two unmerge properties, &quot;A&quot; and &quot;B&quot; are specified where A has 5 values and B has 7 values, then 7 data records will result.  The first 5 records will contain, in order, the 5 values of A.  For the last two records, A will be undefined.  All other properties will be duplicated on each record.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>30</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Unmerge Data</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">17.1.0.119</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.DataCacheIO.1">
												<sci:component name="Cache Writer" version="2">
													<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>Append</sci:member>
														<sci:member>Scope</sci:member>
														<sci:value>Temp</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to write to the cache.</sci:help>
													</sci:arg>
													<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
														<sci:legalval selected="true">Job Only</sci:legalval>
														<sci:legalval>User Only</sci:legalval>
														<sci:legalval>All Users</sci:legalval>
													</sci:arg>
													<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
														<sci:member>JoinUsing</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:member>JoinPropertyType</sci:member>
														<sci:member>JoinUsingListType</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="JoinUsing" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>Additional parameters to control the component behavior.</sci:help>
														<sci:member>Write Globals</sci:member>
														<sci:member>Enable Compression</sci:member>
														<sci:member>Password</sci:member>
													</sci:arg>
													<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
														<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Enable Compression" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
														<sci:help>&lt;p&gt;Specifies if data written to disk should be compressed.&lt;/p&gt;
&lt;b&gt;Note:&lt;b&gt; Starting with 2017 R2, compression uses the LZ4 compression algorithm which is very fast.  Turning off compression will typically result in 6 to 10 times increased disk usage with little or no improvement in performance.  You should test your own data for comparison.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>&lt;p&gt;
An optional password to assign to the cache content. Once set, the password must be used to read data back from the cache. It is useful to control access to a new public data cache.
&lt;/p&gt;
&lt;p&gt;
For an existing cache, set the password to be able to overwrite or append to the content.
&lt;/p&gt;
&lt;p&gt;
Note that the user who writes a password-protected cache does not require a password to access or overwrite the content.
&lt;/p&gt;
</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
													</sci:arg>
													<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
														<sci:legalval selected="true">Writer</sci:legalval>
														<sci:legalval>Reader</sci:legalval>
														<sci:legalval>Writer/Reader</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Aug 28 09:11:28 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Write cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -1545</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DATABASENODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Cache Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a named cache</sci:value>
														<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;li&gt;A password may be assigned to a new cache to control read and write access to the content.&lt;/p&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1563</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>33</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Run R Script" version="2">
													<sci:arg name="RScriptExpression" type="ExpressionType" required="true" visibility="visible" multi="false">
														<sci:help>Expression defining the RScript property containing the script to be sent to R.</sci:help>
														<sci:value>RScript := &apos;
# Script prefix:
$(ScriptPrefix)
# End of prefix

# Script body:
&apos; . @Script . &apos;
# End of body

# Script suffix:
$(ScriptSuffix)
&apos;
</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>EnvOverride</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 30 11:47:31 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Run R Script</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{52541793-A244-485C-9B70-DC1DDD44DD6F}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -1895</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Execute R script, optionally displaying script and stdout</sci:value>
														<sci:value>Executes in R a script defined by RScriptExpression.  This is an internal component used by other R Statistics components.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1362</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>11</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R Script</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>@ShowRScript = True</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Show R script?</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FilterNode</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
																<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Notepad Viewer" version="2">
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of records to view.</sci:help>
															</sci:arg>
															<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Optional name of the document</sci:help>
																<sci:value>R_Script</sci:value>
															</sci:arg>
															<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
																<sci:member>CharacterEncoding</sci:member>
																<sci:member>HierarchyDepth</sci:member>
															</sci:arg>
															<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Indicates the character set that will be used within the file.
 
UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.
 
ANSI specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.
 
&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.
 
For more information about each of these encoding styles, go to http://www.unicode.org/</sci:help>
																<sci:legalval>ANSI</sci:legalval>
																<sci:legalval selected="true">UTF-8</sci:legalval>
																<sci:legalval>Unicode</sci:legalval>
																<sci:legalval>Unicode big endian</sci:legalval>
															</sci:arg>
															<sci:arg name="HierarchyDepth" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>Controls the maximum depth within hierarchical data records to display node and property information.  No hierarchical information will be displayed if depth is set to -1.  If no value is set, the default is 0.</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
																<sci:value>ClientFilePath,ServerFilePath</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>When the network runs, processes once or until done for each process call</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
																<sci:legalval>Cant Replace With Copy</sci:legalval>
																<sci:legalval>Cant Open</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Sep 12 07:46:27 2016</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Notepad Viewer</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ViewerNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{522F4A0B-DD0C-4C26-83DD-29A7B09F4461}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -95</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Displays data records in the Windows Notepad application</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>17.1.0.119</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Viewers\Notepad Viewer</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>$(RScriptExpression)</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
																<sci:value>@EnvOverride := &apos;LD_LIBRARY_PATH=&apos;;
if @R_LD_LIBRARY_PATH is defined then
	@EnvOverride .= @R_LD_LIBRARY_PATH;
end if;
</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>R script expression</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -395</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Executes PilotScript to modify data records.</sci:value>
																<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.1.1.400</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextWriter.1">
														<sci:component name="Text Writer" version="2">
															<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
																<sci:value>$(Rscriptfile)</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>What to do if the given file already exists.</sci:help>
																<sci:legalval selected="true">Overwrite</sci:legalval>
																<sci:legalval>Append</sci:legalval>
																<sci:legalval>Halt</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>List of which properties (separated by commas) will be written
  * means all properties</sci:help>
																<sci:value>*</sci:value>
															</sci:arg>
															<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies whether the name of each property 
is displayed along with its value(s)</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to preceed each record</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to be included after each record</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether to open the file in binary mode for outputting nontext information</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue May 18 12:07:19 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Write RScript</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DocumentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -395</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Writer</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Data records are formatted as text and written to a file. </sci:value>
																<sci:value>Data records are formatted as text written to disk as a &apos;Destination&apos; file.  Separation between data records can be indicated with user specified characters.
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited Text Writer&quot;. To write a file formatted with one record per row with delimiters between the data use the &quot;Delimited Text Writer&quot;&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.0.5.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextWriter.1">
														<sci:component name="Text Writer" version="2">
															<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
																<sci:value>$(JobDir)\Rscript.R</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>What to do if the given file already exists.</sci:help>
																<sci:legalval selected="true">Overwrite</sci:legalval>
																<sci:legalval>Append</sci:legalval>
																<sci:legalval>Halt</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>List of which properties (separated by commas) will be written
  * means all properties</sci:help>
																<sci:value>*</sci:value>
															</sci:arg>
															<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies whether the name of each property 
is displayed along with its value(s)</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to preceed each record</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to be included after each record</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether to open the file in binary mode for outputting nontext information</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue May 18 12:07:19 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Write RScript</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DocumentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -720</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Writer</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Data records are formatted as text and written to a file. </sci:value>
																<sci:value>Data records are formatted as text written to disk as a &apos;Destination&apos; file.  Separation between data records can be indicated with user specified characters.
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited Text Writer&quot;. To write a file formatted with one record per row with delimiters between the data use the &quot;Delimited Text Writer&quot;&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.0.5.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.RunProgram.1">
														<sci:component name="Run R" version="2">
															<sci:arg name="CommandLine" type="TextType" required="true" visibility="visible" multi="false">
																<sci:help>Command line for application or file to execute on the server machine.</sci:help>
																<sci:value>&quot;$(R_exe)&quot; --no-save --no-restore &lt; &quot;$(Rscriptfile)&quot; &gt; &quot;$(Rstdoutfile)&quot;</sci:value>
															</sci:arg>
															<sci:arg name="WaitForExit" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether or not to wait for the program to finish before returning from the process call.  This parameter must be set to True for StdinProperty, StdoutProperty, StderrProperty, or PropertyForExitStatus to function.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyForExitStatus" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name to hold the value of the program exit status code. Denote a global property with a leading @ character.
Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																<sci:value>@RExitStatus</sci:value>
															</sci:arg>
															<sci:arg name="StdinProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that holds the desired value of the program&apos;s standard input (stdin). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
															</sci:arg>
															<sci:arg name="StdoutProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that will hold the program&apos;s standard output (stdout). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
															</sci:arg>
															<sci:arg name="StderrProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that will hold the program&apos;s standard error (stderr). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																<sci:value>@stderr</sci:value>
															</sci:arg>
															<sci:arg name="Environment" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
																<sci:metaproplist>
																	<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAJeAlNwZWNpZmllcyBhZGRpdGlvbmFsIGVudmlyb25tZW50IHZhcmlhYmxlIHNldHRpbmdzIHRoYXQgd2lsbCBiZSB1c2VkIGJ5IHRoZSBzcGF3bmVkIHByb2Nlc3MuICBTcGVjaWZ5IGVhY2ggc2V0dGluZyBvbiBhIGxpbmUgYnkgaXRzZWxmIGFzICJ2YXJpYWJsZT1uYW1lIi4gIFRoZSBzcGF3bmVkIHByb2Nlc3Mgd2lsbCBpbmhlcml0IHRoZSBleGlzdGluZyBlbnZpcm9ubWVudCBvZiB0aGUgc2Npc3ZyIHByb2Nlc3MsIGFuZCBhbnkgc2V0dGluZ3MgaGVyZSB3aWxsIGJlIGFwcGVuZGVkIHRvIHRoZSB2YXJpYWJsZSBsaXN0LiAgVG8gbWFrZSB1c2Ugb2YgYW4gZXhpc3RpbmcgdmFyaWFibGUsIHN1cnJvdW5kIHRoZSB2YXJpYWJsZSBuYW1lIHdpdGggcGVyY2VudCBzaWducyAoZS5nLiAiUEFUSD1jOlxteWRpcjslUEFUSCUiKSAgTm90ZSB0aGF0IHRoaXMgc3ludGF4IHNob3VsZCBiZSB1c2VkIHdpdGggYm90aCBXaW5kb3dzIGFuZCBMaW51eCBzZXJ2ZXJzLiAgRHVlIHRvIE9TIGRlc2lnbnMsIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgY2FzZSBpbnNlbnNpdGl2ZSBvbiBXaW5kb3dzIHNlcnZlcnMgYW5kIGNhc2Ugc2Vuc2l0aXZlIG9uIExpbnV4IHNlcnZlcnMuJFRleHRUeXBlAAgAAAABAQABAAQA/AAAAAAAAAAAADBFbnZpcm9ubWVudAPMU8+7BAA=</sci:propval>
																	<sci:propval name="SCI_InitializeUsingOrigType">TextType</sci:propval>
																	<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
																	<sci:propval name="SCI_EvalOnInitType">TextType</sci:propval>
																</sci:metaproplist>
																<sci:help>Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the scisvr process, and any settings here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;)  Note that this syntax should be used with both Windows and Linux servers.  Due to OS designs, environment variables are case insensitive on Windows servers and case sensitive on Linux servers.</sci:help>
																<sci:value>EnvOverride</sci:value>
															</sci:arg>
															<sci:arg name="UseCommandInterpreter" type="BoolType" required="false" visibility="hidden" multi="false">
																<sci:help>Whether or not to add &quot;cmd.exe /c&quot; (or &quot;/bin/sh -c&quot; on Linux servers) to the command line.  This causes the command line to be interpreted through the operating systems standard command shell allowing the use of redirection specifiers such as &apos;&gt;&apos; and &apos;&lt;&apos; and piping via &apos;|&apos;.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Componet Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/rstats</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Dec 11 15:47:33 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8611ED9C-47D2-4EB1-A98B-CFB894E3840F}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Run R</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Run Program</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -1020</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Runs a Windows command line application on the server machine.</sci:value>
																<sci:value>&lt;p&gt;Define the command line by entering text as you would in a command prompt window. The component includes facilities for looking up a program name in the Windows registry. It can interpret a program name as a ProgID, such as &quot;InternetExplorer.Application&quot;, or as a shell command, such as &quot;IsisServer&quot;, or as a document to load into an associated program, such as &quot;c:\spreadsheet.xls&quot;.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;CommandLine&lt;/i&gt;: The command that the component will run. The correct syntax is the full command line exactly as you would type it in a shell command window. The first space- or quote-delimited item of the command line can be a ProgId, such as &quot;InternetExplorer.Application&quot;. This starts up Internet Explorer (IE) without having to specify the path to IE explicitly. Shell command associations are also supported, so &quot;IsisServer&quot; will start Isis Draw. Finally, there is support for file associations, so the path &quot;D:\docs\notes.doc&quot; will start Microsoft Word and load the specified document.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;WaitForExit&lt;/i&gt;: When TRUE, the data pipeline is blocked until the command has completed.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;PropertyForExitStatus&lt;/i&gt;: Allows you to assign the exit status of the command to a global property or to a data record property. Use either a global or local property reference, such as @status or status.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;UseCommandInterpreter&lt;/i&gt;: When True, parses the command line through the command interpreter on the remote server (with a shell such as csh or bash or the windows interpreter cmd.exe). In particular, this needs to be set to True if the CommandLine utilizes standard output or input (such as cmd.exe /c &amp;quot;c:\Program Files\R\rterm.exe&amp;quot; &amp;quot;0&amp;lt;$(CommandFile)&amp;quot;).&lt;/p&gt;
&lt;p&gt;&lt;i&gt;StdinProperty, StdoutProperty, and StderrProperty&lt;/i&gt;: Allows you to redirect standard communications to global properties or to data record properties. Use either a global or local property reference, such as @stdin or stdin.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Environment&lt;/i&gt;: Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the PipelinePilot process, and any settings defined here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;).  Since this will run on the Windows client, all environment variables are case insensitive.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt; If your command line includes a file path, create a new parameter for the component, of type URL, so the user can enter the path. Then use a token replacement in the CommandLine to pick up the value. For example: Notepad.exe &quot;$(SciTegicRoot)\$(Path)&quot;. &lt;/li&gt;
&lt;li&gt;When the component is separated from any other pipeline, the command line is run just once.&lt;/li&gt; &lt;li&gt;You can add an input or output pass port to the component, to integrate it with a pipeline. If there is an output port, but no input port, the command is run once and a single new record is generated. If there is an input port, then the command is run once for each data record passed in.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.2.0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Display R stdout" version="2">
															<sci:arg name="ControlProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>ControlProperty</sci:help>
																<sci:value>@ShowRStdOutput</sci:value>
															</sci:arg>
															<sci:arg name="Filename" type="StringType" required="true" visibility="visible" multi="false">
																<sci:value>$(Rstdoutfile)</sci:value>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/rstats</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 30 11:47:39 2017</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Display R stdout</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ViewerNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{2A8352DC-F36E-4D10-B8DE-EFF7E019C441}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -1320</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Display R standard output</sci:value>
																<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>18.1.0.1362</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Modified</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="2" to="0" type="true"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="2" to="6" type="true"/>
													<sci:version iVal="1"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>fileexists(&quot;$(Routput1file)&quot;)</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>InputFrame file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -2245</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>12</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedReader.1">
												<sci:component name="Delimited Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file(s) or URL source to read</sci:help>
														<sci:value>$(Routput1file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties that are to be retained in each data record output
by the reader component. If the value is left blank, then all properties
are retained. If the parameter contains the value &quot;-&quot; (minus sign), then
no properties are to be retained.</sci:help>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character which separates the fields in the file.
  To determine automatically use:   FigureOut  
  For &quot;tab&quot; delimited type:              tab
  For &quot;space&quot; delimited type:         space
  For &quot;comma&quot; delimited type:       comma
  For &quot;colon&quot; delimited type:          colon</sci:help>
														<sci:legalval>FigureOut</sci:legalval>
														<sci:legalval selected="true">Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
													</sci:arg>
													<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>When TRUE, property names are taken
from the first line of data in the file.  When
FALSE, properties will be called: Column1,
Column2, etc. by default</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records.  A property 
called &apos;SourceTag&apos; will be created and will hold the value indicated:
   None - no SourceTag property will be created, and any existing will be removed
   Filename - the name of the file read
   FilenameAndExtension - the name of the file read with it&apos;s file extension
   FullFilename - the name of the file read including the directory path
   Number - when multiple files are read in this component, they are numbered 1,2,3...
   Letter - when multiple files are read in this component, they are lettered A, B, C...
   KeepCurrent - keep the current value of SourceTag</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>Specifies the character or string used to represent an 
undefined string in the file being read</sci:help>
													</sci:arg>
													<sci:arg name="AllLines" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>When TRUE, all lines of the text file become
part of a single data record.  The values for
a column from each row become multiple [array]
values for the property (column).</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to trim whitespace from the left and right ends of each value</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:14 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R output</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -2245</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads text files containing one record per line with data separated by delimiters.</sci:value>
														<sci:value>Reads textual data from one or more files that are formated with a single record per line. Individual data items on each line should be separated by a delimiter character (e.g. space, comma, tab). The first line is treated as column names for defining property names. If column names are not declared, they are given standard names of Column1, Column2, etc. 

This component should be used to read comma delimited text files from Excel (.csv).

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>13</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>for #ii in 1 .. numproperties() loop
	/* Convert integers to Long only if they won&apos;t overflow; convert all other numbers to Double. */
	if isinteger(ithproperty(#ii)) and strlength(ithProperty(#ii)) &lt; 10 then
		changepropertytype(ithproperty(#ii), &apos;Long&apos;);
	elsif isnumber(ithproperty(#ii)) then
		changepropertytype(ithproperty(#ii), &apos;Double&apos;);
	end if;
end loop;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Convert numbers</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -2245</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>14</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DataCacheIO.1">
												<sci:component name="Cache Reader" version="2">
													<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The name of the cache to read, which should refer to a cache already written in the protocol containing this component.  Use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to provide an ID for temporary caches, then refer to the temporary ID with $(globalname)</sci:help>
														<sci:member>RangeMinimum</sci:member>
														<sci:member>RangeMaximum</sci:member>
														<sci:member>Scope</sci:member>
														<sci:member>JobId</sci:member>
														<sci:value>Temp</sci:value>
													</sci:arg>
													<sci:arg name="RangeMinimum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The lower limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means start reading at the first cached record.
               </sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="RangeMaximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The upper limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means read to the end of the set of cached records.
               </sci:help>
													</sci:arg>
													<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to the same values as were used in the &lt;/i&gt;Cache Writer&lt;/i&gt;.
			</sci:help>
														<sci:legalval selected="true">Job Only</sci:legalval>
														<sci:legalval>User Only</sci:legalval>
														<sci:legalval>All Users</sci:legalval>
													</sci:arg>
													<sci:arg name="DeleteWhenFinished" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>If True, then delete the cache when finished reading</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Additional parameters to control the component behavior.</sci:help>
														<sci:member>Read Globals</sci:member>
														<sci:member>Password</sci:member>
													</sci:arg>
													<sci:arg name="Read Globals" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;Defines if the component should read globals from the cache.&lt;/p&gt;
&lt;p&gt;Any globals read from the cache will overwrite the existing globals.&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>&lt;p&gt;Enter a password, if one was assigned when the cache was written.
&lt;/p&gt;
&lt;p&gt;Note that a password is not required, if the current user originally wrote the password-protected cache.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="JobId" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>If the scope is set to &lt;I&gt;Job Only&lt;/I&gt;, then this is the job that owns the cache, if it is different from this job. The job must have been run by the same user as this job. If not specified, then the current job is assumed to contain the cache.
               </sci:help>
														<sci:enabledscript>parameter(&apos;Scope&apos;) eq &apos;Job Only&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
													</sci:arg>
													<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
														<sci:legalval>Writer</sci:legalval>
														<sci:legalval selected="true">Reader</sci:legalval>
														<sci:legalval>Writer/Reader</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Aug 28 09:15:02 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Read cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -2620</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DATABASENODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Cache Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data records from a named cache</sci:value>
														<sci:value>&lt;p&gt;A data cache is a place where you can temporarily store data records without losing information.  This component is used to read data from a named cache created by the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; component.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache to read.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;This component is typically used as a mechanism for retrieving temporary data stored within a protocol.&lt;/li&gt;
&lt;li&gt;To access a cache created in a different protocol, use &lt;i&gt;Scope&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To join data from a cache to streaming data records use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To list available caches use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-7077-05B44C3D08E6}&apos;)&quot;&gt;List Caches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To create a temporary cacheID use &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1563</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>34</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Cache Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge All Data" version="2">
													<sci:arg name="Merge Behavior" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>Options controlling the details of how properties are merged together</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Provides fine control over how multiple values are treated when merging data records together.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;This string is used during append to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If defined, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first data record is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When multiple values for a property are retained, the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual data records included in the resulting merged record. This value is simply the total number of input records.&lt;/p&gt;
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
														<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:value>N/A</sci:value>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Mar 11 13:00:58 2011</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge All Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JOINNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C00EFC73-DE7C-4932-AFD6-55D1DFA7792C}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -2620</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Merges properties of all input data records into a single output data record</sci:value>
														<sci:value>&lt;p&gt;Performs faster than &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt; for the special case where all input records are to be merged into one.
&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties are handled.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge data records that share identical values of a specified property, use &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.&lt;/p&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records to be merged</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>A single data record containing all merged properties of the input records</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>8.4.5.20</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>35</sci:value>
													</sci:arg>
													<sci:arg name="Merge All" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Internal parameter indicating that all data records are to be merged into one, irrespective of the value of the &lt;i&gt;MergeUsing&lt;/i&gt; Property.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge All Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>fileexists(&quot;$(Routput2file)&quot;)</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>ResultsFrame (summary) file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>15</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedReader.1">
												<sci:component name="Delimited Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file(s) or URL source to read</sci:help>
														<sci:value>$(Routput2file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties that are to be retained in each data record output
by the reader component. If the value is left blank, then all properties
are retained. If the parameter contains the value &quot;-&quot; (minus sign), then
no properties are to be retained.</sci:help>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character which separates the fields in the file.
  To determine automatically use:   FigureOut  
  For &quot;tab&quot; delimited type:              tab
  For &quot;space&quot; delimited type:         space
  For &quot;comma&quot; delimited type:       comma
  For &quot;colon&quot; delimited type:          colon</sci:help>
														<sci:legalval>FigureOut</sci:legalval>
														<sci:legalval selected="true">Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
													</sci:arg>
													<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>When TRUE, property names are taken
from the first line of data in the file.  When
FALSE, properties will be called: Column1,
Column2, etc. by default</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records.  A property 
called &apos;SourceTag&apos; will be created and will hold the value indicated:
   None - no SourceTag property will be created, and any existing will be removed
   Filename - the name of the file read
   FilenameAndExtension - the name of the file read with it&apos;s file extension
   FullFilename - the name of the file read including the directory path
   Number - when multiple files are read in this component, they are numbered 1,2,3...
   Letter - when multiple files are read in this component, they are lettered A, B, C...
   KeepCurrent - keep the current value of SourceTag</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>Specifies the character or string used to represent an 
undefined string in the file being read</sci:help>
													</sci:arg>
													<sci:arg name="AllLines" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>When TRUE, all lines of the text file become
part of a single data record.  The values for
a column from each row become multiple [array]
values for the property (column).</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to trim whitespace from the left and right ends of each value</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:14 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R output</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads text files containing one record per line with data separated by delimiters.</sci:value>
														<sci:value>Reads textual data from one or more files that are formated with a single record per line. Individual data items on each line should be separated by a delimiter character (e.g. space, comma, tab). The first line is treated as column names for defining property names. If column names are not declared, they are given standard names of Column1, Column2, etc. 

This component should be used to read comma delimited text files from Excel (.csv).

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>16</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>for #ii in 1 .. numproperties() loop
	/* Convert integers to Long only if they won&apos;t overflow; convert all other numbers to Double. */
	if isinteger(ithproperty(#ii)) and strlength(ithProperty(#ii)) &lt; 10 then
		changepropertytype(ithproperty(#ii), &apos;Long&apos;);
	elsif isnumber(ithproperty(#ii)) then
		changepropertytype(ithproperty(#ii), &apos;Double&apos;);
	end if;
end loop;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Convert numbers</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>17</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Data to Fail Port" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:value>/* Send all records to the fail port */
false;</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Adds any properties calculated in the component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When True, controls the exit port used for each data record by evaluating the final expression (or only one) listed in the &quot;Expression&quot; parameter.
  -Pass (green) port: When expression is True
  -Fail (red) port: When expression is False
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:value>ComponentReturnsFail</sci:value>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Sep 01 17:06:37 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Data to Fail Port</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{A718CDEE-EE7D-4B75-9346-C3780D347090}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Directs records to the Fail port for use in subprotocol building.</sci:value>
														<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Fail port of the subprotocol.
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>All data records</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.5.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>18</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Fail Port</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.SortData.1">
												<sci:component name="Sort Data" version="2">
													<sci:arg name="Sort By" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
														<sci:help>Defines properties for sorting. Use this parameter to add, remove and reorder properties to be used for sorting.</sci:help>
														<sci:member>Property 1</sci:member>
														<sci:member>Property 2</sci:member>
														<sci:member>Property 3</sci:member>
													</sci:arg>
													<sci:arg name="Property 1" type="PropertyNameType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The property to sort by.</sci:help>
														<sci:member>Property 1 Sort Order</sci:member>
														<sci:member>Property 1 Sort As</sci:member>
														<sci:value>Conc1</sci:value>
													</sci:arg>
													<sci:arg name="Property 1 Sort Order" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to sort in ascending or descending order.</sci:help>
														<sci:legalval selected="true">Ascending</sci:legalval>
														<sci:legalval>Descending</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 1 Sort As" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
														<sci:legalval>Numbers</sci:legalval>
														<sci:legalval>Text</sci:legalval>
														<sci:legalval>Case Sensitive Text</sci:legalval>
														<sci:legalval selected="true">Text Containing Numbers</sci:legalval>
														<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
														<sci:legalval>Dates</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 2" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>The property to sort by.</sci:help>
														<sci:member>Property 2 Sort Order</sci:member>
														<sci:member>Property 2 Sort As</sci:member>
													</sci:arg>
													<sci:arg name="Property 2 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort in ascending or descending order.</sci:help>
														<sci:legalval selected="true">Ascending</sci:legalval>
														<sci:legalval>Descending</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 2 Sort As" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">Numbers</sci:legalval>
														<sci:legalval>Text</sci:legalval>
														<sci:legalval>Case Sensitive Text</sci:legalval>
														<sci:legalval>Text Containing Numbers</sci:legalval>
														<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
														<sci:legalval>Dates</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 3" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>The property to sort by.</sci:help>
														<sci:member>Property 3 Sort Order</sci:member>
														<sci:member>Property 3 Sort As</sci:member>
													</sci:arg>
													<sci:arg name="Property 3 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort in ascending or descending order.</sci:help>
														<sci:legalval selected="true">Ascending</sci:legalval>
														<sci:legalval>Descending</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 3 Sort As" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">Numbers</sci:legalval>
														<sci:legalval>Text</sci:legalval>
														<sci:legalval>Case Sensitive Text</sci:legalval>
														<sci:legalval>Text Containing Numbers</sci:legalval>
														<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
														<sci:legalval>Dates</sci:legalval>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>You can provide this to only return this number of records. This is useful when you only want to see the &quot;best&quot; record or records.</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Mar 27 13:39:02 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>/* Start from &apos;Property 1&apos; since it must be defined.
   Keep this following line for the client auto-rename to use.
	 Parameter(&apos;Property 1&apos;), 
     Parameter(&apos;Property 2&apos;), 
	 Parameter(&apos;Property 3&apos;)
	 Parameter(&apos;Property 4&apos;)
	 Parameter(&apos;Property 5&apos;)
 */
if (trim(strlength(parameter(&apos;Property 1&apos;, 2))) &gt; 0) then
	#name := &quot;Sort on &quot; . trim(parameter(&apos;Property 1&apos;, 2));
	
	/* Get other sort properties that have values */
	#paramKey := &apos;Property &apos;;
	#count := 2;
	#paramName := #paramKey . #count;

	while (#count &lt;= 5 and parameter(#paramName, 2) is defined)
	loop
		if (strlength(parameter(#paramName, 2)) &gt; 0) then		
			#name := #name . &apos;, &apos;;
			#name := #name . parameter(#paramName, 2);
		end if;
	
		#count++;
		#paramName := #paramKey . #count;
	end loop;
	#name;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Sort Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{BC934106-6EA5-44e1-93C3-8787DECA9D15}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Sorts data records according to one or more properties</sci:value>
														<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sort By&lt;/i&gt; parameter to add more properties for sorting.&lt;/p&gt;

&lt;p&gt;When multiple properties are used by sorting, the property values of &lt;i&gt;Property 1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;Property 2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;Property 3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The order of sorting can be changed using &lt;i&gt;Sort Order&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;li&gt;Records containing Null or undefined &lt;i&gt;Sort By&lt;/i&gt; properties will be output to the Fail Port.
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records in sorted order</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records that do not contain the sort field(s)</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1396</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>32</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Sort Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge All Data" version="2">
													<sci:arg name="Merge Behavior" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>Options controlling the details of how properties are merged together</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Provides fine control over how multiple values are treated when merging data records together.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;This string is used during append to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If defined, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first data record is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When multiple values for a property are retained, the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual data records included in the resulting merged record. This value is simply the total number of input records.&lt;/p&gt;
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
														<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:value>N/A</sci:value>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Mar 11 13:00:58 2011</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge All Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JOINNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C00EFC73-DE7C-4932-AFD6-55D1DFA7792C}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Merges properties of all input data records into a single output data record</sci:value>
														<sci:value>&lt;p&gt;Performs faster than &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt; for the special case where all input records are to be merged into one.
&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties are handled.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge data records that share identical values of a specified property, use &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.&lt;/p&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records to be merged</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>A single data record containing all merged properties of the input records</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>8.4.5.20</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>31</sci:value>
													</sci:arg>
													<sci:arg name="Merge All" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Internal parameter indicating that all data records are to be merged into one, irrespective of the value of the &lt;i&gt;MergeUsing&lt;/i&gt; Property.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge All Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>fileexists(&quot;$(RDir)/$(RplotPrefix)001.png&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Plot file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>19</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>#fileindex := 1;
#nextfile := &quot;$(RDir)/$(RplotPrefix)001.png&quot;;
#nextplot := &quot;Plot1&quot;;

while fileexists(#nextfile) loop
	append(Filename, #nextfile);
	append(Plotname, #nextplot);
	++#fileindex;
	#nextfile := format(&apos;$(RDir)/$(RplotPrefix)%03d.png&apos;, #fileindex);
	#nextplot := &quot;Plot&quot; . #fileindex;
end loop;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Get all plot file names</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>20</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.SeparateValues.1">
												<sci:component name="Unmerge Data" version="2">
													<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of multi-valued property to separate and output as separate records. If multiple properties are given, they each must have the same number of values. If property names are not given, all properties with multiple values are unmerged.
</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jan 05 15:19:59 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Unmerge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Unmerge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>GeneratorNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Separates data records containing multiple values into multiple duplicate records each containing only one of the values.</sci:value>
														<sci:value>Each incoming data record with more than one value in the specified properties is duplicated for each of the multiple values. For example, a data object with three values generates three data objects, each with only one of the three values (but otherwise identical). 

If property names are not given, all properties with multiple values are unmerged. 

If multiple properties are unmerged, they must contain the same number of values.
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with multiple values for at least one property</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.3</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>21</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Unmerge Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Subprotocol" version="2">
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>Filename,Plotname</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jan 05 15:20:07 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read plotfile</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
														<sci:value>Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 

To define input and output ports, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm &apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.

Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm &apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.3</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Make Shortcut by Default</sci:legalval>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>22</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
																<sci:value>@Filename := Filename;
@Plotname := Plotname;</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
																<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Jan 05 15:19:58 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Put Filename into global</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Executes PilotScript to modify data records.</sci:value>
																<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.0.3</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextReader.1">
														<sci:component name="Text Reader" version="2">
															<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The file or URL source to read</sci:help>
																<sci:value>$(Filename)</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
																<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
															</sci:arg>
															<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Specifies the name of the property list to hold the block of text</sci:help>
																<sci:value>$(Plotname)</sci:value>
															</sci:arg>
															<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies which delimiting mechanism to use:

 - EndOfFile: All text is one record.
 - EndOfParagraph: Each paragraph becomes a separate record.
 - EndOfLine: Each line becomes a separate record.
 - DelimitText: Uses the parameters BeginningText and/or EndingText.

</sci:help>
																<sci:legalval selected="true">EndOfFile</sci:legalval>
																<sci:legalval>EndOfParagraph</sci:legalval>
																<sci:legalval>EndOfLine</sci:legalval>
																<sci:legalval>DelimitText</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
															</sci:arg>
															<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
																<sci:legalval selected="true">None</sci:legalval>
																<sci:legalval>Filename</sci:legalval>
																<sci:legalval>FilenameAndExtension</sci:legalval>
																<sci:legalval>FullFilename</sci:legalval>
																<sci:legalval>Number</sci:legalval>
																<sci:legalval>Letter</sci:legalval>
																<sci:legalval>KeepCurrent</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="hidden" multi="false">
																<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Nov 28 12:28:00 2005</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Read binary plot file</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -395</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DOCUMENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Reader</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Reads raw textual data.</sci:value>
																<sci:value>&lt;p&gt;Reads text files and creates a data record for each block of text. You can specify the delimiters 
  for the blocks. Each data record is stored in a single property.
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited 
  Text Reader&quot;. If the text file is formatted with one record per line, with the 
  data records separated by delimiters (such as Excel generated .csv file), use 
  the Delimited Text Reader instead. 

If delimit text is given, the text used to delimit must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.0.1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:value>numvalues($(Plotname)) &gt; 700</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Nov 28 12:27:58 2005</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Make sure plot is not empty</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FILTERNODE</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -395</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
																<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.0.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="1" to="2" type="true"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Tag Data" version="2">
													<sci:arg name="TagName" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of a new property to create to serve as a tag</sci:help>
														<sci:value>Tagged</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:value>$(TagName) := true;</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)
</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jan 05 15:19:59 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Tag Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{BCF71EB2-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Tags each record with a given property name for later identification.</sci:value>
														<sci:value>A new property is created for each incoming data record, defined with the value &quot;True&quot;. Records tagged in this way can easily be identified in future components by evaluating whether the new property is defined. This is useful for marking a data stream prior to combining it with another stream for learning, substructure search, and other operations. An alternative method for tagging records is available in most file readers which can tag the records with a SourceTag. </sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with the additional tag property</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.3</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>23</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Add Tag Property</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge Data" version="2">
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:value>Tagged</sci:value>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri May 30 08:21:34 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JOINNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Merges properties of all data records that share the same key property value into a single data record</sci:value>
														<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records that contain the properties being used for merging</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records that do not contain the properties being used for merging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.1.0.5</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>24</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>remove(&apos;Tagged&apos;);</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>remove tag</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1818 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>25</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="Data to Fail Port" version="2">
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>PassDataToPort</sci:value>
													</sci:arg>
													<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>the port to pass data to</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Data to Fail Port</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{A718CDEE-EE7D-4B75-9346-C3780D347090}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2106 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Directs records to the Fail port for use in subprotocol building.</sci:value>
														<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Fail port of the subprotocol.
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>All data records</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.4.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>26</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Fail Port</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@RExitStatus != 0</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Any errors?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -3695</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>27</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Display R stdout and halt protocol" version="2">
													<sci:arg name="ControlProperty" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>ControlProperty</sci:help>
														<sci:value>@ShowRStdOutput</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Oct 22 12:08:22 2014</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Display R stdout and halt protocol</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ViewerNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9E6F3C8B-E5AB-4d51-B5E5-C0F20559F6FF}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -3695</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Display R standard output</sci:value>
														<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>9.5.0.608</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>28</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout and halt protocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:connectid from="0" to="29" type="true"/>
											<sci:connectid from="29" to="2" type="true"/>
											<sci:connectid from="3" to="4" type="true"/>
											<sci:connectid from="4" to="5" type="true"/>
											<sci:connectid from="5" to="6" type="true"/>
											<sci:connectid from="6" to="7" type="true"/>
											<sci:connectid from="7" to="8" type="true"/>
											<sci:connectid from="30" to="10" type="true"/>
											<sci:connectid from="30" to="33" type="true"/>
											<sci:connectid from="12" to="13" type="true"/>
											<sci:connectid from="13" to="14" type="true"/>
											<sci:connectid from="34" to="35" type="true"/>
											<sci:connectid from="15" to="16" type="true"/>
											<sci:connectid from="16" to="17" type="true"/>
											<sci:connectid from="17" to="18" type="true"/>
											<sci:connectid from="18" to="32" type="true"/>
											<sci:connectid from="32" to="31" type="true"/>
											<sci:connectid from="31" to="35" type="true"/>
											<sci:connectid from="19" to="20" type="true"/>
											<sci:connectid from="20" to="21" type="true"/>
											<sci:connectid from="21" to="22" type="true"/>
											<sci:connectid from="22" to="23" type="true"/>
											<sci:connectid from="23" to="24" type="true"/>
											<sci:connectid from="24" to="25" type="true"/>
											<sci:connectid from="25" to="26" type="true"/>
											<sci:connectid from="27" to="28" type="true"/>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="No-op" version="2">
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>CustomErrorText</sci:help>
											</sci:arg>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>No-op</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -455</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
												<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.0.1.1</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="R Custom Script" version="2">
											<sci:arg name="Script" type="TextType" required="true" visibility="visible" multi="false">
												<sci:help>Text of the R script you wish to run.  Enter the script just as if you were typing it in R.</sci:help>
												<sci:value>library(e1071)
set.seed(1)

Conc1 = AllData$Conc1
Response = AllData$MEDIA_noise

df = as.data.frame(cbind(Conc1,Response))


model = svm(formula= Response~., data=df,
			type=&quot;eps-regression&quot;,
			kernel = &quot;$(kernel)&quot;,
			scale=TRUE,
			cross=2)

#tuneResult &lt;- tune(svm, Response~.,  data = df,
#                   ranges = list(epsilon = seq(0.1,1,0.1), gamma =2^(-1:1) , cost = 2^(0:3)),
#				   tunecontrol = tune.control(sampling = &quot;cross&quot;,cross=2)
#)

#tunedModel &lt;- tuneResult$best.model

Fit_Concentration = seq(from=min(AllData$Conc1),to=max(AllData$Conc1),length.out=100)
Conc1 = Fit_Concentration
Fit_Response_Media = predict(model,type=&quot;response&quot;,newdata = Conc1)

Results = cbind(Fit_Concentration,Fit_Response_Media)
</sci:value>
											</sci:arg>
											<sci:arg name="InputFrame" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Name to use in R script for data.frame containing input data.  Data in this frame will be sent out the pass port on completion of the script.</sci:help>
												<sci:value>AllData</sci:value>
											</sci:arg>
											<sci:arg name="ResultsFrame" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Name to use in R script for data.frame containing calculation results, which will be sent out the fail port.</sci:help>
												<sci:value>Results</sci:value>
											</sci:arg>
											<sci:arg name="kernel" type="StringType" required="false" visibility="visible" multi="false">
												<sci:legalval>polynomial</sci:legalval>
												<sci:legalval selected="true">radial</sci:legalval>
												<sci:legalval>sigmoid</sci:legalval>
											</sci:arg>
											<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
												<sci:help>Contains less commonly used parameters</sci:help>
												<sci:member>PlotWidth</sci:member>
												<sci:member>PlotHeight</sci:member>
												<sci:member>ShowRInputOutput</sci:member>
												<sci:member>R Functions Source</sci:member>
											</sci:arg>
											<sci:arg name="R Functions Source" type="URLType" required="false" visibility="visible" multi="false">
												<sci:help>Optional name of a file containing an R script or custom R functions you wish to use in the Script.  This file will be sourced in R before the Script is executed.
</sci:help>
												<sci:member>Embed External Scripts</sci:member>
											</sci:arg>
											<sci:arg name="Embed External Scripts" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>If True, indicates that the scripts specified by &lt;i&gt;R Functions Source&lt;/i&gt; are to be embedded in the R script created by this component. This can be useful for debugging purposes. If False, the scripts are concatenated into a separate temporary file that is executed using the R source() function.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="PlotWidth" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>Width in pixels of any plots created by the script</sci:help>
												<sci:value>600</sci:value>
											</sci:arg>
											<sci:arg name="PlotHeight" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>Height in pixels of any plots created by the script</sci:help>
												<sci:value>600</sci:value>
											</sci:arg>
											<sci:arg name="ShowRInputOutput" type="StringType" required="false" visibility="visible" multi="true">
												<sci:help>Specify whether or not to show the R script and the R stdout in Notepad viewers</sci:help>
												<sci:legalval>Script</sci:legalval>
												<sci:legalval>StdOutput</sci:legalval>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:value>RExitStatus,PlotName,RFunctionsFile,ShowRScript,ShowRStdOutput,RDir,ScriptPrefix,ScriptSuffix,RParScript,RPlotWidth,RPlotHeight,RplotPrefix,stderr,ExternalScript</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:value>$(R_Run_Remote)</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>100000000</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>$(R_Server)</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Jul 20 12:16:31 2017</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>R Custom Script</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{140C906F-960F-4DCD-84FD-D7DBF7277F0D}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>390 -455</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Executes R script</sci:value>
												<sci:value>Use this component to write your own custom R script for operating on incoming data records. All records coming into the component are put into an R data frame whose name is given by &lt;i&gt;InputFrame&lt;/i&gt;.  After your script has executed, the data in this frame are sent out the Pass port, including any changes made to the frame within the R script.
&lt;p&gt;
Any plots created in your script are sent out the Fail port and can be viewed with the &lt;a href=&quot;javascript:DoLink(&apos;{45979297-7C23-4374-BE33-1424E90A09A6}&apos;)&quot;&gt;R Plot Viewer&lt;/a&gt;.
&lt;p&gt;
If your R script creates a data frame with the name given by &lt;i&gt;ResultsFrame&lt;/i&gt;, the data in this frame are also  sent out the Fail port.  (You may wish to use this frame for summary statistics, for example.)
&lt;p&gt;
&lt;b&gt;Hints on manipulating R data frames&lt;/b&gt;
&lt;p&gt;
Assume that the &lt;i&gt;InputFrame&lt;/i&gt; name is &quot;AllData&quot; and that there are three properties -- ALogP, prop1, and Property 2 -- defined on each Pipeline Pilot data record (in that order).  Within the R script, you can refer to the ALogP values in any of the following ways:
&lt;p&gt;
&lt;code&gt;
ALogP&lt;br&gt;
AllData$ALogP&lt;br&gt;
AllData[&quot;ALogP&quot;]
AllData[1]&lt;br&gt;
AllData[,1]&lt;br&gt;
AllData[[1]]&lt;br&gt;
&lt;/code&gt;
&lt;p&gt;
Note that the following assignment in R does not change the value of ALogP within the AllData frame:
&lt;p&gt;
&lt;code&gt;ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
while the following assignment does change the value within the frame:
&lt;p&gt;
&lt;code&gt;AllData$ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
(The reason for this behavior is that after the data are read into R but before your script is executed, the &lt;code&gt;attach&lt;/code&gt; function is called on the data frame.  This allows you to refer to columns in the frame by column name alone, but any changes you make to the column name variables are made outside the frame.)
&lt;p&gt;
Properties with embedded spaces or special R characters such as &quot;#&quot; must always be quoted if referred to by name:
&lt;p&gt;
&lt;code&gt;AllData$&quot;Property 2&quot;&lt;/code&gt;
&lt;p&gt;
To add a new column to the frame, use the cbind function:
&lt;p&gt;
&lt;code&gt;AllData &amp;lt;- cbind(AllData, LogPCalc=ALogP+0.5)&lt;/code&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;Molecular structures are ignored by this component and will not be passed through. 
&lt;li&gt;An array property with N elements on an input data record will be converted to N scalar properties in order that the records conform to the R data frame structure.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more information on writing R scripts, see &lt;a href=&quot;javascript:DoLink(&apos;http://cran.r-project.org/doc/manuals/R-intro.html&apos;)&quot;&gt;An Introduction to R&lt;/a&gt;.
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>18.1.0.1523</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
												<sci:legalval>Cant Replace With Copy</sci:legalval>
												<sci:legalval>Cant Open</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Manipulators\R Custom Script</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Check R exe" version="2">
													<sci:arg name="Error Behavior" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies action to take in case of a problem with the Pipeline Pilot R configuration. Options are:
&lt;ul&gt;
&lt;li&gt;Default: For fatal errors such as a missing R executable, show a message in a dialog and halt the protocol if running from Pipeline Pilot; raise an exception if running from another client such as Web Port. For a non-fatal error such as an unsupported R version, show a message but do not halt the protocol if running from Pipeline Pilot; do nothing if running from another client.
&lt;li&gt;Message out Fail Port: For any type of error, send a message out the fail port in a property named &lt;b&gt;ErrorText&lt;/b&gt;. Do not raise an exception or display a message.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If the global property @SuppressRVersionWarning is set to True, no message is shown in the &quot;Default&quot; case for unsupported R versions.
&lt;/ul&gt;</sci:help>
														<sci:legalval selected="true">Default</sci:legalval>
														<sci:legalval>Message out Fail Port</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>ver,ErrorText,EnvOverride</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
														<sci:legalval>Cant Replace With Copy</sci:legalval>
														<sci:legalval>Cant Open</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Jun 02 08:18:08 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Check R exe</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{320AE9ED-071D-4ad7-AE87-2D692FAED359}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Check R executable</sci:value>
														<sci:value>Checks that the global variable &apos;R_exe&apos;, which points to the location of the R executable, is defined, and that the R executable file is in the location specified by R_exe. </sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1468</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Check R exe</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@ShowRScript := false;
@ShowRStdOutput := false;
for #i in 1 .. numvalues(@ShowRInputOutput) loop
   #s := @ShowRInputOutput[#i];
   if (#s eq &quot;Script&quot;) then 
      @ShowRScript := true;
   end if;
   if (#s eq &quot;StdOutput&quot;) then 
      @ShowRStdOutput := true;
   end if;
end loop;

@RDir := strreplace(@RunDirectory, &apos;\&apos;, &apos;/&apos;);
@RDir .= &apos;/temp&apos;;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Set R I/O to display and ROutput</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>29</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.ClientTempFiles.1">
												<sci:component name="Create Tempfiles for R" version="2">
													<sci:arg name="Server Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma separated list of global parameter names (such as &quot;tmp1,tmp2&quot;) to assign with temporary filenames obtained from the server</sci:help>
														<sci:value>Rmodelfile, Rscriptfile, Rstdoutfile, Rinput1file, Rinput2file, Rinput3file, Rinput4file, Rinput5file, Routput1file,Routput2file, Routput3file, Routput4file, Routput5file</sci:value>
													</sci:arg>
													<sci:arg name="Client Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma separated list of global parameter names (such as &quot;ctmp1,ctmp2&quot;) to assign with temporary filenames obtained from the client</sci:help>
													</sci:arg>
													<sci:arg name="Force Forward Slashes" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to force all server tempfiles to use forward slashes; this is useful if the temp file name is used to communicate with a external program that cannot handle backslashes on Windows</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>mhassan</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jul 13 10:17:05 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Create Tempfiles for R</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{2BFBE007-9937-47EB-A9B4-B76491D99C59}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Client Temp Filenames</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Obtains temporary filenames from the client or the server that are added to the global property list.</sci:value>
														<sci:value>&lt;p&gt;These names can be used later within the protocol as global variables within component parameters or as PilotScript expressions. For example, if your component executes on the client, but requires specific files to be present, you can create a temporary file named &quot;clientTmpFile1&quot; and later refer to it in a parameter or PilotScript entry via &quot;$(clientTmpFile1)&quot;.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Server Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the server.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Client Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the client.&lt;/p&gt;

&lt;p&gt;All files created in this way are deleted when the protocol is closed or, in the case of client tempfiles, when the client starts up again. (They are not permanent files.)&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.100</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Create Tempfiles for R</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>trim(@&apos;R Functions Source&apos;) ne &apos;&apos;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Any R script files?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:member>Keep Properties</sci:member>
														<sci:value>$(R Functions Source)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval>None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval selected="true">FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
													</sci:arg>
													<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies which delimiting mechanism to use:

 - EndOfFile: All text is one record.
 - EndOfParagraph: Each paragraph becomes a separate record.
 - EndOfLine: Each line becomes a separate record.
 - DelimitText: Uses the parameters BeginningText and/or EndingText.

</sci:help>
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
														<sci:legalval selected="true">EndOfFile</sci:legalval>
														<sci:legalval>EndOfParagraph</sci:legalval>
														<sci:legalval>EndOfLine</sci:legalval>
														<sci:legalval>DelimitText</sci:legalval>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:member>Binary</sci:member>
														<sci:member>KeepEndOfLine</sci:member>
														<sci:member>PutTextInProperty</sci:member>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies the name of the property list to hold the block of text</sci:help>
														<sci:value>Text</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Jan 21 11:19:34 2005</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R script files</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads raw textual data.</sci:value>
														<sci:value>&lt;p&gt;Reads text files and creates a data record for each block of text. You can specify the delimiters 
  for the blocks. Each data record is stored in a single property.
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited 
  Text Reader&quot;. If the text file is formatted with one record per line, with the 
  data records separated by delimiters (such as Excel generated .csv file), use 
  the Delimited Text Reader instead. 

If delimit text is given, the text used to delimit must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>5.0.0.1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Tag Data" version="2">
													<sci:arg name="TagName" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of a new property to create to serve as a tag</sci:help>
														<sci:value>Tagged</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:value>$(TagName) := true;</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)
</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Tag Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{BCF71EB2-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Tags each record with a given property name for later identification.</sci:value>
														<sci:value>A new property is created for each incoming data record, defined with the value &quot;True&quot;. Records tagged in this way can easily be identified in future components by evaluating whether the new property is defined. This is useful for marking a data stream prior to combining it with another stream for learning, substructure search, and other operations. An alternative method for tagging records is available in most file readers which can tag the records with a SourceTag. </sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with the additional tag property</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>5</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Add Tag Property</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge Data" version="2">
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of the key property (or a comma-separated list of properties) that contain the value identifying those records to merge. If multiple &quot;MergeUsing&quot; names are given, all must be identical for a merge event to occur (unless MergeUsingList type is set to &quot;UseFirstDefinedValue&quot;).
</sci:help>
														<sci:member>IgnoreCase</sci:member>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:value>Tagged</sci:value>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &quot;MergeUsing&quot; propety values
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>How &quot;MergeUsing&quot; properties are interpreted when  more than one property is listed:
 
    - UseFirstDefinedValue: Merges using only the first property in the list that has a defined value for a record.
 
  - UseAllValues: Merges using the concatentation of the values of all properties listed.</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Kinds of values found in the &quot;MergeUsing&quot; property:&lt;DL&gt;
&lt;DT&gt;&lt;b&gt;IsNumeric:&lt;/b&gt; &lt;DD&gt;All numbers are converted to doubles for comparison (so 1 = 1.0).
&lt;p&gt;
&lt;DT&gt;&lt;b&gt;IsText:&lt;/b&gt; &lt;DD&gt;All comparisons are made as string values.
&lt;p&gt; 
&lt;DT&gt;&lt;b&gt;IsDate:&lt;/b&gt; &lt;DD&gt;The key is considered a date
&lt;p&gt;
&lt;DT&gt;&lt;b&gt;IsFingerprint:&lt;/b&gt; &lt;DD&gt;The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.
&lt;/DL&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What happens to the values of properties represented in more than one of the records being combined. Does not apply to the &quot;MergeUsing&quot; property.

 
   KeepAll - keeps all property values by appending additional values in an array.
 
  KeepFirst - keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the &apos;MergeUsing&apos; property are discarded.
 
</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>When merging with KeepAll behavior, provides fine control over how multiple values are treated.
 
  - OverwriteOrCreate: copy all properties of each merging record sequentially, overwriting any values that may already exist (instead of generating an array). 
 
  - OverwriteExisting: Only copies properties that already exist on the first of the records merging together, overwriting those original values (instead of creating an array).
 
  - CreateIfNew: Leaves any existing properties alone, and writes only new properties.
 
  - AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.
 
  - AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>This string is used during append in &quot;KeepAll&quot; to pad out empty values. It keeps the generated arrays of values in sync for multiple samples. The value &quot;None&quot; causes no padding to occur.
</sci:help>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>If defined, and the MergeBehavior is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.</sci:help>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jun 01 10:08:02 2005</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JoinNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Combines data records having the same value for a given property.
</sci:value>
														<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the 
  same value as each other for the &lt;em&gt;MergeUsing&lt;/em&gt; parameter. If multiple 
  MergeUsing names are given, all must be identical for a merge event 
  to occur. &lt;/p&gt;
&lt;p&gt;When &lt;em&gt;MergeBehavior&lt;/em&gt; is set to &amp;quot;KeepFirst&amp;quot;, the properties 
  of merged data records are appended in the form of an array, unless the &lt;em&gt;PrefixUsingProperty 
  &lt;/em&gt;parameter is set to prepend each property name on each data item. This 
  is often useful when merging multiple data files with a &lt;em&gt;SourceTag&lt;/em&gt; parameter 
  (available in many readers). &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See Also: &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt;: Merges records based on identical molecular structures.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records that contain the properties being used for merging</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records that do not contain the properties being used for merging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>5.0.0.103</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>6</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>newtext := &apos;&apos;;

for #i in 1 .. numvalues(Text) loop
	newtext .= &apos;####  &apos; . SourceTag[#i] . &quot;  ###\n&quot;;
	newtext .= Text[#i] . &quot;\n&quot;;
end loop;

keep(&apos;newtext&apos;);

if @&apos;Embed External Scripts&apos; then
	@ExternalScript := newtext;
end if;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Condense scripts into one</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Executes PilotScript to modify data records.</sci:value>
														<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>7</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.TextWriter.1">
												<sci:component name="Text Writer" version="2">
													<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The filename for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>IfFileExists</sci:member>
														<sci:member>CharacterEncoding</sci:member>
														<sci:value>$(Rinput2file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What to do if the given destination file already exists</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org/&apos;)&quot;&gt;http://www.unicode.org/&lt;/a&gt;&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">ANSI</sci:legalval>
														<sci:legalval>UTF-8</sci:legalval>
														<sci:legalval>Unicode</sci:legalval>
														<sci:legalval>Unicode big endian</sci:legalval>
													</sci:arg>
													<sci:arg name="Delimiter Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Text that should preceed each record</sci:help>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Any text to be included after each record</sci:help>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Binary</sci:member>
														<sci:member>PropertyNames</sci:member>
														<sci:member>IncludePropertyNames</sci:member>
													</sci:arg>
													<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>List of properties to write (separated by commas). &quot;*&quot; indicates to write all properties.</sci:help>
														<sci:value>*</sci:value>
													</sci:arg>
													<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Display the name of each property along with its values</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Open the file in binary mode to output non-textual information</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Sep 07 14:08:04 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Text Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -470</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Formats and writes textual data records to a file.</sci:value>
														<sci:value>&lt;p&gt;Data records are formatted as text written to disk as a &lt;i&gt;Destination&lt;/i&gt; 
  file. You can specify how to separate the data records. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited 
  Text Writer&quot;. To write a file formatted with one record per row with delimiters 
  between the data use the &quot;Delimited Text Writer&quot;.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.5.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>8</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>srand();
@RplotPrefix := &apos;Rplot&apos; . floor(rand() * 10000000);

@ScriptPrefix := &apos;
SpecialDoubleValueStrings &lt;- c(&quot;NA&quot;, &quot;NaN&quot;, &quot;Inf&quot;, &quot;-Inf&quot;)
FactorOrNumber &lt;- function(vec)
{
	# Heuristic to see if vec is numeric but with some non-numeric values
	# Rule:
	# First trim any pre-existing NAs
	# Then if there is only 1 level in the non-numeric elements, assume that string
	# is the NA marker and the vector is actually numeric; Alternatively, 
	# if the only non-numeric values lie in the set {&quot;NA&quot;, &quot;NaN&quot;, &quot;-Inf&quot;, &quot;Inf&quot;}, treat vector as numeric;
	# otherwise, leave it as a factor.
	if (is.factor(vec))
	{
		vecNoNA &lt;- na.omit(vec)
		vecnum &lt;- suppressWarnings(as.numeric(levels(vecNoNA))[vecNoNA])
		vecNumeric &lt;- vecNoNA[!is.na(vecnum), drop=TRUE]		
		vecNonNumeric &lt;- vecNoNA[is.na(vecnum), drop=TRUE]

		if ((length(levels(vecNonNumeric)) == 1 &amp;&amp; length(vecNumeric) &gt; 1) || 
			 !any(is.na(match(vecNonNumeric, SpecialDoubleValueStrings))))
		{
			vec &lt;- suppressWarnings(as.numeric(levels(vec))[vec])
		}
	}
	
	vec
}
# Convert factors that should be numbers back to numbers.
cleanRdata &lt;- function(x)
{
	if (!is.null(x))
	{
		for (ii in 1:ncol(x))
		{	
			if (is.factor(x[[ii]]))
				x[[ii]] &lt;- FactorOrNumber(x[[ii]])
		}
	}
	
	x
}

$(InputFrame) &lt;- NULL
try($(InputFrame) &lt;- read.delim(&quot;$(Rinput1file)&quot;, comment.char=&quot;&quot;, check.names=FALSE))

# Use the following statement to turn factors that &quot;should&quot; be numeric
# back to numeric variables:
# $(InputFrame) &lt;- cleanRdata($(InputFrame))

attach($(InputFrame))
png(filename = &quot;$(RDir)/&apos; . @RplotPrefix . &apos;%03d.png&quot;, width = $(RPlotWidth), height = $(RPlotHeight))

$(RParScript)
&apos;;

@ScriptSuffix := &apos;
dev.off()

try(write.table(data.frame($(InputFrame), check.names=FALSE), file=&quot;$(Routput1file)&quot;, sep=&quot;\t&quot;, col.names=TRUE, row.names=FALSE, quote=FALSE))
if (sum(ls() == &quot;$(ResultsFrame)&quot;) == 1)
{
    write.table(data.frame($(ResultsFrame), check.names=FALSE), file=&quot;$(Routput2file)&quot;, sep=&quot;\t&quot;, col.names=TRUE, row.names=FALSE, quote=FALSE)
}
&apos;;

if trim(@&apos;R Functions Source&apos;) ne &apos;&apos; then
	if @&apos;Embed External Scripts&apos; then
		@ScriptPrefix .= &apos;

$(ExternalScript)
&apos;;
	else
		@ScriptPrefix .= &apos;

source(&quot;$(Rinput2file)&quot;)
&apos;;
	end if;
end if;

</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Define script prefix and suffix</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>9</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedWriter.1">
												<sci:component name="Delimited Text Writer" version="2">
													<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz to the filename. </sci:help>
														<sci:value>$(Rinput1file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What to do if the given file already exists.</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.)</sci:help>
														<sci:legalval selected="true">Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
													</sci:arg>
													<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The delimiter to use between multiple value on a single property.  If None, 
then the multiple values are separated into their own columns.</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>What text to output when data for a given column is not present
  (leave empty enter text of choice)</sci:help>
													</sci:arg>
													<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to output column names</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to output a row which includes the column types</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>SpotfireFormat</sci:legalval>
														<sci:legalval>NDIFormat</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Includes the number of the record as the first
field for each record.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:18 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Write Input Data for R</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -1170</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a text file, separating the individual fields with a specified delimiter character. </sci:value>
														<sci:value>Writes data records to a text file, separating the records with a new line and the individual fields within a record with the character specified in the &apos;Delimiter&apos; character.  The property names for the fields will be stored as the first line of the file.

&apos;MultipleValueDelimiter&apos; controls properties with more than one value. If None, then they are written as multiple fields (e.g., prop[1], prop[2] ...). Else, they are written into a single value separated by the chosen delimiter.

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.SeparateValues.1">
												<sci:component name="Unmerge Data" version="2">
													<sci:arg name="PropertyNames" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The names of the one or more properties to separate and return as separate data records.  If no property names are given, then all properties with
multiple values will be unmerged. If multiple properties are unmerged, the number of unmerged records is the number of values of a property with the maximum number of values.</sci:help>
													</sci:arg>
													<sci:arg name="Additional Options" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>Large Data Records</sci:member>
														<sci:member>Unmerge ByteArrayValues</sci:member>
													</sci:arg>
													<sci:arg name="Large Data Records" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each of your records are particularly large, setting this parameter to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Unmerge ByteArrayValues" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>ByteArrayValues are property representations of binary data.  Although they are technically arrays of bytes and could be unmerged, in most cases these properties should be treated as a single value rather than an array of bytes.  This parameter is available to restore the previous odd behavior, if desired.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Sep 13 07:08:33 2016</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Unmerge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Unmerge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>GENERATORNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -1345</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Separates data records containing array properties into individual records with one array value per record</sci:value>
														<sci:value>&lt;p&gt;Each incoming data record with more than one value for the property or properties specified by &lt;i&gt;PropertyNames&lt;/i&gt; is duplicated for each of the values.  For example, an input data record with three values will generate three output data records.  Each output record will contain one of the values for the &lt;i&gt;PropertyNames&lt;/i&gt; property, and all other properties will be identical.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Large Data Records&lt;/i&gt;: When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each data record is particularly large, setting &lt;i&gt;Large Data Records&lt;/i&gt; to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.&lt;/p&gt;


&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If no property names are given, then all properties with multiple values are unmerged.  In this case, unexpected occurrences of arrays in a property will cause unintentional unmerge operations.  Try to specify a value for &lt;i&gt;PropertyNames&lt;/i&gt; if possible.&lt;/li&gt;
&lt;li&gt;If multiple unmerge properties are specified, the number of data records that result from unmerging a given incoming data record is equal to the number of values of the unmerge property that has the most values.  That is, if two unmerge properties, &quot;A&quot; and &quot;B&quot; are specified where A has 5 values and B has 7 values, then 7 data records will result.  The first 5 records will contain, in order, the 5 values of A.  For the last two records, A will be undefined.  All other properties will be duplicated on each record.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>30</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Unmerge Data</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">17.1.0.119</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.DataCacheIO.1">
												<sci:component name="Cache Writer" version="2">
													<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>Append</sci:member>
														<sci:member>Scope</sci:member>
														<sci:value>Temp</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to write to the cache.</sci:help>
													</sci:arg>
													<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
														<sci:legalval selected="true">Job Only</sci:legalval>
														<sci:legalval>User Only</sci:legalval>
														<sci:legalval>All Users</sci:legalval>
													</sci:arg>
													<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
														<sci:member>JoinUsing</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:member>JoinPropertyType</sci:member>
														<sci:member>JoinUsingListType</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="JoinUsing" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>Additional parameters to control the component behavior.</sci:help>
														<sci:member>Write Globals</sci:member>
														<sci:member>Enable Compression</sci:member>
														<sci:member>Password</sci:member>
													</sci:arg>
													<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
														<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Enable Compression" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
														<sci:help>&lt;p&gt;Specifies if data written to disk should be compressed.&lt;/p&gt;
&lt;b&gt;Note:&lt;b&gt; Starting with 2017 R2, compression uses the LZ4 compression algorithm which is very fast.  Turning off compression will typically result in 6 to 10 times increased disk usage with little or no improvement in performance.  You should test your own data for comparison.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>&lt;p&gt;
An optional password to assign to the cache content. Once set, the password must be used to read data back from the cache. It is useful to control access to a new public data cache.
&lt;/p&gt;
&lt;p&gt;
For an existing cache, set the password to be able to overwrite or append to the content.
&lt;/p&gt;
&lt;p&gt;
Note that the user who writes a password-protected cache does not require a password to access or overwrite the content.
&lt;/p&gt;
</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
													</sci:arg>
													<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
														<sci:legalval selected="true">Writer</sci:legalval>
														<sci:legalval>Reader</sci:legalval>
														<sci:legalval>Writer/Reader</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Aug 28 09:11:28 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Write cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -1545</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DATABASENODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Cache Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a named cache</sci:value>
														<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;li&gt;A password may be assigned to a new cache to control read and write access to the content.&lt;/p&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1563</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>33</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Run R Script" version="2">
													<sci:arg name="RScriptExpression" type="ExpressionType" required="true" visibility="visible" multi="false">
														<sci:help>Expression defining the RScript property containing the script to be sent to R.</sci:help>
														<sci:value>RScript := &apos;
# Script prefix:
$(ScriptPrefix)
# End of prefix

# Script body:
&apos; . @Script . &apos;
# End of body

# Script suffix:
$(ScriptSuffix)
&apos;
</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>EnvOverride</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 30 11:47:31 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Run R Script</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{52541793-A244-485C-9B70-DC1DDD44DD6F}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -1895</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Execute R script, optionally displaying script and stdout</sci:value>
														<sci:value>Executes in R a script defined by RScriptExpression.  This is an internal component used by other R Statistics components.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1362</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>11</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R Script</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>@ShowRScript = True</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Show R script?</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FilterNode</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
																<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Notepad Viewer" version="2">
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of records to view.</sci:help>
															</sci:arg>
															<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Optional name of the document</sci:help>
																<sci:value>R_Script</sci:value>
															</sci:arg>
															<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
																<sci:member>CharacterEncoding</sci:member>
																<sci:member>HierarchyDepth</sci:member>
															</sci:arg>
															<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Indicates the character set that will be used within the file.
 
UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.
 
ANSI specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.
 
&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.
 
For more information about each of these encoding styles, go to http://www.unicode.org/</sci:help>
																<sci:legalval>ANSI</sci:legalval>
																<sci:legalval selected="true">UTF-8</sci:legalval>
																<sci:legalval>Unicode</sci:legalval>
																<sci:legalval>Unicode big endian</sci:legalval>
															</sci:arg>
															<sci:arg name="HierarchyDepth" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>Controls the maximum depth within hierarchical data records to display node and property information.  No hierarchical information will be displayed if depth is set to -1.  If no value is set, the default is 0.</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
																<sci:value>ClientFilePath,ServerFilePath</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>When the network runs, processes once or until done for each process call</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
																<sci:legalval>Cant Replace With Copy</sci:legalval>
																<sci:legalval>Cant Open</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Sep 12 07:46:27 2016</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Notepad Viewer</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ViewerNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{522F4A0B-DD0C-4C26-83DD-29A7B09F4461}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -95</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Displays data records in the Windows Notepad application</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>17.1.0.119</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Viewers\Notepad Viewer</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>$(RScriptExpression)</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
																<sci:value>@EnvOverride := &apos;LD_LIBRARY_PATH=&apos;;
if @R_LD_LIBRARY_PATH is defined then
	@EnvOverride .= @R_LD_LIBRARY_PATH;
end if;
</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>R script expression</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -395</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Executes PilotScript to modify data records.</sci:value>
																<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.1.1.400</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextWriter.1">
														<sci:component name="Text Writer" version="2">
															<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
																<sci:value>$(Rscriptfile)</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>What to do if the given file already exists.</sci:help>
																<sci:legalval selected="true">Overwrite</sci:legalval>
																<sci:legalval>Append</sci:legalval>
																<sci:legalval>Halt</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>List of which properties (separated by commas) will be written
  * means all properties</sci:help>
																<sci:value>*</sci:value>
															</sci:arg>
															<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies whether the name of each property 
is displayed along with its value(s)</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to preceed each record</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to be included after each record</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether to open the file in binary mode for outputting nontext information</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue May 18 12:07:19 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Write RScript</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DocumentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -395</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Writer</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Data records are formatted as text and written to a file. </sci:value>
																<sci:value>Data records are formatted as text written to disk as a &apos;Destination&apos; file.  Separation between data records can be indicated with user specified characters.
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited Text Writer&quot;. To write a file formatted with one record per row with delimiters between the data use the &quot;Delimited Text Writer&quot;&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.0.5.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextWriter.1">
														<sci:component name="Text Writer" version="2">
															<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
																<sci:value>$(JobDir)\Rscript.R</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>What to do if the given file already exists.</sci:help>
																<sci:legalval selected="true">Overwrite</sci:legalval>
																<sci:legalval>Append</sci:legalval>
																<sci:legalval>Halt</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>List of which properties (separated by commas) will be written
  * means all properties</sci:help>
																<sci:value>*</sci:value>
															</sci:arg>
															<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies whether the name of each property 
is displayed along with its value(s)</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to preceed each record</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to be included after each record</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether to open the file in binary mode for outputting nontext information</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue May 18 12:07:19 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Write RScript</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DocumentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -720</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Writer</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Data records are formatted as text and written to a file. </sci:value>
																<sci:value>Data records are formatted as text written to disk as a &apos;Destination&apos; file.  Separation between data records can be indicated with user specified characters.
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited Text Writer&quot;. To write a file formatted with one record per row with delimiters between the data use the &quot;Delimited Text Writer&quot;&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.0.5.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.RunProgram.1">
														<sci:component name="Run R" version="2">
															<sci:arg name="CommandLine" type="TextType" required="true" visibility="visible" multi="false">
																<sci:help>Command line for application or file to execute on the server machine.</sci:help>
																<sci:value>&quot;$(R_exe)&quot; --no-save --no-restore &lt; &quot;$(Rscriptfile)&quot; &gt; &quot;$(Rstdoutfile)&quot;</sci:value>
															</sci:arg>
															<sci:arg name="WaitForExit" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether or not to wait for the program to finish before returning from the process call.  This parameter must be set to True for StdinProperty, StdoutProperty, StderrProperty, or PropertyForExitStatus to function.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyForExitStatus" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name to hold the value of the program exit status code. Denote a global property with a leading @ character.
Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																<sci:value>@RExitStatus</sci:value>
															</sci:arg>
															<sci:arg name="StdinProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that holds the desired value of the program&apos;s standard input (stdin). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
															</sci:arg>
															<sci:arg name="StdoutProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that will hold the program&apos;s standard output (stdout). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
															</sci:arg>
															<sci:arg name="StderrProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that will hold the program&apos;s standard error (stderr). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																<sci:value>@stderr</sci:value>
															</sci:arg>
															<sci:arg name="Environment" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
																<sci:metaproplist>
																	<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAJeAlNwZWNpZmllcyBhZGRpdGlvbmFsIGVudmlyb25tZW50IHZhcmlhYmxlIHNldHRpbmdzIHRoYXQgd2lsbCBiZSB1c2VkIGJ5IHRoZSBzcGF3bmVkIHByb2Nlc3MuICBTcGVjaWZ5IGVhY2ggc2V0dGluZyBvbiBhIGxpbmUgYnkgaXRzZWxmIGFzICJ2YXJpYWJsZT1uYW1lIi4gIFRoZSBzcGF3bmVkIHByb2Nlc3Mgd2lsbCBpbmhlcml0IHRoZSBleGlzdGluZyBlbnZpcm9ubWVudCBvZiB0aGUgc2Npc3ZyIHByb2Nlc3MsIGFuZCBhbnkgc2V0dGluZ3MgaGVyZSB3aWxsIGJlIGFwcGVuZGVkIHRvIHRoZSB2YXJpYWJsZSBsaXN0LiAgVG8gbWFrZSB1c2Ugb2YgYW4gZXhpc3RpbmcgdmFyaWFibGUsIHN1cnJvdW5kIHRoZSB2YXJpYWJsZSBuYW1lIHdpdGggcGVyY2VudCBzaWducyAoZS5nLiAiUEFUSD1jOlxteWRpcjslUEFUSCUiKSAgTm90ZSB0aGF0IHRoaXMgc3ludGF4IHNob3VsZCBiZSB1c2VkIHdpdGggYm90aCBXaW5kb3dzIGFuZCBMaW51eCBzZXJ2ZXJzLiAgRHVlIHRvIE9TIGRlc2lnbnMsIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgY2FzZSBpbnNlbnNpdGl2ZSBvbiBXaW5kb3dzIHNlcnZlcnMgYW5kIGNhc2Ugc2Vuc2l0aXZlIG9uIExpbnV4IHNlcnZlcnMuJFRleHRUeXBlAAgAAAABAQABAAQA/AAAAAAAAAAAADBFbnZpcm9ubWVudAPMU8+7BAA=</sci:propval>
																	<sci:propval name="SCI_InitializeUsingOrigType">TextType</sci:propval>
																	<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
																	<sci:propval name="SCI_EvalOnInitType">TextType</sci:propval>
																</sci:metaproplist>
																<sci:help>Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the scisvr process, and any settings here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;)  Note that this syntax should be used with both Windows and Linux servers.  Due to OS designs, environment variables are case insensitive on Windows servers and case sensitive on Linux servers.</sci:help>
																<sci:value>EnvOverride</sci:value>
															</sci:arg>
															<sci:arg name="UseCommandInterpreter" type="BoolType" required="false" visibility="hidden" multi="false">
																<sci:help>Whether or not to add &quot;cmd.exe /c&quot; (or &quot;/bin/sh -c&quot; on Linux servers) to the command line.  This causes the command line to be interpreted through the operating systems standard command shell allowing the use of redirection specifiers such as &apos;&gt;&apos; and &apos;&lt;&apos; and piping via &apos;|&apos;.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Componet Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/rstats</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Dec 11 15:47:33 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8611ED9C-47D2-4EB1-A98B-CFB894E3840F}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Run R</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Run Program</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -1020</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Runs a Windows command line application on the server machine.</sci:value>
																<sci:value>&lt;p&gt;Define the command line by entering text as you would in a command prompt window. The component includes facilities for looking up a program name in the Windows registry. It can interpret a program name as a ProgID, such as &quot;InternetExplorer.Application&quot;, or as a shell command, such as &quot;IsisServer&quot;, or as a document to load into an associated program, such as &quot;c:\spreadsheet.xls&quot;.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;CommandLine&lt;/i&gt;: The command that the component will run. The correct syntax is the full command line exactly as you would type it in a shell command window. The first space- or quote-delimited item of the command line can be a ProgId, such as &quot;InternetExplorer.Application&quot;. This starts up Internet Explorer (IE) without having to specify the path to IE explicitly. Shell command associations are also supported, so &quot;IsisServer&quot; will start Isis Draw. Finally, there is support for file associations, so the path &quot;D:\docs\notes.doc&quot; will start Microsoft Word and load the specified document.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;WaitForExit&lt;/i&gt;: When TRUE, the data pipeline is blocked until the command has completed.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;PropertyForExitStatus&lt;/i&gt;: Allows you to assign the exit status of the command to a global property or to a data record property. Use either a global or local property reference, such as @status or status.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;UseCommandInterpreter&lt;/i&gt;: When True, parses the command line through the command interpreter on the remote server (with a shell such as csh or bash or the windows interpreter cmd.exe). In particular, this needs to be set to True if the CommandLine utilizes standard output or input (such as cmd.exe /c &amp;quot;c:\Program Files\R\rterm.exe&amp;quot; &amp;quot;0&amp;lt;$(CommandFile)&amp;quot;).&lt;/p&gt;
&lt;p&gt;&lt;i&gt;StdinProperty, StdoutProperty, and StderrProperty&lt;/i&gt;: Allows you to redirect standard communications to global properties or to data record properties. Use either a global or local property reference, such as @stdin or stdin.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Environment&lt;/i&gt;: Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the PipelinePilot process, and any settings defined here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;).  Since this will run on the Windows client, all environment variables are case insensitive.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt; If your command line includes a file path, create a new parameter for the component, of type URL, so the user can enter the path. Then use a token replacement in the CommandLine to pick up the value. For example: Notepad.exe &quot;$(SciTegicRoot)\$(Path)&quot;. &lt;/li&gt;
&lt;li&gt;When the component is separated from any other pipeline, the command line is run just once.&lt;/li&gt; &lt;li&gt;You can add an input or output pass port to the component, to integrate it with a pipeline. If there is an output port, but no input port, the command is run once and a single new record is generated. If there is an input port, then the command is run once for each data record passed in.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.2.0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Display R stdout" version="2">
															<sci:arg name="ControlProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>ControlProperty</sci:help>
																<sci:value>@ShowRStdOutput</sci:value>
															</sci:arg>
															<sci:arg name="Filename" type="StringType" required="true" visibility="visible" multi="false">
																<sci:value>$(Rstdoutfile)</sci:value>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/rstats</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 30 11:47:39 2017</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Display R stdout</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ViewerNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{2A8352DC-F36E-4D10-B8DE-EFF7E019C441}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -1320</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Display R standard output</sci:value>
																<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>18.1.0.1362</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Modified</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="2" to="0" type="true"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="2" to="6" type="true"/>
													<sci:version iVal="1"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>fileexists(&quot;$(Routput1file)&quot;)</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>InputFrame file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -2245</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>12</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedReader.1">
												<sci:component name="Delimited Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file(s) or URL source to read</sci:help>
														<sci:value>$(Routput1file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties that are to be retained in each data record output
by the reader component. If the value is left blank, then all properties
are retained. If the parameter contains the value &quot;-&quot; (minus sign), then
no properties are to be retained.</sci:help>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character which separates the fields in the file.
  To determine automatically use:   FigureOut  
  For &quot;tab&quot; delimited type:              tab
  For &quot;space&quot; delimited type:         space
  For &quot;comma&quot; delimited type:       comma
  For &quot;colon&quot; delimited type:          colon</sci:help>
														<sci:legalval>FigureOut</sci:legalval>
														<sci:legalval selected="true">Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
													</sci:arg>
													<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>When TRUE, property names are taken
from the first line of data in the file.  When
FALSE, properties will be called: Column1,
Column2, etc. by default</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records.  A property 
called &apos;SourceTag&apos; will be created and will hold the value indicated:
   None - no SourceTag property will be created, and any existing will be removed
   Filename - the name of the file read
   FilenameAndExtension - the name of the file read with it&apos;s file extension
   FullFilename - the name of the file read including the directory path
   Number - when multiple files are read in this component, they are numbered 1,2,3...
   Letter - when multiple files are read in this component, they are lettered A, B, C...
   KeepCurrent - keep the current value of SourceTag</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>Specifies the character or string used to represent an 
undefined string in the file being read</sci:help>
													</sci:arg>
													<sci:arg name="AllLines" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>When TRUE, all lines of the text file become
part of a single data record.  The values for
a column from each row become multiple [array]
values for the property (column).</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to trim whitespace from the left and right ends of each value</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:14 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R output</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -2245</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads text files containing one record per line with data separated by delimiters.</sci:value>
														<sci:value>Reads textual data from one or more files that are formated with a single record per line. Individual data items on each line should be separated by a delimiter character (e.g. space, comma, tab). The first line is treated as column names for defining property names. If column names are not declared, they are given standard names of Column1, Column2, etc. 

This component should be used to read comma delimited text files from Excel (.csv).

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>13</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>for #ii in 1 .. numproperties() loop
	/* Convert integers to Long only if they won&apos;t overflow; convert all other numbers to Double. */
	if isinteger(ithproperty(#ii)) and strlength(ithProperty(#ii)) &lt; 10 then
		changepropertytype(ithproperty(#ii), &apos;Long&apos;);
	elsif isnumber(ithproperty(#ii)) then
		changepropertytype(ithproperty(#ii), &apos;Double&apos;);
	end if;
end loop;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Convert numbers</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -2245</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>14</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DataCacheIO.1">
												<sci:component name="Cache Reader" version="2">
													<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The name of the cache to read, which should refer to a cache already written in the protocol containing this component.  Use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to provide an ID for temporary caches, then refer to the temporary ID with $(globalname)</sci:help>
														<sci:member>RangeMinimum</sci:member>
														<sci:member>RangeMaximum</sci:member>
														<sci:member>Scope</sci:member>
														<sci:member>JobId</sci:member>
														<sci:value>Temp</sci:value>
													</sci:arg>
													<sci:arg name="RangeMinimum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The lower limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means start reading at the first cached record.
               </sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="RangeMaximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The upper limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means read to the end of the set of cached records.
               </sci:help>
													</sci:arg>
													<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to the same values as were used in the &lt;/i&gt;Cache Writer&lt;/i&gt;.
			</sci:help>
														<sci:legalval selected="true">Job Only</sci:legalval>
														<sci:legalval>User Only</sci:legalval>
														<sci:legalval>All Users</sci:legalval>
													</sci:arg>
													<sci:arg name="DeleteWhenFinished" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>If True, then delete the cache when finished reading</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Additional parameters to control the component behavior.</sci:help>
														<sci:member>Read Globals</sci:member>
														<sci:member>Password</sci:member>
													</sci:arg>
													<sci:arg name="Read Globals" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;Defines if the component should read globals from the cache.&lt;/p&gt;
&lt;p&gt;Any globals read from the cache will overwrite the existing globals.&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>&lt;p&gt;Enter a password, if one was assigned when the cache was written.
&lt;/p&gt;
&lt;p&gt;Note that a password is not required, if the current user originally wrote the password-protected cache.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="JobId" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>If the scope is set to &lt;I&gt;Job Only&lt;/I&gt;, then this is the job that owns the cache, if it is different from this job. The job must have been run by the same user as this job. If not specified, then the current job is assumed to contain the cache.
               </sci:help>
														<sci:enabledscript>parameter(&apos;Scope&apos;) eq &apos;Job Only&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
													</sci:arg>
													<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
														<sci:legalval>Writer</sci:legalval>
														<sci:legalval selected="true">Reader</sci:legalval>
														<sci:legalval>Writer/Reader</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Aug 28 09:15:02 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Read cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -2620</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DATABASENODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Cache Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data records from a named cache</sci:value>
														<sci:value>&lt;p&gt;A data cache is a place where you can temporarily store data records without losing information.  This component is used to read data from a named cache created by the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; component.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache to read.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;This component is typically used as a mechanism for retrieving temporary data stored within a protocol.&lt;/li&gt;
&lt;li&gt;To access a cache created in a different protocol, use &lt;i&gt;Scope&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To join data from a cache to streaming data records use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To list available caches use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-7077-05B44C3D08E6}&apos;)&quot;&gt;List Caches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To create a temporary cacheID use &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1563</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>34</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Cache Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge All Data" version="2">
													<sci:arg name="Merge Behavior" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>Options controlling the details of how properties are merged together</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Provides fine control over how multiple values are treated when merging data records together.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;This string is used during append to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If defined, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first data record is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When multiple values for a property are retained, the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual data records included in the resulting merged record. This value is simply the total number of input records.&lt;/p&gt;
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
														<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:value>N/A</sci:value>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Mar 11 13:00:58 2011</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge All Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JOINNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C00EFC73-DE7C-4932-AFD6-55D1DFA7792C}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -2620</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Merges properties of all input data records into a single output data record</sci:value>
														<sci:value>&lt;p&gt;Performs faster than &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt; for the special case where all input records are to be merged into one.
&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties are handled.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge data records that share identical values of a specified property, use &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.&lt;/p&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records to be merged</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>A single data record containing all merged properties of the input records</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>8.4.5.20</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>35</sci:value>
													</sci:arg>
													<sci:arg name="Merge All" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Internal parameter indicating that all data records are to be merged into one, irrespective of the value of the &lt;i&gt;MergeUsing&lt;/i&gt; Property.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge All Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>fileexists(&quot;$(Routput2file)&quot;)</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>ResultsFrame (summary) file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>15</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedReader.1">
												<sci:component name="Delimited Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file(s) or URL source to read</sci:help>
														<sci:value>$(Routput2file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties that are to be retained in each data record output
by the reader component. If the value is left blank, then all properties
are retained. If the parameter contains the value &quot;-&quot; (minus sign), then
no properties are to be retained.</sci:help>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character which separates the fields in the file.
  To determine automatically use:   FigureOut  
  For &quot;tab&quot; delimited type:              tab
  For &quot;space&quot; delimited type:         space
  For &quot;comma&quot; delimited type:       comma
  For &quot;colon&quot; delimited type:          colon</sci:help>
														<sci:legalval>FigureOut</sci:legalval>
														<sci:legalval selected="true">Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
													</sci:arg>
													<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>When TRUE, property names are taken
from the first line of data in the file.  When
FALSE, properties will be called: Column1,
Column2, etc. by default</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records.  A property 
called &apos;SourceTag&apos; will be created and will hold the value indicated:
   None - no SourceTag property will be created, and any existing will be removed
   Filename - the name of the file read
   FilenameAndExtension - the name of the file read with it&apos;s file extension
   FullFilename - the name of the file read including the directory path
   Number - when multiple files are read in this component, they are numbered 1,2,3...
   Letter - when multiple files are read in this component, they are lettered A, B, C...
   KeepCurrent - keep the current value of SourceTag</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>Specifies the character or string used to represent an 
undefined string in the file being read</sci:help>
													</sci:arg>
													<sci:arg name="AllLines" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>When TRUE, all lines of the text file become
part of a single data record.  The values for
a column from each row become multiple [array]
values for the property (column).</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to trim whitespace from the left and right ends of each value</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:14 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R output</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads text files containing one record per line with data separated by delimiters.</sci:value>
														<sci:value>Reads textual data from one or more files that are formated with a single record per line. Individual data items on each line should be separated by a delimiter character (e.g. space, comma, tab). The first line is treated as column names for defining property names. If column names are not declared, they are given standard names of Column1, Column2, etc. 

This component should be used to read comma delimited text files from Excel (.csv).

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>16</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>for #ii in 1 .. numproperties() loop
	/* Convert integers to Long only if they won&apos;t overflow; convert all other numbers to Double. */
	if isinteger(ithproperty(#ii)) and strlength(ithProperty(#ii)) &lt; 10 then
		changepropertytype(ithproperty(#ii), &apos;Long&apos;);
	elsif isnumber(ithproperty(#ii)) then
		changepropertytype(ithproperty(#ii), &apos;Double&apos;);
	end if;
end loop;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Convert numbers</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>17</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Data to Fail Port" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:value>/* Send all records to the fail port */
false;</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Adds any properties calculated in the component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When True, controls the exit port used for each data record by evaluating the final expression (or only one) listed in the &quot;Expression&quot; parameter.
  -Pass (green) port: When expression is True
  -Fail (red) port: When expression is False
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:value>ComponentReturnsFail</sci:value>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Sep 01 17:06:37 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Data to Fail Port</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{A718CDEE-EE7D-4B75-9346-C3780D347090}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Directs records to the Fail port for use in subprotocol building.</sci:value>
														<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Fail port of the subprotocol.
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>All data records</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.5.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>18</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Fail Port</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.SortData.1">
												<sci:component name="Sort Data" version="2">
													<sci:arg name="Sort By" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
														<sci:help>Defines properties for sorting. Use this parameter to add, remove and reorder properties to be used for sorting.</sci:help>
														<sci:member>Property 1</sci:member>
														<sci:member>Property 2</sci:member>
														<sci:member>Property 3</sci:member>
													</sci:arg>
													<sci:arg name="Property 1" type="PropertyNameType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The property to sort by.</sci:help>
														<sci:member>Property 1 Sort Order</sci:member>
														<sci:member>Property 1 Sort As</sci:member>
														<sci:value>Conc1</sci:value>
													</sci:arg>
													<sci:arg name="Property 1 Sort Order" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to sort in ascending or descending order.</sci:help>
														<sci:legalval selected="true">Ascending</sci:legalval>
														<sci:legalval>Descending</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 1 Sort As" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
														<sci:legalval>Numbers</sci:legalval>
														<sci:legalval>Text</sci:legalval>
														<sci:legalval>Case Sensitive Text</sci:legalval>
														<sci:legalval selected="true">Text Containing Numbers</sci:legalval>
														<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
														<sci:legalval>Dates</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 2" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>The property to sort by.</sci:help>
														<sci:member>Property 2 Sort Order</sci:member>
														<sci:member>Property 2 Sort As</sci:member>
													</sci:arg>
													<sci:arg name="Property 2 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort in ascending or descending order.</sci:help>
														<sci:legalval selected="true">Ascending</sci:legalval>
														<sci:legalval>Descending</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 2 Sort As" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">Numbers</sci:legalval>
														<sci:legalval>Text</sci:legalval>
														<sci:legalval>Case Sensitive Text</sci:legalval>
														<sci:legalval>Text Containing Numbers</sci:legalval>
														<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
														<sci:legalval>Dates</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 3" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>The property to sort by.</sci:help>
														<sci:member>Property 3 Sort Order</sci:member>
														<sci:member>Property 3 Sort As</sci:member>
													</sci:arg>
													<sci:arg name="Property 3 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort in ascending or descending order.</sci:help>
														<sci:legalval selected="true">Ascending</sci:legalval>
														<sci:legalval>Descending</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 3 Sort As" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">Numbers</sci:legalval>
														<sci:legalval>Text</sci:legalval>
														<sci:legalval>Case Sensitive Text</sci:legalval>
														<sci:legalval>Text Containing Numbers</sci:legalval>
														<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
														<sci:legalval>Dates</sci:legalval>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>You can provide this to only return this number of records. This is useful when you only want to see the &quot;best&quot; record or records.</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Mar 27 13:39:02 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>/* Start from &apos;Property 1&apos; since it must be defined.
   Keep this following line for the client auto-rename to use.
	 Parameter(&apos;Property 1&apos;), 
     Parameter(&apos;Property 2&apos;), 
	 Parameter(&apos;Property 3&apos;)
	 Parameter(&apos;Property 4&apos;)
	 Parameter(&apos;Property 5&apos;)
 */
if (trim(strlength(parameter(&apos;Property 1&apos;, 2))) &gt; 0) then
	#name := &quot;Sort on &quot; . trim(parameter(&apos;Property 1&apos;, 2));
	
	/* Get other sort properties that have values */
	#paramKey := &apos;Property &apos;;
	#count := 2;
	#paramName := #paramKey . #count;

	while (#count &lt;= 5 and parameter(#paramName, 2) is defined)
	loop
		if (strlength(parameter(#paramName, 2)) &gt; 0) then		
			#name := #name . &apos;, &apos;;
			#name := #name . parameter(#paramName, 2);
		end if;
	
		#count++;
		#paramName := #paramKey . #count;
	end loop;
	#name;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Sort Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{BC934106-6EA5-44e1-93C3-8787DECA9D15}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Sorts data records according to one or more properties</sci:value>
														<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sort By&lt;/i&gt; parameter to add more properties for sorting.&lt;/p&gt;

&lt;p&gt;When multiple properties are used by sorting, the property values of &lt;i&gt;Property 1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;Property 2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;Property 3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The order of sorting can be changed using &lt;i&gt;Sort Order&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;li&gt;Records containing Null or undefined &lt;i&gt;Sort By&lt;/i&gt; properties will be output to the Fail Port.
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records in sorted order</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records that do not contain the sort field(s)</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1396</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>32</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Sort Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge All Data" version="2">
													<sci:arg name="Merge Behavior" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>Options controlling the details of how properties are merged together</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Provides fine control over how multiple values are treated when merging data records together.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;This string is used during append to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If defined, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first data record is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When multiple values for a property are retained, the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual data records included in the resulting merged record. This value is simply the total number of input records.&lt;/p&gt;
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
														<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:value>N/A</sci:value>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Mar 11 13:00:58 2011</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge All Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JOINNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C00EFC73-DE7C-4932-AFD6-55D1DFA7792C}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Merges properties of all input data records into a single output data record</sci:value>
														<sci:value>&lt;p&gt;Performs faster than &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt; for the special case where all input records are to be merged into one.
&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties are handled.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge data records that share identical values of a specified property, use &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.&lt;/p&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records to be merged</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>A single data record containing all merged properties of the input records</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>8.4.5.20</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>31</sci:value>
													</sci:arg>
													<sci:arg name="Merge All" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Internal parameter indicating that all data records are to be merged into one, irrespective of the value of the &lt;i&gt;MergeUsing&lt;/i&gt; Property.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge All Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>fileexists(&quot;$(RDir)/$(RplotPrefix)001.png&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Plot file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>19</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>#fileindex := 1;
#nextfile := &quot;$(RDir)/$(RplotPrefix)001.png&quot;;
#nextplot := &quot;Plot1&quot;;

while fileexists(#nextfile) loop
	append(Filename, #nextfile);
	append(Plotname, #nextplot);
	++#fileindex;
	#nextfile := format(&apos;$(RDir)/$(RplotPrefix)%03d.png&apos;, #fileindex);
	#nextplot := &quot;Plot&quot; . #fileindex;
end loop;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Get all plot file names</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>20</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.SeparateValues.1">
												<sci:component name="Unmerge Data" version="2">
													<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of multi-valued property to separate and output as separate records. If multiple properties are given, they each must have the same number of values. If property names are not given, all properties with multiple values are unmerged.
</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jan 05 15:19:59 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Unmerge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Unmerge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>GeneratorNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Separates data records containing multiple values into multiple duplicate records each containing only one of the values.</sci:value>
														<sci:value>Each incoming data record with more than one value in the specified properties is duplicated for each of the multiple values. For example, a data object with three values generates three data objects, each with only one of the three values (but otherwise identical). 

If property names are not given, all properties with multiple values are unmerged. 

If multiple properties are unmerged, they must contain the same number of values.
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with multiple values for at least one property</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.3</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>21</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Unmerge Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Subprotocol" version="2">
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>Filename,Plotname</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jan 05 15:20:07 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read plotfile</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
														<sci:value>Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 

To define input and output ports, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm &apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.

Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm &apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.3</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Make Shortcut by Default</sci:legalval>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>22</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
																<sci:value>@Filename := Filename;
@Plotname := Plotname;</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
																<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Jan 05 15:19:58 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Put Filename into global</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Executes PilotScript to modify data records.</sci:value>
																<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.0.3</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextReader.1">
														<sci:component name="Text Reader" version="2">
															<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The file or URL source to read</sci:help>
																<sci:value>$(Filename)</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
																<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
															</sci:arg>
															<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Specifies the name of the property list to hold the block of text</sci:help>
																<sci:value>$(Plotname)</sci:value>
															</sci:arg>
															<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies which delimiting mechanism to use:

 - EndOfFile: All text is one record.
 - EndOfParagraph: Each paragraph becomes a separate record.
 - EndOfLine: Each line becomes a separate record.
 - DelimitText: Uses the parameters BeginningText and/or EndingText.

</sci:help>
																<sci:legalval selected="true">EndOfFile</sci:legalval>
																<sci:legalval>EndOfParagraph</sci:legalval>
																<sci:legalval>EndOfLine</sci:legalval>
																<sci:legalval>DelimitText</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
															</sci:arg>
															<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
																<sci:legalval selected="true">None</sci:legalval>
																<sci:legalval>Filename</sci:legalval>
																<sci:legalval>FilenameAndExtension</sci:legalval>
																<sci:legalval>FullFilename</sci:legalval>
																<sci:legalval>Number</sci:legalval>
																<sci:legalval>Letter</sci:legalval>
																<sci:legalval>KeepCurrent</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="hidden" multi="false">
																<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Nov 28 12:28:00 2005</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Read binary plot file</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -395</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DOCUMENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Reader</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Reads raw textual data.</sci:value>
																<sci:value>&lt;p&gt;Reads text files and creates a data record for each block of text. You can specify the delimiters 
  for the blocks. Each data record is stored in a single property.
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited 
  Text Reader&quot;. If the text file is formatted with one record per line, with the 
  data records separated by delimiters (such as Excel generated .csv file), use 
  the Delimited Text Reader instead. 

If delimit text is given, the text used to delimit must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.0.1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:value>numvalues($(Plotname)) &gt; 700</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Nov 28 12:27:58 2005</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Make sure plot is not empty</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FILTERNODE</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -395</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
																<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.0.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="1" to="2" type="true"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Tag Data" version="2">
													<sci:arg name="TagName" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of a new property to create to serve as a tag</sci:help>
														<sci:value>Tagged</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:value>$(TagName) := true;</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)
</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jan 05 15:19:59 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Tag Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{BCF71EB2-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Tags each record with a given property name for later identification.</sci:value>
														<sci:value>A new property is created for each incoming data record, defined with the value &quot;True&quot;. Records tagged in this way can easily be identified in future components by evaluating whether the new property is defined. This is useful for marking a data stream prior to combining it with another stream for learning, substructure search, and other operations. An alternative method for tagging records is available in most file readers which can tag the records with a SourceTag. </sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with the additional tag property</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.3</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>23</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Add Tag Property</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge Data" version="2">
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:value>Tagged</sci:value>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri May 30 08:21:34 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JOINNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Merges properties of all data records that share the same key property value into a single data record</sci:value>
														<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records that contain the properties being used for merging</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records that do not contain the properties being used for merging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.1.0.5</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>24</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>remove(&apos;Tagged&apos;);</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>remove tag</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1818 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>25</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="Data to Fail Port" version="2">
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>PassDataToPort</sci:value>
													</sci:arg>
													<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>the port to pass data to</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Data to Fail Port</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{A718CDEE-EE7D-4B75-9346-C3780D347090}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2106 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Directs records to the Fail port for use in subprotocol building.</sci:value>
														<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Fail port of the subprotocol.
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>All data records</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.4.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>26</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Fail Port</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@RExitStatus != 0</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Any errors?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -3695</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>27</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Display R stdout and halt protocol" version="2">
													<sci:arg name="ControlProperty" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>ControlProperty</sci:help>
														<sci:value>@ShowRStdOutput</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Oct 22 12:08:22 2014</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Display R stdout and halt protocol</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ViewerNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9E6F3C8B-E5AB-4d51-B5E5-C0F20559F6FF}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -3695</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Display R standard output</sci:value>
														<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>9.5.0.608</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>28</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout and halt protocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:connectid from="0" to="29" type="true"/>
											<sci:connectid from="29" to="2" type="true"/>
											<sci:connectid from="3" to="4" type="true"/>
											<sci:connectid from="4" to="5" type="true"/>
											<sci:connectid from="5" to="6" type="true"/>
											<sci:connectid from="6" to="7" type="true"/>
											<sci:connectid from="7" to="8" type="true"/>
											<sci:connectid from="30" to="10" type="true"/>
											<sci:connectid from="30" to="33" type="true"/>
											<sci:connectid from="12" to="13" type="true"/>
											<sci:connectid from="13" to="14" type="true"/>
											<sci:connectid from="34" to="35" type="true"/>
											<sci:connectid from="15" to="16" type="true"/>
											<sci:connectid from="16" to="17" type="true"/>
											<sci:connectid from="17" to="18" type="true"/>
											<sci:connectid from="18" to="32" type="true"/>
											<sci:connectid from="32" to="31" type="true"/>
											<sci:connectid from="31" to="35" type="true"/>
											<sci:connectid from="19" to="20" type="true"/>
											<sci:connectid from="20" to="21" type="true"/>
											<sci:connectid from="21" to="22" type="true"/>
											<sci:connectid from="22" to="23" type="true"/>
											<sci:connectid from="23" to="24" type="true"/>
											<sci:connectid from="24" to="25" type="true"/>
											<sci:connectid from="25" to="26" type="true"/>
											<sci:connectid from="27" to="28" type="true"/>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.MergeProperties.1">
										<sci:component name="Merge All Data" version="2">
											<sci:arg name="Merge Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>Options controlling the details of how properties are merged together</sci:help>
												<sci:member>WhenMerging</sci:member>
												<sci:member>KeepAllNullString</sci:member>
												<sci:member>KeepAllPreferredNodeName</sci:member>
												<sci:member>PrefixUsingProperty</sci:member>
											</sci:arg>
											<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Provides fine control over how multiple values are treated when merging data records together.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
												<sci:legalval>OverwriteOrCreate</sci:legalval>
												<sci:legalval>OverwriteExisting</sci:legalval>
												<sci:legalval selected="true">CreateIfNew</sci:legalval>
												<sci:legalval>AppendOrCreate</sci:legalval>
												<sci:legalval>AppendExisting</sci:legalval>
											</sci:arg>
											<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;This string is used during append to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
												<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
												<sci:value>None</sci:value>
											</sci:arg>
											<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;If defined, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first data record is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
												<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
												<sci:value>Molecule</sci:value>
											</sci:arg>
											<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;When multiple values for a property are retained, the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
											</sci:arg>
											<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual data records included in the resulting merged record. This value is simply the total number of input records.&lt;/p&gt;
</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
												<sci:legalval selected="true">KeepAll</sci:legalval>
												<sci:legalval>KeepFirst</sci:legalval>
											</sci:arg>
											<sci:arg name="MergeUsing" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
												<sci:member>MergeUsingListType</sci:member>
												<sci:member>MergePropertyType</sci:member>
												<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
												<sci:member>IgnoreCase</sci:member>
												<sci:value>N/A</sci:value>
											</sci:arg>
											<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
												<sci:legalval>UseFirstDefinedValue</sci:legalval>
												<sci:legalval selected="true">UseAllValues</sci:legalval>
											</sci:arg>
											<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
												<sci:legalval>IsNumeric</sci:legalval>
												<sci:legalval selected="true">IsText</sci:legalval>
												<sci:legalval>IsDate</sci:legalval>
												<sci:legalval>IsFingerprint</sci:legalval>
											</sci:arg>
											<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="nevershow" multi="false">
												<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
												<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Fri Mar 11 13:00:58 2011</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Merge All Data</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Merge Data</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>JOINNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{C00EFC73-DE7C-4932-AFD6-55D1DFA7792C}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>690 -455</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Merges properties of all input data records into a single output data record</sci:value>
												<sci:value>&lt;p&gt;Performs faster than &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt; for the special case where all input records are to be merged into one.
&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties are handled.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge data records that share identical values of a specified property, use &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.&lt;/p&gt;
&lt;/ul&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records to be merged</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>A single data record containing all merged properties of the input records</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>8.4.5.20</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
												<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Merge All" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
												<sci:help>Internal parameter indicating that all data records are to be merged into one, irrespective of the value of the &lt;i&gt;MergeUsing&lt;/i&gt; Property.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge All Data</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="R Custom Script" version="2">
											<sci:arg name="Script" type="TextType" required="true" visibility="visible" multi="false">
												<sci:help>Text of the R script you wish to run.  Enter the script just as if you were typing it in R.</sci:help>
												<sci:value>library(e1071)
set.seed(1)

Conc1 = AllData$Conc1
Response = AllData$POS_noise

df = as.data.frame(cbind(Conc1,Response))


model = svm(formula= Response~., data=df,
			type=&quot;eps-regression&quot;,
			kernel = &quot;$(kernel)&quot;,
			scale=TRUE,
			cross=2)

#tuneResult &lt;- tune(svm, Response~.,  data = df,
#                   ranges = list(epsilon = seq(0.1,1,0.1), gamma =2^(-1:1) , cost = 2^(0:3)),
#				   tunecontrol = tune.control(sampling = &quot;cross&quot;,cross=2)
#)

#tunedModel &lt;- tuneResult$best.model

Fit_Concentration = seq(from=min(AllData$Conc1),to=max(AllData$Conc1),length.out=100)
Conc1 = Fit_Concentration
Fit_Response_Pos = predict(model,type=&quot;response&quot;,newdata = Conc1)

Results = cbind(Fit_Concentration,Fit_Response_Pos)
</sci:value>
											</sci:arg>
											<sci:arg name="InputFrame" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Name to use in R script for data.frame containing input data.  Data in this frame will be sent out the pass port on completion of the script.</sci:help>
												<sci:value>AllData</sci:value>
											</sci:arg>
											<sci:arg name="ResultsFrame" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Name to use in R script for data.frame containing calculation results, which will be sent out the fail port.</sci:help>
												<sci:value>Results</sci:value>
											</sci:arg>
											<sci:arg name="kernel" type="StringType" required="false" visibility="visible" multi="false">
												<sci:legalval>polynomial</sci:legalval>
												<sci:legalval selected="true">radial</sci:legalval>
												<sci:legalval>sigmoid</sci:legalval>
											</sci:arg>
											<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
												<sci:help>Contains less commonly used parameters</sci:help>
												<sci:member>PlotWidth</sci:member>
												<sci:member>PlotHeight</sci:member>
												<sci:member>ShowRInputOutput</sci:member>
												<sci:member>R Functions Source</sci:member>
											</sci:arg>
											<sci:arg name="R Functions Source" type="URLType" required="false" visibility="visible" multi="false">
												<sci:help>Optional name of a file containing an R script or custom R functions you wish to use in the Script.  This file will be sourced in R before the Script is executed.
</sci:help>
												<sci:member>Embed External Scripts</sci:member>
											</sci:arg>
											<sci:arg name="Embed External Scripts" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>If True, indicates that the scripts specified by &lt;i&gt;R Functions Source&lt;/i&gt; are to be embedded in the R script created by this component. This can be useful for debugging purposes. If False, the scripts are concatenated into a separate temporary file that is executed using the R source() function.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="PlotWidth" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>Width in pixels of any plots created by the script</sci:help>
												<sci:value>600</sci:value>
											</sci:arg>
											<sci:arg name="PlotHeight" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>Height in pixels of any plots created by the script</sci:help>
												<sci:value>600</sci:value>
											</sci:arg>
											<sci:arg name="ShowRInputOutput" type="StringType" required="false" visibility="visible" multi="true">
												<sci:help>Specify whether or not to show the R script and the R stdout in Notepad viewers</sci:help>
												<sci:legalval>Script</sci:legalval>
												<sci:legalval>StdOutput</sci:legalval>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:value>RExitStatus,PlotName,RFunctionsFile,ShowRScript,ShowRStdOutput,RDir,ScriptPrefix,ScriptSuffix,RParScript,RPlotWidth,RPlotHeight,RplotPrefix,stderr,ExternalScript</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:value>$(R_Run_Remote)</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>100000000</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>$(R_Server)</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Jul 20 12:16:31 2017</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>R Custom Script</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{140C906F-960F-4DCD-84FD-D7DBF7277F0D}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>390 -815</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Executes R script</sci:value>
												<sci:value>Use this component to write your own custom R script for operating on incoming data records. All records coming into the component are put into an R data frame whose name is given by &lt;i&gt;InputFrame&lt;/i&gt;.  After your script has executed, the data in this frame are sent out the Pass port, including any changes made to the frame within the R script.
&lt;p&gt;
Any plots created in your script are sent out the Fail port and can be viewed with the &lt;a href=&quot;javascript:DoLink(&apos;{45979297-7C23-4374-BE33-1424E90A09A6}&apos;)&quot;&gt;R Plot Viewer&lt;/a&gt;.
&lt;p&gt;
If your R script creates a data frame with the name given by &lt;i&gt;ResultsFrame&lt;/i&gt;, the data in this frame are also  sent out the Fail port.  (You may wish to use this frame for summary statistics, for example.)
&lt;p&gt;
&lt;b&gt;Hints on manipulating R data frames&lt;/b&gt;
&lt;p&gt;
Assume that the &lt;i&gt;InputFrame&lt;/i&gt; name is &quot;AllData&quot; and that there are three properties -- ALogP, prop1, and Property 2 -- defined on each Pipeline Pilot data record (in that order).  Within the R script, you can refer to the ALogP values in any of the following ways:
&lt;p&gt;
&lt;code&gt;
ALogP&lt;br&gt;
AllData$ALogP&lt;br&gt;
AllData[&quot;ALogP&quot;]
AllData[1]&lt;br&gt;
AllData[,1]&lt;br&gt;
AllData[[1]]&lt;br&gt;
&lt;/code&gt;
&lt;p&gt;
Note that the following assignment in R does not change the value of ALogP within the AllData frame:
&lt;p&gt;
&lt;code&gt;ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
while the following assignment does change the value within the frame:
&lt;p&gt;
&lt;code&gt;AllData$ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
(The reason for this behavior is that after the data are read into R but before your script is executed, the &lt;code&gt;attach&lt;/code&gt; function is called on the data frame.  This allows you to refer to columns in the frame by column name alone, but any changes you make to the column name variables are made outside the frame.)
&lt;p&gt;
Properties with embedded spaces or special R characters such as &quot;#&quot; must always be quoted if referred to by name:
&lt;p&gt;
&lt;code&gt;AllData$&quot;Property 2&quot;&lt;/code&gt;
&lt;p&gt;
To add a new column to the frame, use the cbind function:
&lt;p&gt;
&lt;code&gt;AllData &amp;lt;- cbind(AllData, LogPCalc=ALogP+0.5)&lt;/code&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;Molecular structures are ignored by this component and will not be passed through. 
&lt;li&gt;An array property with N elements on an input data record will be converted to N scalar properties in order that the records conform to the R data frame structure.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more information on writing R scripts, see &lt;a href=&quot;javascript:DoLink(&apos;http://cran.r-project.org/doc/manuals/R-intro.html&apos;)&quot;&gt;An Introduction to R&lt;/a&gt;.
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>18.1.0.1523</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
												<sci:legalval>Cant Replace With Copy</sci:legalval>
												<sci:legalval>Cant Open</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Manipulators\R Custom Script</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Check R exe" version="2">
													<sci:arg name="Error Behavior" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies action to take in case of a problem with the Pipeline Pilot R configuration. Options are:
&lt;ul&gt;
&lt;li&gt;Default: For fatal errors such as a missing R executable, show a message in a dialog and halt the protocol if running from Pipeline Pilot; raise an exception if running from another client such as Web Port. For a non-fatal error such as an unsupported R version, show a message but do not halt the protocol if running from Pipeline Pilot; do nothing if running from another client.
&lt;li&gt;Message out Fail Port: For any type of error, send a message out the fail port in a property named &lt;b&gt;ErrorText&lt;/b&gt;. Do not raise an exception or display a message.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If the global property @SuppressRVersionWarning is set to True, no message is shown in the &quot;Default&quot; case for unsupported R versions.
&lt;/ul&gt;</sci:help>
														<sci:legalval selected="true">Default</sci:legalval>
														<sci:legalval>Message out Fail Port</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>ver,ErrorText,EnvOverride</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
														<sci:legalval>Cant Replace With Copy</sci:legalval>
														<sci:legalval>Cant Open</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Jun 02 08:18:08 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Check R exe</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{320AE9ED-071D-4ad7-AE87-2D692FAED359}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Check R executable</sci:value>
														<sci:value>Checks that the global variable &apos;R_exe&apos;, which points to the location of the R executable, is defined, and that the R executable file is in the location specified by R_exe. </sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1468</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Check R exe</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@ShowRScript := false;
@ShowRStdOutput := false;
for #i in 1 .. numvalues(@ShowRInputOutput) loop
   #s := @ShowRInputOutput[#i];
   if (#s eq &quot;Script&quot;) then 
      @ShowRScript := true;
   end if;
   if (#s eq &quot;StdOutput&quot;) then 
      @ShowRStdOutput := true;
   end if;
end loop;

@RDir := strreplace(@RunDirectory, &apos;\&apos;, &apos;/&apos;);
@RDir .= &apos;/temp&apos;;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Set R I/O to display and ROutput</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>29</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.ClientTempFiles.1">
												<sci:component name="Create Tempfiles for R" version="2">
													<sci:arg name="Server Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma separated list of global parameter names (such as &quot;tmp1,tmp2&quot;) to assign with temporary filenames obtained from the server</sci:help>
														<sci:value>Rmodelfile, Rscriptfile, Rstdoutfile, Rinput1file, Rinput2file, Rinput3file, Rinput4file, Rinput5file, Routput1file,Routput2file, Routput3file, Routput4file, Routput5file</sci:value>
													</sci:arg>
													<sci:arg name="Client Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma separated list of global parameter names (such as &quot;ctmp1,ctmp2&quot;) to assign with temporary filenames obtained from the client</sci:help>
													</sci:arg>
													<sci:arg name="Force Forward Slashes" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to force all server tempfiles to use forward slashes; this is useful if the temp file name is used to communicate with a external program that cannot handle backslashes on Windows</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>mhassan</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jul 13 10:17:05 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Create Tempfiles for R</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{2BFBE007-9937-47EB-A9B4-B76491D99C59}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Client Temp Filenames</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Obtains temporary filenames from the client or the server that are added to the global property list.</sci:value>
														<sci:value>&lt;p&gt;These names can be used later within the protocol as global variables within component parameters or as PilotScript expressions. For example, if your component executes on the client, but requires specific files to be present, you can create a temporary file named &quot;clientTmpFile1&quot; and later refer to it in a parameter or PilotScript entry via &quot;$(clientTmpFile1)&quot;.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Server Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the server.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Client Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the client.&lt;/p&gt;

&lt;p&gt;All files created in this way are deleted when the protocol is closed or, in the case of client tempfiles, when the client starts up again. (They are not permanent files.)&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.100</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Create Tempfiles for R</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>trim(@&apos;R Functions Source&apos;) ne &apos;&apos;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Any R script files?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:member>Keep Properties</sci:member>
														<sci:value>$(R Functions Source)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval>None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval selected="true">FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
													</sci:arg>
													<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies which delimiting mechanism to use:

 - EndOfFile: All text is one record.
 - EndOfParagraph: Each paragraph becomes a separate record.
 - EndOfLine: Each line becomes a separate record.
 - DelimitText: Uses the parameters BeginningText and/or EndingText.

</sci:help>
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
														<sci:legalval selected="true">EndOfFile</sci:legalval>
														<sci:legalval>EndOfParagraph</sci:legalval>
														<sci:legalval>EndOfLine</sci:legalval>
														<sci:legalval>DelimitText</sci:legalval>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:member>Binary</sci:member>
														<sci:member>KeepEndOfLine</sci:member>
														<sci:member>PutTextInProperty</sci:member>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies the name of the property list to hold the block of text</sci:help>
														<sci:value>Text</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Jan 21 11:19:34 2005</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R script files</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads raw textual data.</sci:value>
														<sci:value>&lt;p&gt;Reads text files and creates a data record for each block of text. You can specify the delimiters 
  for the blocks. Each data record is stored in a single property.
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited 
  Text Reader&quot;. If the text file is formatted with one record per line, with the 
  data records separated by delimiters (such as Excel generated .csv file), use 
  the Delimited Text Reader instead. 

If delimit text is given, the text used to delimit must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>5.0.0.1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Tag Data" version="2">
													<sci:arg name="TagName" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of a new property to create to serve as a tag</sci:help>
														<sci:value>Tagged</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:value>$(TagName) := true;</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)
</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Tag Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{BCF71EB2-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Tags each record with a given property name for later identification.</sci:value>
														<sci:value>A new property is created for each incoming data record, defined with the value &quot;True&quot;. Records tagged in this way can easily be identified in future components by evaluating whether the new property is defined. This is useful for marking a data stream prior to combining it with another stream for learning, substructure search, and other operations. An alternative method for tagging records is available in most file readers which can tag the records with a SourceTag. </sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with the additional tag property</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>5</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Add Tag Property</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge Data" version="2">
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of the key property (or a comma-separated list of properties) that contain the value identifying those records to merge. If multiple &quot;MergeUsing&quot; names are given, all must be identical for a merge event to occur (unless MergeUsingList type is set to &quot;UseFirstDefinedValue&quot;).
</sci:help>
														<sci:member>IgnoreCase</sci:member>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:value>Tagged</sci:value>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &quot;MergeUsing&quot; propety values
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>How &quot;MergeUsing&quot; properties are interpreted when  more than one property is listed:
 
    - UseFirstDefinedValue: Merges using only the first property in the list that has a defined value for a record.
 
  - UseAllValues: Merges using the concatentation of the values of all properties listed.</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Kinds of values found in the &quot;MergeUsing&quot; property:&lt;DL&gt;
&lt;DT&gt;&lt;b&gt;IsNumeric:&lt;/b&gt; &lt;DD&gt;All numbers are converted to doubles for comparison (so 1 = 1.0).
&lt;p&gt;
&lt;DT&gt;&lt;b&gt;IsText:&lt;/b&gt; &lt;DD&gt;All comparisons are made as string values.
&lt;p&gt; 
&lt;DT&gt;&lt;b&gt;IsDate:&lt;/b&gt; &lt;DD&gt;The key is considered a date
&lt;p&gt;
&lt;DT&gt;&lt;b&gt;IsFingerprint:&lt;/b&gt; &lt;DD&gt;The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.
&lt;/DL&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What happens to the values of properties represented in more than one of the records being combined. Does not apply to the &quot;MergeUsing&quot; property.

 
   KeepAll - keeps all property values by appending additional values in an array.
 
  KeepFirst - keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the &apos;MergeUsing&apos; property are discarded.
 
</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>When merging with KeepAll behavior, provides fine control over how multiple values are treated.
 
  - OverwriteOrCreate: copy all properties of each merging record sequentially, overwriting any values that may already exist (instead of generating an array). 
 
  - OverwriteExisting: Only copies properties that already exist on the first of the records merging together, overwriting those original values (instead of creating an array).
 
  - CreateIfNew: Leaves any existing properties alone, and writes only new properties.
 
  - AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.
 
  - AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>This string is used during append in &quot;KeepAll&quot; to pad out empty values. It keeps the generated arrays of values in sync for multiple samples. The value &quot;None&quot; causes no padding to occur.
</sci:help>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>If defined, and the MergeBehavior is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.</sci:help>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jun 01 10:08:02 2005</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JoinNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Combines data records having the same value for a given property.
</sci:value>
														<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the 
  same value as each other for the &lt;em&gt;MergeUsing&lt;/em&gt; parameter. If multiple 
  MergeUsing names are given, all must be identical for a merge event 
  to occur. &lt;/p&gt;
&lt;p&gt;When &lt;em&gt;MergeBehavior&lt;/em&gt; is set to &amp;quot;KeepFirst&amp;quot;, the properties 
  of merged data records are appended in the form of an array, unless the &lt;em&gt;PrefixUsingProperty 
  &lt;/em&gt;parameter is set to prepend each property name on each data item. This 
  is often useful when merging multiple data files with a &lt;em&gt;SourceTag&lt;/em&gt; parameter 
  (available in many readers). &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See Also: &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt;: Merges records based on identical molecular structures.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records that contain the properties being used for merging</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records that do not contain the properties being used for merging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>5.0.0.103</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>6</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>newtext := &apos;&apos;;

for #i in 1 .. numvalues(Text) loop
	newtext .= &apos;####  &apos; . SourceTag[#i] . &quot;  ###\n&quot;;
	newtext .= Text[#i] . &quot;\n&quot;;
end loop;

keep(&apos;newtext&apos;);

if @&apos;Embed External Scripts&apos; then
	@ExternalScript := newtext;
end if;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Condense scripts into one</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Executes PilotScript to modify data records.</sci:value>
														<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>7</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.TextWriter.1">
												<sci:component name="Text Writer" version="2">
													<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The filename for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>IfFileExists</sci:member>
														<sci:member>CharacterEncoding</sci:member>
														<sci:value>$(Rinput2file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What to do if the given destination file already exists</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org/&apos;)&quot;&gt;http://www.unicode.org/&lt;/a&gt;&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">ANSI</sci:legalval>
														<sci:legalval>UTF-8</sci:legalval>
														<sci:legalval>Unicode</sci:legalval>
														<sci:legalval>Unicode big endian</sci:legalval>
													</sci:arg>
													<sci:arg name="Delimiter Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Text that should preceed each record</sci:help>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Any text to be included after each record</sci:help>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Binary</sci:member>
														<sci:member>PropertyNames</sci:member>
														<sci:member>IncludePropertyNames</sci:member>
													</sci:arg>
													<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>List of properties to write (separated by commas). &quot;*&quot; indicates to write all properties.</sci:help>
														<sci:value>*</sci:value>
													</sci:arg>
													<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Display the name of each property along with its values</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Open the file in binary mode to output non-textual information</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Sep 07 14:08:04 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Text Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -470</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Formats and writes textual data records to a file.</sci:value>
														<sci:value>&lt;p&gt;Data records are formatted as text written to disk as a &lt;i&gt;Destination&lt;/i&gt; 
  file. You can specify how to separate the data records. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited 
  Text Writer&quot;. To write a file formatted with one record per row with delimiters 
  between the data use the &quot;Delimited Text Writer&quot;.&lt;/p&gt;</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.5.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>8</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>srand();
@RplotPrefix := &apos;Rplot&apos; . floor(rand() * 10000000);

@ScriptPrefix := &apos;
SpecialDoubleValueStrings &lt;- c(&quot;NA&quot;, &quot;NaN&quot;, &quot;Inf&quot;, &quot;-Inf&quot;)
FactorOrNumber &lt;- function(vec)
{
	# Heuristic to see if vec is numeric but with some non-numeric values
	# Rule:
	# First trim any pre-existing NAs
	# Then if there is only 1 level in the non-numeric elements, assume that string
	# is the NA marker and the vector is actually numeric; Alternatively, 
	# if the only non-numeric values lie in the set {&quot;NA&quot;, &quot;NaN&quot;, &quot;-Inf&quot;, &quot;Inf&quot;}, treat vector as numeric;
	# otherwise, leave it as a factor.
	if (is.factor(vec))
	{
		vecNoNA &lt;- na.omit(vec)
		vecnum &lt;- suppressWarnings(as.numeric(levels(vecNoNA))[vecNoNA])
		vecNumeric &lt;- vecNoNA[!is.na(vecnum), drop=TRUE]		
		vecNonNumeric &lt;- vecNoNA[is.na(vecnum), drop=TRUE]

		if ((length(levels(vecNonNumeric)) == 1 &amp;&amp; length(vecNumeric) &gt; 1) || 
			 !any(is.na(match(vecNonNumeric, SpecialDoubleValueStrings))))
		{
			vec &lt;- suppressWarnings(as.numeric(levels(vec))[vec])
		}
	}
	
	vec
}
# Convert factors that should be numbers back to numbers.
cleanRdata &lt;- function(x)
{
	if (!is.null(x))
	{
		for (ii in 1:ncol(x))
		{	
			if (is.factor(x[[ii]]))
				x[[ii]] &lt;- FactorOrNumber(x[[ii]])
		}
	}
	
	x
}

$(InputFrame) &lt;- NULL
try($(InputFrame) &lt;- read.delim(&quot;$(Rinput1file)&quot;, comment.char=&quot;&quot;, check.names=FALSE))

# Use the following statement to turn factors that &quot;should&quot; be numeric
# back to numeric variables:
# $(InputFrame) &lt;- cleanRdata($(InputFrame))

attach($(InputFrame))
png(filename = &quot;$(RDir)/&apos; . @RplotPrefix . &apos;%03d.png&quot;, width = $(RPlotWidth), height = $(RPlotHeight))

$(RParScript)
&apos;;

@ScriptSuffix := &apos;
dev.off()

try(write.table(data.frame($(InputFrame), check.names=FALSE), file=&quot;$(Routput1file)&quot;, sep=&quot;\t&quot;, col.names=TRUE, row.names=FALSE, quote=FALSE))
if (sum(ls() == &quot;$(ResultsFrame)&quot;) == 1)
{
    write.table(data.frame($(ResultsFrame), check.names=FALSE), file=&quot;$(Routput2file)&quot;, sep=&quot;\t&quot;, col.names=TRUE, row.names=FALSE, quote=FALSE)
}
&apos;;

if trim(@&apos;R Functions Source&apos;) ne &apos;&apos; then
	if @&apos;Embed External Scripts&apos; then
		@ScriptPrefix .= &apos;

$(ExternalScript)
&apos;;
	else
		@ScriptPrefix .= &apos;

source(&quot;$(Rinput2file)&quot;)
&apos;;
	end if;
end if;

</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Define script prefix and suffix</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>9</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedWriter.1">
												<sci:component name="Delimited Text Writer" version="2">
													<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz to the filename. </sci:help>
														<sci:value>$(Rinput1file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What to do if the given file already exists.</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.)</sci:help>
														<sci:legalval selected="true">Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
													</sci:arg>
													<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The delimiter to use between multiple value on a single property.  If None, 
then the multiple values are separated into their own columns.</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>What text to output when data for a given column is not present
  (leave empty enter text of choice)</sci:help>
													</sci:arg>
													<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to output column names</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to output a row which includes the column types</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>SpotfireFormat</sci:legalval>
														<sci:legalval>NDIFormat</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Includes the number of the record as the first
field for each record.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:18 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Write Input Data for R</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -1170</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a text file, separating the individual fields with a specified delimiter character. </sci:value>
														<sci:value>Writes data records to a text file, separating the records with a new line and the individual fields within a record with the character specified in the &apos;Delimiter&apos; character.  The property names for the fields will be stored as the first line of the file.

&apos;MultipleValueDelimiter&apos; controls properties with more than one value. If None, then they are written as multiple fields (e.g., prop[1], prop[2] ...). Else, they are written into a single value separated by the chosen delimiter.

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.SeparateValues.1">
												<sci:component name="Unmerge Data" version="2">
													<sci:arg name="PropertyNames" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The names of the one or more properties to separate and return as separate data records.  If no property names are given, then all properties with
multiple values will be unmerged. If multiple properties are unmerged, the number of unmerged records is the number of values of a property with the maximum number of values.</sci:help>
													</sci:arg>
													<sci:arg name="Additional Options" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>Large Data Records</sci:member>
														<sci:member>Unmerge ByteArrayValues</sci:member>
													</sci:arg>
													<sci:arg name="Large Data Records" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each of your records are particularly large, setting this parameter to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Unmerge ByteArrayValues" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>ByteArrayValues are property representations of binary data.  Although they are technically arrays of bytes and could be unmerged, in most cases these properties should be treated as a single value rather than an array of bytes.  This parameter is available to restore the previous odd behavior, if desired.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Sep 13 07:08:33 2016</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Unmerge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Unmerge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>GENERATORNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -1345</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Separates data records containing array properties into individual records with one array value per record</sci:value>
														<sci:value>&lt;p&gt;Each incoming data record with more than one value for the property or properties specified by &lt;i&gt;PropertyNames&lt;/i&gt; is duplicated for each of the values.  For example, an input data record with three values will generate three output data records.  Each output record will contain one of the values for the &lt;i&gt;PropertyNames&lt;/i&gt; property, and all other properties will be identical.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Large Data Records&lt;/i&gt;: When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each data record is particularly large, setting &lt;i&gt;Large Data Records&lt;/i&gt; to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.&lt;/p&gt;


&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If no property names are given, then all properties with multiple values are unmerged.  In this case, unexpected occurrences of arrays in a property will cause unintentional unmerge operations.  Try to specify a value for &lt;i&gt;PropertyNames&lt;/i&gt; if possible.&lt;/li&gt;
&lt;li&gt;If multiple unmerge properties are specified, the number of data records that result from unmerging a given incoming data record is equal to the number of values of the unmerge property that has the most values.  That is, if two unmerge properties, &quot;A&quot; and &quot;B&quot; are specified where A has 5 values and B has 7 values, then 7 data records will result.  The first 5 records will contain, in order, the 5 values of A.  For the last two records, A will be undefined.  All other properties will be duplicated on each record.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>30</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Unmerge Data</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">17.1.0.119</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.DataCacheIO.1">
												<sci:component name="Cache Writer" version="2">
													<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>Append</sci:member>
														<sci:member>Scope</sci:member>
														<sci:value>Temp</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to write to the cache.</sci:help>
													</sci:arg>
													<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
														<sci:legalval selected="true">Job Only</sci:legalval>
														<sci:legalval>User Only</sci:legalval>
														<sci:legalval>All Users</sci:legalval>
													</sci:arg>
													<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
														<sci:member>JoinUsing</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:member>JoinPropertyType</sci:member>
														<sci:member>JoinUsingListType</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="JoinUsing" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>Additional parameters to control the component behavior.</sci:help>
														<sci:member>Write Globals</sci:member>
														<sci:member>Enable Compression</sci:member>
														<sci:member>Password</sci:member>
													</sci:arg>
													<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
														<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Enable Compression" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
														<sci:help>&lt;p&gt;Specifies if data written to disk should be compressed.&lt;/p&gt;
&lt;b&gt;Note:&lt;b&gt; Starting with 2017 R2, compression uses the LZ4 compression algorithm which is very fast.  Turning off compression will typically result in 6 to 10 times increased disk usage with little or no improvement in performance.  You should test your own data for comparison.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>&lt;p&gt;
An optional password to assign to the cache content. Once set, the password must be used to read data back from the cache. It is useful to control access to a new public data cache.
&lt;/p&gt;
&lt;p&gt;
For an existing cache, set the password to be able to overwrite or append to the content.
&lt;/p&gt;
&lt;p&gt;
Note that the user who writes a password-protected cache does not require a password to access or overwrite the content.
&lt;/p&gt;
</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
													</sci:arg>
													<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
														<sci:legalval selected="true">Writer</sci:legalval>
														<sci:legalval>Reader</sci:legalval>
														<sci:legalval>Writer/Reader</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Aug 28 09:11:28 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Write cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -1545</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DATABASENODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Cache Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a named cache</sci:value>
														<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;li&gt;A password may be assigned to a new cache to control read and write access to the content.&lt;/p&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1563</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>33</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Run R Script" version="2">
													<sci:arg name="RScriptExpression" type="ExpressionType" required="true" visibility="visible" multi="false">
														<sci:help>Expression defining the RScript property containing the script to be sent to R.</sci:help>
														<sci:value>RScript := &apos;
# Script prefix:
$(ScriptPrefix)
# End of prefix

# Script body:
&apos; . @Script . &apos;
# End of body

# Script suffix:
$(ScriptSuffix)
&apos;
</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>EnvOverride</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 30 11:47:31 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Run R Script</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{52541793-A244-485C-9B70-DC1DDD44DD6F}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -1895</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Execute R script, optionally displaying script and stdout</sci:value>
														<sci:value>Executes in R a script defined by RScriptExpression.  This is an internal component used by other R Statistics components.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1362</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>11</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R Script</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>@ShowRScript = True</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Show R script?</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FilterNode</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
																<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Notepad Viewer" version="2">
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of records to view.</sci:help>
															</sci:arg>
															<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Optional name of the document</sci:help>
																<sci:value>R_Script</sci:value>
															</sci:arg>
															<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
																<sci:member>CharacterEncoding</sci:member>
																<sci:member>HierarchyDepth</sci:member>
															</sci:arg>
															<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Indicates the character set that will be used within the file.
 
UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.
 
ANSI specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.
 
&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.
 
For more information about each of these encoding styles, go to http://www.unicode.org/</sci:help>
																<sci:legalval>ANSI</sci:legalval>
																<sci:legalval selected="true">UTF-8</sci:legalval>
																<sci:legalval>Unicode</sci:legalval>
																<sci:legalval>Unicode big endian</sci:legalval>
															</sci:arg>
															<sci:arg name="HierarchyDepth" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>Controls the maximum depth within hierarchical data records to display node and property information.  No hierarchical information will be displayed if depth is set to -1.  If no value is set, the default is 0.</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
																<sci:value>ClientFilePath,ServerFilePath</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>When the network runs, processes once or until done for each process call</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
																<sci:legalval>Cant Replace With Copy</sci:legalval>
																<sci:legalval>Cant Open</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Sep 12 07:46:27 2016</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Notepad Viewer</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ViewerNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{522F4A0B-DD0C-4C26-83DD-29A7B09F4461}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -95</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Displays data records in the Windows Notepad application</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>17.1.0.119</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Viewers\Notepad Viewer</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>$(RScriptExpression)</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
																<sci:value>@EnvOverride := &apos;LD_LIBRARY_PATH=&apos;;
if @R_LD_LIBRARY_PATH is defined then
	@EnvOverride .= @R_LD_LIBRARY_PATH;
end if;
</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>R script expression</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -395</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Executes PilotScript to modify data records.</sci:value>
																<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.1.1.400</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextWriter.1">
														<sci:component name="Text Writer" version="2">
															<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
																<sci:value>$(Rscriptfile)</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>What to do if the given file already exists.</sci:help>
																<sci:legalval selected="true">Overwrite</sci:legalval>
																<sci:legalval>Append</sci:legalval>
																<sci:legalval>Halt</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>List of which properties (separated by commas) will be written
  * means all properties</sci:help>
																<sci:value>*</sci:value>
															</sci:arg>
															<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies whether the name of each property 
is displayed along with its value(s)</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to preceed each record</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to be included after each record</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether to open the file in binary mode for outputting nontext information</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue May 18 12:07:19 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Write RScript</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DocumentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -395</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Writer</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Data records are formatted as text and written to a file. </sci:value>
																<sci:value>Data records are formatted as text written to disk as a &apos;Destination&apos; file.  Separation between data records can be indicated with user specified characters.
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited Text Writer&quot;. To write a file formatted with one record per row with delimiters between the data use the &quot;Delimited Text Writer&quot;&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.0.5.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextWriter.1">
														<sci:component name="Text Writer" version="2">
															<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
																<sci:value>$(JobDir)\Rscript.R</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>What to do if the given file already exists.</sci:help>
																<sci:legalval selected="true">Overwrite</sci:legalval>
																<sci:legalval>Append</sci:legalval>
																<sci:legalval>Halt</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>List of which properties (separated by commas) will be written
  * means all properties</sci:help>
																<sci:value>*</sci:value>
															</sci:arg>
															<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies whether the name of each property 
is displayed along with its value(s)</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to preceed each record</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to be included after each record</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether to open the file in binary mode for outputting nontext information</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue May 18 12:07:19 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Write RScript</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DocumentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -720</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Writer</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Data records are formatted as text and written to a file. </sci:value>
																<sci:value>Data records are formatted as text written to disk as a &apos;Destination&apos; file.  Separation between data records can be indicated with user specified characters.
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited Text Writer&quot;. To write a file formatted with one record per row with delimiters between the data use the &quot;Delimited Text Writer&quot;&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.0.5.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.RunProgram.1">
														<sci:component name="Run R" version="2">
															<sci:arg name="CommandLine" type="TextType" required="true" visibility="visible" multi="false">
																<sci:help>Command line for application or file to execute on the server machine.</sci:help>
																<sci:value>&quot;$(R_exe)&quot; --no-save --no-restore &lt; &quot;$(Rscriptfile)&quot; &gt; &quot;$(Rstdoutfile)&quot;</sci:value>
															</sci:arg>
															<sci:arg name="WaitForExit" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether or not to wait for the program to finish before returning from the process call.  This parameter must be set to True for StdinProperty, StdoutProperty, StderrProperty, or PropertyForExitStatus to function.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyForExitStatus" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name to hold the value of the program exit status code. Denote a global property with a leading @ character.
Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																<sci:value>@RExitStatus</sci:value>
															</sci:arg>
															<sci:arg name="StdinProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that holds the desired value of the program&apos;s standard input (stdin). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
															</sci:arg>
															<sci:arg name="StdoutProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that will hold the program&apos;s standard output (stdout). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
															</sci:arg>
															<sci:arg name="StderrProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that will hold the program&apos;s standard error (stderr). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																<sci:value>@stderr</sci:value>
															</sci:arg>
															<sci:arg name="Environment" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
																<sci:metaproplist>
																	<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAJeAlNwZWNpZmllcyBhZGRpdGlvbmFsIGVudmlyb25tZW50IHZhcmlhYmxlIHNldHRpbmdzIHRoYXQgd2lsbCBiZSB1c2VkIGJ5IHRoZSBzcGF3bmVkIHByb2Nlc3MuICBTcGVjaWZ5IGVhY2ggc2V0dGluZyBvbiBhIGxpbmUgYnkgaXRzZWxmIGFzICJ2YXJpYWJsZT1uYW1lIi4gIFRoZSBzcGF3bmVkIHByb2Nlc3Mgd2lsbCBpbmhlcml0IHRoZSBleGlzdGluZyBlbnZpcm9ubWVudCBvZiB0aGUgc2Npc3ZyIHByb2Nlc3MsIGFuZCBhbnkgc2V0dGluZ3MgaGVyZSB3aWxsIGJlIGFwcGVuZGVkIHRvIHRoZSB2YXJpYWJsZSBsaXN0LiAgVG8gbWFrZSB1c2Ugb2YgYW4gZXhpc3RpbmcgdmFyaWFibGUsIHN1cnJvdW5kIHRoZSB2YXJpYWJsZSBuYW1lIHdpdGggcGVyY2VudCBzaWducyAoZS5nLiAiUEFUSD1jOlxteWRpcjslUEFUSCUiKSAgTm90ZSB0aGF0IHRoaXMgc3ludGF4IHNob3VsZCBiZSB1c2VkIHdpdGggYm90aCBXaW5kb3dzIGFuZCBMaW51eCBzZXJ2ZXJzLiAgRHVlIHRvIE9TIGRlc2lnbnMsIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgY2FzZSBpbnNlbnNpdGl2ZSBvbiBXaW5kb3dzIHNlcnZlcnMgYW5kIGNhc2Ugc2Vuc2l0aXZlIG9uIExpbnV4IHNlcnZlcnMuJFRleHRUeXBlAAgAAAABAQABAAQA/AAAAAAAAAAAADBFbnZpcm9ubWVudAPMU8+7BAA=</sci:propval>
																	<sci:propval name="SCI_InitializeUsingOrigType">TextType</sci:propval>
																	<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
																	<sci:propval name="SCI_EvalOnInitType">TextType</sci:propval>
																</sci:metaproplist>
																<sci:help>Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the scisvr process, and any settings here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;)  Note that this syntax should be used with both Windows and Linux servers.  Due to OS designs, environment variables are case insensitive on Windows servers and case sensitive on Linux servers.</sci:help>
																<sci:value>EnvOverride</sci:value>
															</sci:arg>
															<sci:arg name="UseCommandInterpreter" type="BoolType" required="false" visibility="hidden" multi="false">
																<sci:help>Whether or not to add &quot;cmd.exe /c&quot; (or &quot;/bin/sh -c&quot; on Linux servers) to the command line.  This causes the command line to be interpreted through the operating systems standard command shell allowing the use of redirection specifiers such as &apos;&gt;&apos; and &apos;&lt;&apos; and piping via &apos;|&apos;.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Componet Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/rstats</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Dec 11 15:47:33 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8611ED9C-47D2-4EB1-A98B-CFB894E3840F}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Run R</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Run Program</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -1020</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Runs a Windows command line application on the server machine.</sci:value>
																<sci:value>&lt;p&gt;Define the command line by entering text as you would in a command prompt window. The component includes facilities for looking up a program name in the Windows registry. It can interpret a program name as a ProgID, such as &quot;InternetExplorer.Application&quot;, or as a shell command, such as &quot;IsisServer&quot;, or as a document to load into an associated program, such as &quot;c:\spreadsheet.xls&quot;.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;CommandLine&lt;/i&gt;: The command that the component will run. The correct syntax is the full command line exactly as you would type it in a shell command window. The first space- or quote-delimited item of the command line can be a ProgId, such as &quot;InternetExplorer.Application&quot;. This starts up Internet Explorer (IE) without having to specify the path to IE explicitly. Shell command associations are also supported, so &quot;IsisServer&quot; will start Isis Draw. Finally, there is support for file associations, so the path &quot;D:\docs\notes.doc&quot; will start Microsoft Word and load the specified document.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;WaitForExit&lt;/i&gt;: When TRUE, the data pipeline is blocked until the command has completed.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;PropertyForExitStatus&lt;/i&gt;: Allows you to assign the exit status of the command to a global property or to a data record property. Use either a global or local property reference, such as @status or status.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;UseCommandInterpreter&lt;/i&gt;: When True, parses the command line through the command interpreter on the remote server (with a shell such as csh or bash or the windows interpreter cmd.exe). In particular, this needs to be set to True if the CommandLine utilizes standard output or input (such as cmd.exe /c &amp;quot;c:\Program Files\R\rterm.exe&amp;quot; &amp;quot;0&amp;lt;$(CommandFile)&amp;quot;).&lt;/p&gt;
&lt;p&gt;&lt;i&gt;StdinProperty, StdoutProperty, and StderrProperty&lt;/i&gt;: Allows you to redirect standard communications to global properties or to data record properties. Use either a global or local property reference, such as @stdin or stdin.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Environment&lt;/i&gt;: Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the PipelinePilot process, and any settings defined here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;).  Since this will run on the Windows client, all environment variables are case insensitive.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt; If your command line includes a file path, create a new parameter for the component, of type URL, so the user can enter the path. Then use a token replacement in the CommandLine to pick up the value. For example: Notepad.exe &quot;$(SciTegicRoot)\$(Path)&quot;. &lt;/li&gt;
&lt;li&gt;When the component is separated from any other pipeline, the command line is run just once.&lt;/li&gt; &lt;li&gt;You can add an input or output pass port to the component, to integrate it with a pipeline. If there is an output port, but no input port, the command is run once and a single new record is generated. If there is an input port, then the command is run once for each data record passed in.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.2.0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Display R stdout" version="2">
															<sci:arg name="ControlProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>ControlProperty</sci:help>
																<sci:value>@ShowRStdOutput</sci:value>
															</sci:arg>
															<sci:arg name="Filename" type="StringType" required="true" visibility="visible" multi="false">
																<sci:value>$(Rstdoutfile)</sci:value>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/rstats</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 30 11:47:39 2017</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Display R stdout</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ViewerNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{2A8352DC-F36E-4D10-B8DE-EFF7E019C441}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -1320</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Display R standard output</sci:value>
																<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>18.1.0.1362</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Modified</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="2" to="0" type="true"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="2" to="6" type="true"/>
													<sci:version iVal="1"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>fileexists(&quot;$(Routput1file)&quot;)</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>InputFrame file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -2245</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>12</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedReader.1">
												<sci:component name="Delimited Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file(s) or URL source to read</sci:help>
														<sci:value>$(Routput1file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties that are to be retained in each data record output
by the reader component. If the value is left blank, then all properties
are retained. If the parameter contains the value &quot;-&quot; (minus sign), then
no properties are to be retained.</sci:help>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character which separates the fields in the file.
  To determine automatically use:   FigureOut  
  For &quot;tab&quot; delimited type:              tab
  For &quot;space&quot; delimited type:         space
  For &quot;comma&quot; delimited type:       comma
  For &quot;colon&quot; delimited type:          colon</sci:help>
														<sci:legalval>FigureOut</sci:legalval>
														<sci:legalval selected="true">Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
													</sci:arg>
													<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>When TRUE, property names are taken
from the first line of data in the file.  When
FALSE, properties will be called: Column1,
Column2, etc. by default</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records.  A property 
called &apos;SourceTag&apos; will be created and will hold the value indicated:
   None - no SourceTag property will be created, and any existing will be removed
   Filename - the name of the file read
   FilenameAndExtension - the name of the file read with it&apos;s file extension
   FullFilename - the name of the file read including the directory path
   Number - when multiple files are read in this component, they are numbered 1,2,3...
   Letter - when multiple files are read in this component, they are lettered A, B, C...
   KeepCurrent - keep the current value of SourceTag</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>Specifies the character or string used to represent an 
undefined string in the file being read</sci:help>
													</sci:arg>
													<sci:arg name="AllLines" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>When TRUE, all lines of the text file become
part of a single data record.  The values for
a column from each row become multiple [array]
values for the property (column).</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to trim whitespace from the left and right ends of each value</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:14 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R output</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -2245</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads text files containing one record per line with data separated by delimiters.</sci:value>
														<sci:value>Reads textual data from one or more files that are formated with a single record per line. Individual data items on each line should be separated by a delimiter character (e.g. space, comma, tab). The first line is treated as column names for defining property names. If column names are not declared, they are given standard names of Column1, Column2, etc. 

This component should be used to read comma delimited text files from Excel (.csv).

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>13</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>for #ii in 1 .. numproperties() loop
	/* Convert integers to Long only if they won&apos;t overflow; convert all other numbers to Double. */
	if isinteger(ithproperty(#ii)) and strlength(ithProperty(#ii)) &lt; 10 then
		changepropertytype(ithproperty(#ii), &apos;Long&apos;);
	elsif isnumber(ithproperty(#ii)) then
		changepropertytype(ithproperty(#ii), &apos;Double&apos;);
	end if;
end loop;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Convert numbers</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -2245</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>14</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DataCacheIO.1">
												<sci:component name="Cache Reader" version="2">
													<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The name of the cache to read, which should refer to a cache already written in the protocol containing this component.  Use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to provide an ID for temporary caches, then refer to the temporary ID with $(globalname)</sci:help>
														<sci:member>RangeMinimum</sci:member>
														<sci:member>RangeMaximum</sci:member>
														<sci:member>Scope</sci:member>
														<sci:member>JobId</sci:member>
														<sci:value>Temp</sci:value>
													</sci:arg>
													<sci:arg name="RangeMinimum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The lower limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means start reading at the first cached record.
               </sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="RangeMaximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The upper limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means read to the end of the set of cached records.
               </sci:help>
													</sci:arg>
													<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to the same values as were used in the &lt;/i&gt;Cache Writer&lt;/i&gt;.
			</sci:help>
														<sci:legalval selected="true">Job Only</sci:legalval>
														<sci:legalval>User Only</sci:legalval>
														<sci:legalval>All Users</sci:legalval>
													</sci:arg>
													<sci:arg name="DeleteWhenFinished" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>If True, then delete the cache when finished reading</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Additional parameters to control the component behavior.</sci:help>
														<sci:member>Read Globals</sci:member>
														<sci:member>Password</sci:member>
													</sci:arg>
													<sci:arg name="Read Globals" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;Defines if the component should read globals from the cache.&lt;/p&gt;
&lt;p&gt;Any globals read from the cache will overwrite the existing globals.&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>&lt;p&gt;Enter a password, if one was assigned when the cache was written.
&lt;/p&gt;
&lt;p&gt;Note that a password is not required, if the current user originally wrote the password-protected cache.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="JobId" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>If the scope is set to &lt;I&gt;Job Only&lt;/I&gt;, then this is the job that owns the cache, if it is different from this job. The job must have been run by the same user as this job. If not specified, then the current job is assumed to contain the cache.
               </sci:help>
														<sci:enabledscript>parameter(&apos;Scope&apos;) eq &apos;Job Only&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
													</sci:arg>
													<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
														<sci:legalval>Writer</sci:legalval>
														<sci:legalval selected="true">Reader</sci:legalval>
														<sci:legalval>Writer/Reader</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Aug 28 09:15:02 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Read cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -2620</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DATABASENODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Cache Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data records from a named cache</sci:value>
														<sci:value>&lt;p&gt;A data cache is a place where you can temporarily store data records without losing information.  This component is used to read data from a named cache created by the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; component.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache to read.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;This component is typically used as a mechanism for retrieving temporary data stored within a protocol.&lt;/li&gt;
&lt;li&gt;To access a cache created in a different protocol, use &lt;i&gt;Scope&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To join data from a cache to streaming data records use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To list available caches use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-7077-05B44C3D08E6}&apos;)&quot;&gt;List Caches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To create a temporary cacheID use &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1563</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>34</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Cache Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge All Data" version="2">
													<sci:arg name="Merge Behavior" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>Options controlling the details of how properties are merged together</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Provides fine control over how multiple values are treated when merging data records together.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;This string is used during append to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If defined, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first data record is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When multiple values for a property are retained, the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual data records included in the resulting merged record. This value is simply the total number of input records.&lt;/p&gt;
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
														<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:value>N/A</sci:value>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Mar 11 13:00:58 2011</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge All Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JOINNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C00EFC73-DE7C-4932-AFD6-55D1DFA7792C}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -2620</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Merges properties of all input data records into a single output data record</sci:value>
														<sci:value>&lt;p&gt;Performs faster than &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt; for the special case where all input records are to be merged into one.
&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties are handled.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge data records that share identical values of a specified property, use &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.&lt;/p&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records to be merged</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>A single data record containing all merged properties of the input records</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>8.4.5.20</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>35</sci:value>
													</sci:arg>
													<sci:arg name="Merge All" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Internal parameter indicating that all data records are to be merged into one, irrespective of the value of the &lt;i&gt;MergeUsing&lt;/i&gt; Property.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge All Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>fileexists(&quot;$(Routput2file)&quot;)</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>ResultsFrame (summary) file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>15</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedReader.1">
												<sci:component name="Delimited Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file(s) or URL source to read</sci:help>
														<sci:value>$(Routput2file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data items to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties that are to be retained in each data record output
by the reader component. If the value is left blank, then all properties
are retained. If the parameter contains the value &quot;-&quot; (minus sign), then
no properties are to be retained.</sci:help>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character which separates the fields in the file.
  To determine automatically use:   FigureOut  
  For &quot;tab&quot; delimited type:              tab
  For &quot;space&quot; delimited type:         space
  For &quot;comma&quot; delimited type:       comma
  For &quot;colon&quot; delimited type:          colon</sci:help>
														<sci:legalval>FigureOut</sci:legalval>
														<sci:legalval selected="true">Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
													</sci:arg>
													<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>When TRUE, property names are taken
from the first line of data in the file.  When
FALSE, properties will be called: Column1,
Column2, etc. by default</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records.  A property 
called &apos;SourceTag&apos; will be created and will hold the value indicated:
   None - no SourceTag property will be created, and any existing will be removed
   Filename - the name of the file read
   FilenameAndExtension - the name of the file read with it&apos;s file extension
   FullFilename - the name of the file read including the directory path
   Number - when multiple files are read in this component, they are numbered 1,2,3...
   Letter - when multiple files are read in this component, they are lettered A, B, C...
   KeepCurrent - keep the current value of SourceTag</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>Specifies the character or string used to represent an 
undefined string in the file being read</sci:help>
													</sci:arg>
													<sci:arg name="AllLines" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>When TRUE, all lines of the text file become
part of a single data record.  The values for
a column from each row become multiple [array]
values for the property (column).</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Whether to trim whitespace from the left and right ends of each value</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue May 18 12:07:14 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R output</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads text files containing one record per line with data separated by delimiters.</sci:value>
														<sci:value>Reads textual data from one or more files that are formated with a single record per line. Individual data items on each line should be separated by a delimiter character (e.g. space, comma, tab). The first line is treated as column names for defining property names. If column names are not declared, they are given standard names of Column1, Column2, etc. 

This component should be used to read comma delimited text files from Excel (.csv).

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.5.0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>16</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>for #ii in 1 .. numproperties() loop
	/* Convert integers to Long only if they won&apos;t overflow; convert all other numbers to Double. */
	if isinteger(ithproperty(#ii)) and strlength(ithProperty(#ii)) &lt; 10 then
		changepropertytype(ithproperty(#ii), &apos;Long&apos;);
	elsif isnumber(ithproperty(#ii)) then
		changepropertytype(ithproperty(#ii), &apos;Double&apos;);
	end if;
end loop;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Convert numbers</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.1.400</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>17</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Data to Fail Port" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:value>/* Send all records to the fail port */
false;</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Adds any properties calculated in the component to a molecule&apos;s property list</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When True, controls the exit port used for each data record by evaluating the final expression (or only one) listed in the &quot;Expression&quot; parameter.
  -Pass (green) port: When expression is True
  -Fail (red) port: When expression is False
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:value>ComponentReturnsFail</sci:value>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Sep 01 17:06:37 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Data to Fail Port</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{A718CDEE-EE7D-4B75-9346-C3780D347090}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Directs records to the Fail port for use in subprotocol building.</sci:value>
														<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Fail port of the subprotocol.
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>All data records</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.5.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>18</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Fail Port</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.SortData.1">
												<sci:component name="Sort Data" version="2">
													<sci:arg name="Sort By" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
														<sci:help>Defines properties for sorting. Use this parameter to add, remove and reorder properties to be used for sorting.</sci:help>
														<sci:member>Property 1</sci:member>
														<sci:member>Property 2</sci:member>
														<sci:member>Property 3</sci:member>
													</sci:arg>
													<sci:arg name="Property 1" type="PropertyNameType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The property to sort by.</sci:help>
														<sci:member>Property 1 Sort Order</sci:member>
														<sci:member>Property 1 Sort As</sci:member>
														<sci:value>Conc1</sci:value>
													</sci:arg>
													<sci:arg name="Property 1 Sort Order" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to sort in ascending or descending order.</sci:help>
														<sci:legalval selected="true">Ascending</sci:legalval>
														<sci:legalval>Descending</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 1 Sort As" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
														<sci:legalval>Numbers</sci:legalval>
														<sci:legalval>Text</sci:legalval>
														<sci:legalval>Case Sensitive Text</sci:legalval>
														<sci:legalval selected="true">Text Containing Numbers</sci:legalval>
														<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
														<sci:legalval>Dates</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 2" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>The property to sort by.</sci:help>
														<sci:member>Property 2 Sort Order</sci:member>
														<sci:member>Property 2 Sort As</sci:member>
													</sci:arg>
													<sci:arg name="Property 2 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort in ascending or descending order.</sci:help>
														<sci:legalval selected="true">Ascending</sci:legalval>
														<sci:legalval>Descending</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 2 Sort As" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">Numbers</sci:legalval>
														<sci:legalval>Text</sci:legalval>
														<sci:legalval>Case Sensitive Text</sci:legalval>
														<sci:legalval>Text Containing Numbers</sci:legalval>
														<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
														<sci:legalval>Dates</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 3" type="PropertyNameType" required="false" visibility="visible" multi="false">
														<sci:help>The property to sort by.</sci:help>
														<sci:member>Property 3 Sort Order</sci:member>
														<sci:member>Property 3 Sort As</sci:member>
													</sci:arg>
													<sci:arg name="Property 3 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort in ascending or descending order.</sci:help>
														<sci:legalval selected="true">Ascending</sci:legalval>
														<sci:legalval>Descending</sci:legalval>
													</sci:arg>
													<sci:arg name="Property 3 Sort As" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">Numbers</sci:legalval>
														<sci:legalval>Text</sci:legalval>
														<sci:legalval>Case Sensitive Text</sci:legalval>
														<sci:legalval>Text Containing Numbers</sci:legalval>
														<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
														<sci:legalval>Dates</sci:legalval>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>You can provide this to only return this number of records. This is useful when you only want to see the &quot;best&quot; record or records.</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Mar 27 13:39:02 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>/* Start from &apos;Property 1&apos; since it must be defined.
   Keep this following line for the client auto-rename to use.
	 Parameter(&apos;Property 1&apos;), 
     Parameter(&apos;Property 2&apos;), 
	 Parameter(&apos;Property 3&apos;)
	 Parameter(&apos;Property 4&apos;)
	 Parameter(&apos;Property 5&apos;)
 */
if (trim(strlength(parameter(&apos;Property 1&apos;, 2))) &gt; 0) then
	#name := &quot;Sort on &quot; . trim(parameter(&apos;Property 1&apos;, 2));
	
	/* Get other sort properties that have values */
	#paramKey := &apos;Property &apos;;
	#count := 2;
	#paramName := #paramKey . #count;

	while (#count &lt;= 5 and parameter(#paramName, 2) is defined)
	loop
		if (strlength(parameter(#paramName, 2)) &gt; 0) then		
			#name := #name . &apos;, &apos;;
			#name := #name . parameter(#paramName, 2);
		end if;
	
		#count++;
		#paramName := #paramKey . #count;
	end loop;
	#name;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Sort Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{BC934106-6EA5-44e1-93C3-8787DECA9D15}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Sorts data records according to one or more properties</sci:value>
														<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sort By&lt;/i&gt; parameter to add more properties for sorting.&lt;/p&gt;

&lt;p&gt;When multiple properties are used by sorting, the property values of &lt;i&gt;Property 1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;Property 2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;Property 3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The order of sorting can be changed using &lt;i&gt;Sort Order&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;li&gt;Records containing Null or undefined &lt;i&gt;Sort By&lt;/i&gt; properties will be output to the Fail Port.
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records in sorted order</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records that do not contain the sort field(s)</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1396</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>32</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Sort Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge All Data" version="2">
													<sci:arg name="Merge Behavior" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>Options controlling the details of how properties are merged together</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Provides fine control over how multiple values are treated when merging data records together.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;This string is used during append to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If defined, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first data record is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When multiple values for a property are retained, the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual data records included in the resulting merged record. This value is simply the total number of input records.&lt;/p&gt;
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
														<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:value>N/A</sci:value>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="nevershow" multi="false">
														<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Mar 11 13:00:58 2011</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge All Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JOINNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C00EFC73-DE7C-4932-AFD6-55D1DFA7792C}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -2970</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Merges properties of all input data records into a single output data record</sci:value>
														<sci:value>&lt;p&gt;Performs faster than &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt; for the special case where all input records are to be merged into one.
&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties are handled.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge data records that share identical values of a specified property, use &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.&lt;/p&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records to be merged</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>A single data record containing all merged properties of the input records</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>8.4.5.20</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>31</sci:value>
													</sci:arg>
													<sci:arg name="Merge All" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Internal parameter indicating that all data records are to be merged into one, irrespective of the value of the &lt;i&gt;MergeUsing&lt;/i&gt; Property.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge All Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:value>fileexists(&quot;$(RDir)/$(RplotPrefix)001.png&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Plot file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.1.0.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>19</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>#fileindex := 1;
#nextfile := &quot;$(RDir)/$(RplotPrefix)001.png&quot;;
#nextplot := &quot;Plot1&quot;;

while fileexists(#nextfile) loop
	append(Filename, #nextfile);
	append(Plotname, #nextplot);
	++#fileindex;
	#nextfile := format(&apos;$(RDir)/$(RplotPrefix)%03d.png&apos;, #fileindex);
	#nextplot := &quot;Plot&quot; . #fileindex;
end loop;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Get all plot file names</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>20</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.SeparateValues.1">
												<sci:component name="Unmerge Data" version="2">
													<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of multi-valued property to separate and output as separate records. If multiple properties are given, they each must have the same number of values. If property names are not given, all properties with multiple values are unmerged.
</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jan 05 15:19:59 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Unmerge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Unmerge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>GeneratorNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Separates data records containing multiple values into multiple duplicate records each containing only one of the values.</sci:value>
														<sci:value>Each incoming data record with more than one value in the specified properties is duplicated for each of the multiple values. For example, a data object with three values generates three data objects, each with only one of the three values (but otherwise identical). 

If property names are not given, all properties with multiple values are unmerged. 

If multiple properties are unmerged, they must contain the same number of values.
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with multiple values for at least one property</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.3</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>21</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Unmerge Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Subprotocol" version="2">
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>Filename,Plotname</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jan 05 15:20:07 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read plotfile</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
														<sci:value>Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 

To define input and output ports, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm &apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.

Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm &apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.3</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Make Shortcut by Default</sci:legalval>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>22</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
																<sci:value>@Filename := Filename;
@Plotname := Plotname;</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
																<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Jan 05 15:19:58 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Put Filename into global</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Executes PilotScript to modify data records.</sci:value>
																<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.0.3</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextReader.1">
														<sci:component name="Text Reader" version="2">
															<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The file or URL source to read</sci:help>
																<sci:value>$(Filename)</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
																<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
															</sci:arg>
															<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Specifies the name of the property list to hold the block of text</sci:help>
																<sci:value>$(Plotname)</sci:value>
															</sci:arg>
															<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies which delimiting mechanism to use:

 - EndOfFile: All text is one record.
 - EndOfParagraph: Each paragraph becomes a separate record.
 - EndOfLine: Each line becomes a separate record.
 - DelimitText: Uses the parameters BeginningText and/or EndingText.

</sci:help>
																<sci:legalval selected="true">EndOfFile</sci:legalval>
																<sci:legalval>EndOfParagraph</sci:legalval>
																<sci:legalval>EndOfLine</sci:legalval>
																<sci:legalval>DelimitText</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
															</sci:arg>
															<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
																<sci:legalval selected="true">None</sci:legalval>
																<sci:legalval>Filename</sci:legalval>
																<sci:legalval>FilenameAndExtension</sci:legalval>
																<sci:legalval>FullFilename</sci:legalval>
																<sci:legalval>Number</sci:legalval>
																<sci:legalval>Letter</sci:legalval>
																<sci:legalval>KeepCurrent</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="hidden" multi="false">
																<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Nov 28 12:28:00 2005</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Read binary plot file</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -395</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DOCUMENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Reader</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Reads raw textual data.</sci:value>
																<sci:value>&lt;p&gt;Reads text files and creates a data record for each block of text. You can specify the delimiters 
  for the blocks. Each data record is stored in a single property.
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited 
  Text Reader&quot;. If the text file is formatted with one record per line, with the 
  data records separated by delimiters (such as Excel generated .csv file), use 
  the Delimited Text Reader instead. 

If delimit text is given, the text used to delimit must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.0.1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:value>numvalues($(Plotname)) &gt; 700</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Nov 28 12:27:58 2005</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Make sure plot is not empty</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FILTERNODE</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -395</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
																<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.0.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="1" to="2" type="true"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Tag Data" version="2">
													<sci:arg name="TagName" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of a new property to create to serve as a tag</sci:help>
														<sci:value>Tagged</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
														<sci:value>$(TagName) := true;</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)
</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
														<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jan 05 15:19:59 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Tag Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{BCF71EB2-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Tags each record with a given property name for later identification.</sci:value>
														<sci:value>A new property is created for each incoming data record, defined with the value &quot;True&quot;. Records tagged in this way can easily be identified in future components by evaluating whether the new property is defined. This is useful for marking a data stream prior to combining it with another stream for learning, substructure search, and other operations. An alternative method for tagging records is available in most file readers which can tag the records with a SourceTag. </sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records with the additional tag property</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.3</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>23</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Add Tag Property</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge Data" version="2">
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:value>Tagged</sci:value>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri May 30 08:21:34 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JOINNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Merges properties of all data records that share the same key property value into a single data record</sci:value>
														<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records that contain the properties being used for merging</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records that do not contain the properties being used for merging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.1.0.5</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>24</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>remove(&apos;Tagged&apos;);</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>remove tag</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1818 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>25</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="Data to Fail Port" version="2">
													<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
														<sci:legalval selected="true">LeaveData</sci:legalval>
														<sci:legalval>ClearData</sci:legalval>
														<sci:legalval>DeleteData</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>PassDataToPort</sci:value>
													</sci:arg>
													<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>the port to pass data to</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Data to Fail Port</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Evaluate Expression</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{A718CDEE-EE7D-4B75-9346-C3780D347090}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2106 -3320</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Directs records to the Fail port for use in subprotocol building.</sci:value>
														<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Fail port of the subprotocol.
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>All data records</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>4.0.4.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>26</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Fail Port</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@RExitStatus != 0</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Any errors?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -3695</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
														<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>27</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Display R stdout and halt protocol" version="2">
													<sci:arg name="ControlProperty" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>ControlProperty</sci:help>
														<sci:value>@ShowRStdOutput</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Oct 22 12:08:22 2014</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Display R stdout and halt protocol</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ViewerNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9E6F3C8B-E5AB-4d51-B5E5-C0F20559F6FF}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -3695</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Display R standard output</sci:value>
														<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>9.5.0.608</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>28</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout and halt protocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:connectid from="0" to="29" type="true"/>
											<sci:connectid from="29" to="2" type="true"/>
											<sci:connectid from="3" to="4" type="true"/>
											<sci:connectid from="4" to="5" type="true"/>
											<sci:connectid from="5" to="6" type="true"/>
											<sci:connectid from="6" to="7" type="true"/>
											<sci:connectid from="7" to="8" type="true"/>
											<sci:connectid from="30" to="10" type="true"/>
											<sci:connectid from="30" to="33" type="true"/>
											<sci:connectid from="12" to="13" type="true"/>
											<sci:connectid from="13" to="14" type="true"/>
											<sci:connectid from="34" to="35" type="true"/>
											<sci:connectid from="15" to="16" type="true"/>
											<sci:connectid from="16" to="17" type="true"/>
											<sci:connectid from="17" to="18" type="true"/>
											<sci:connectid from="18" to="32" type="true"/>
											<sci:connectid from="32" to="31" type="true"/>
											<sci:connectid from="31" to="35" type="true"/>
											<sci:connectid from="19" to="20" type="true"/>
											<sci:connectid from="20" to="21" type="true"/>
											<sci:connectid from="21" to="22" type="true"/>
											<sci:connectid from="22" to="23" type="true"/>
											<sci:connectid from="23" to="24" type="true"/>
											<sci:connectid from="24" to="25" type="true"/>
											<sci:connectid from="25" to="26" type="true"/>
											<sci:connectid from="27" to="28" type="true"/>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:connectid from="1" to="4" type="true"/>
									<sci:connectid from="3" to="1" type="true"/>
									<sci:connectid from="3" to="2" type="true"/>
									<sci:connectid from="3" to="0" type="true"/>
									<sci:connectid from="2" to="4" type="true"/>
									<sci:connectid from="0" to="4" type="true"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>#FEATS := &apos;POS,NEG,MEDIA&apos;;
EXPAND(&apos;,&apos;,#FEATS);

FOREACH #FEAT IN #FEATS LOOP
	#AUC := 0;

	FOREACH #VAL IN property(&apos;Fit_Response_&apos;.#FEAT) LOOP
		#AUC += #VAL;
	END LOOP;

	property(&apos;AUC_&apos;.#FEAT) := format(&apos;%2.2f&apos;,#AUC/numvalues(property(&apos;Fit_Response_&apos;.#FEAT)));
END LOOP;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1554 -295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.SortData.1">
								<sci:component name="Sort Data" version="2">
									<sci:arg name="Sort By" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
										<sci:help>Defines properties for sorting. Use this parameter to add, remove and reorder properties to be used for sorting.</sci:help>
										<sci:member>Property 1</sci:member>
										<sci:member>Property 2</sci:member>
										<sci:member>Property 3</sci:member>
									</sci:arg>
									<sci:arg name="Property 1" type="PropertyNameType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The property to sort by.</sci:help>
										<sci:member>Property 1 Sort Order</sci:member>
										<sci:member>Property 1 Sort As</sci:member>
										<sci:value>AUC_POS</sci:value>
									</sci:arg>
									<sci:arg name="Property 1 Sort Order" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to sort in ascending or descending order.</sci:help>
										<sci:legalval>Ascending</sci:legalval>
										<sci:legalval selected="true">Descending</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 1 Sort As" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">Numbers</sci:legalval>
										<sci:legalval>Text</sci:legalval>
										<sci:legalval>Case Sensitive Text</sci:legalval>
										<sci:legalval>Text Containing Numbers</sci:legalval>
										<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
										<sci:legalval>Dates</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 2" type="PropertyNameType" required="false" visibility="visible" multi="false">
										<sci:help>The property to sort by.</sci:help>
										<sci:member>Property 2 Sort Order</sci:member>
										<sci:member>Property 2 Sort As</sci:member>
									</sci:arg>
									<sci:arg name="Property 2 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to sort in ascending or descending order.</sci:help>
										<sci:legalval selected="true">Ascending</sci:legalval>
										<sci:legalval>Descending</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 2 Sort As" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">Numbers</sci:legalval>
										<sci:legalval>Text</sci:legalval>
										<sci:legalval>Case Sensitive Text</sci:legalval>
										<sci:legalval>Text Containing Numbers</sci:legalval>
										<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
										<sci:legalval>Dates</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 3" type="PropertyNameType" required="false" visibility="visible" multi="false">
										<sci:help>The property to sort by.</sci:help>
										<sci:member>Property 3 Sort Order</sci:member>
										<sci:member>Property 3 Sort As</sci:member>
									</sci:arg>
									<sci:arg name="Property 3 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to sort in ascending or descending order.</sci:help>
										<sci:legalval selected="true">Ascending</sci:legalval>
										<sci:legalval>Descending</sci:legalval>
									</sci:arg>
									<sci:arg name="Property 3 Sort As" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">Numbers</sci:legalval>
										<sci:legalval>Text</sci:legalval>
										<sci:legalval>Case Sensitive Text</sci:legalval>
										<sci:legalval>Text Containing Numbers</sci:legalval>
										<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
										<sci:legalval>Dates</sci:legalval>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>You can provide this to only return this number of records. This is useful when you only want to see the &quot;best&quot; record or records.</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Mar 27 13:39:02 2017</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>/* Start from &apos;Property 1&apos; since it must be defined.
   Keep this following line for the client auto-rename to use.
	 Parameter(&apos;Property 1&apos;), 
     Parameter(&apos;Property 2&apos;), 
	 Parameter(&apos;Property 3&apos;)
	 Parameter(&apos;Property 4&apos;)
	 Parameter(&apos;Property 5&apos;)
 */
if (trim(strlength(parameter(&apos;Property 1&apos;, 2))) &gt; 0) then
	#name := &quot;Sort on &quot; . trim(parameter(&apos;Property 1&apos;, 2));
	
	/* Get other sort properties that have values */
	#paramKey := &apos;Property &apos;;
	#count := 2;
	#paramName := #paramKey . #count;

	while (#count &lt;= 5 and parameter(#paramName, 2) is defined)
	loop
		if (strlength(parameter(#paramName, 2)) &gt; 0) then		
			#name := #name . &apos;, &apos;;
			#name := #name . parameter(#paramName, 2);
		end if;
	
		#count++;
		#paramName := #paramKey . #count;
	end loop;
	#name;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Sort Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{BC934106-6EA5-44e1-93C3-8787DECA9D15}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1818 -295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Sorts data records according to one or more properties</sci:value>
										<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sort By&lt;/i&gt; parameter to add more properties for sorting.&lt;/p&gt;

&lt;p&gt;When multiple properties are used by sorting, the property values of &lt;i&gt;Property 1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;Property 2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;Property 3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The order of sorting can be changed using &lt;i&gt;Sort Order&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;li&gt;Records containing Null or undefined &lt;i&gt;Sort By&lt;/i&gt; properties will be output to the Fail Port.
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records in sorted order</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records that do not contain the sort field(s)</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1396</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>6</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Sort Data</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>removeduplicates(Cmpd1);
removeduplicates(Func);</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>2106 -295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>12</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="Keep Properties" version="2">
									<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
										<sci:help>The list of property names to keep</sci:help>
										<sci:member>RenameList</sci:member>
										<sci:value>Func</sci:value>
										<sci:value>Cmpd1</sci:value>
										<sci:value>Row</sci:value>
										<sci:value>Col</sci:value>
										<sci:value>Cell Line</sci:value>
										<sci:value>Conc1</sci:value>
										<sci:value>Neg</sci:value>
										<sci:value>Pos</sci:value>
										<sci:value>AUC_Pos</sci:value>
										<sci:value>Fit_Response</sci:value>
										<sci:value>Fit_Concentration</sci:value>
										<sci:value>Pos_Noise</sci:value>
									</sci:arg>
									<sci:arg name="RenameList" type="PropertyNameType" required="false" visibility="visible" multi="true">
										<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>the action to perform</sci:help>
										<sci:value>Keep</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Sep 13 07:18:38 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Keep &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>2394 -295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Keeps only the specified properties</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>With only the specified properties remaining</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.1.0.119</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>15</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep or Reorder Properties</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="Data to Fail Port" version="2">
									<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
										<sci:legalval selected="true">LeaveData</sci:legalval>
										<sci:legalval>ClearData</sci:legalval>
										<sci:legalval>DeleteData</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>CustomErrorText</sci:help>
									</sci:arg>
									<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>the action to perform</sci:help>
										<sci:value>PassDataToPort</sci:value>
									</sci:arg>
									<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>the port to pass data to</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FilterNode</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Data to Fail Port</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Evaluate Expression</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{A718CDEE-EE7D-4B75-9346-C3780D347090}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>2682 -470</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Directs records to the Fail port for use in subprotocol building.</sci:value>
										<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Fail port of the subprotocol.
</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value>All data records</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.0.4.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>13</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Fail Port</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:connectid from="14" to="16" type="true"/>
							<sci:connectid from="16" to="9" type="true"/>
							<sci:connectid from="0" to="1" type="true"/>
							<sci:connectid from="1" to="2" type="true"/>
							<sci:connectid from="2" to="3" type="true"/>
							<sci:connectid from="3" to="4" type="true"/>
							<sci:connectid from="4" to="5" type="true"/>
							<sci:connectid from="5" to="6" type="true"/>
							<sci:connectid from="6" to="12" type="true"/>
							<sci:connectid from="12" to="15" type="true"/>
							<sci:connectid from="15" to="14" type="true"/>
							<sci:connectid from="15" to="13" type="true"/>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>%&apos;Cell Line&apos; := @CCL_ID</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2190 -815</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>13</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DataCacheIO.1">
						<sci:component name="Cache Writer" version="2">
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>Append</sci:member>
								<sci:member>Scope</sci:member>
								<sci:value>All Data</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write to the cache.</sci:help>
							</sci:arg>
							<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
								<sci:legalval selected="true">Job Only</sci:legalval>
								<sci:legalval>User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
								<sci:member>JoinUsing</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:member>JoinUsingListType</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinUsing" type="PropertyNameType" required="false" visibility="visible" multi="false">
								<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Additional parameters to control the component behavior.</sci:help>
								<sci:member>Write Globals</sci:member>
								<sci:member>Enable Compression</sci:member>
								<sci:member>Password</sci:member>
							</sci:arg>
							<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Enable Compression" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
								<sci:help>&lt;p&gt;Specifies if data written to disk should be compressed.&lt;/p&gt;
&lt;b&gt;Note:&lt;b&gt; Starting with 2017 R2, compression uses the LZ4 compression algorithm which is very fast.  Turning off compression will typically result in 6 to 10 times increased disk usage with little or no improvement in performance.  You should test your own data for comparison.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;
An optional password to assign to the cache content. Once set, the password must be used to read data back from the cache. It is useful to control access to a new public data cache.
&lt;/p&gt;
&lt;p&gt;
For an existing cache, set the password to be able to overwrite or append to the content.
&lt;/p&gt;
&lt;p&gt;
Note that the user who writes a password-protected cache does not require a password to access or overwrite the content.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
							</sci:arg>
							<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
								<sci:legalval selected="true">Writer</sci:legalval>
								<sci:legalval>Reader</sci:legalval>
								<sci:legalval>Writer/Reader</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Aug 28 09:11:28 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Write cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2490 -815</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DATABASENODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Cache Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a named cache</sci:value>
								<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;li&gt;A password may be assigned to a new cache to control read and write access to the content.&lt;/p&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1563</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>14</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="2" to="11" type="true"/>
					<sci:connectid from="0" to="1" type="true"/>
					<sci:connectid from="1" to="6" type="true"/>
					<sci:connectid from="15" to="3" type="true"/>
					<sci:connectid from="3" to="5" type="true"/>
					<sci:connectid from="5" to="0" type="true"/>
					<sci:connectid from="5" to="8" type="true"/>
					<sci:connectid from="6" to="2" type="true"/>
					<sci:connectid from="6" to="10" type="false"/>
					<sci:connectid from="8" to="9" type="true"/>
					<sci:connectid from="9" to="6" type="true"/>
					<sci:connectid from="10" to="12" type="true"/>
					<sci:connectid from="10" to="13" type="false"/>
					<sci:connectid from="13" to="14" type="true"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.ComponentJavaPlugin.1">
				<sci:component name="Tab Group" version="2">
					<sci:arg name="Tab Group Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Options applying to the entire tab group.&lt;/p&gt;</sci:help>
						<sci:member>Links and Actions</sci:member>
						<sci:member>Make Scriptable</sci:member>
						<sci:member>Position</sci:member>
						<sci:member>Format</sci:member>
					</sci:arg>
					<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>700</sci:value>
					</sci:arg>
					<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
					</sci:arg>
					<sci:arg name="Make Scriptable" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Enables tab group interactivity via the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/tabs/index.html&apos;)&quot;&gt;Scriptable Tabs API&lt;/a&gt;. When using the API it is useful to specify an &quot;id&quot; HTML Attribute for this element so that it can be easily accessed from JavaScript.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:member>HTML Attributes</sci:member>
						<sci:member>Link Target</sci:member>
					</sci:arg>
					<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
					</sci:arg>
					<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. 

Only the &quot;id&quot; HTML attribute allowed for usage with a Tab Group. This attribute allows access to the element using the document.getElementById(id) method.</sci:help>
					</sci:arg>
					<sci:arg name="Tab Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Options applied to each tab. These can be overridden using the Tab component.&lt;/p&gt;</sci:help>
						<sci:member>Tab Options Format</sci:member>
						<sci:member>Tab Options Position</sci:member>
					</sci:arg>
					<sci:arg name="Tab Options Format" type="FormatType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Formatting to apply to each tab. Editing this parameter opens the Format dialog, where you can change the Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;p&gt;Examples of available formatting options include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Font Size: Sets the font size.&lt;/li&gt;
&lt;li&gt;Color: Sets the font color.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Tab Options Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Specifies how the contents of each tab are positioned. Only the padding settings will be respected.&lt;/p&gt;</sci:help>
						<sci:value>500</sci:value>
						<sci:value>100.0</sci:value>
						<sci:value>Percent</sci:value>
						<sci:value>100.0</sci:value>
						<sci:value>Percent</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>3.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>3.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>3.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>3.0</sci:value>
						<sci:value>Pixels</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>REPORTTABLENODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{00D97472-FA8F-41A8-9841-095DBCB3F989}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Adds a group of tabs to an HTML report</sci:value>
						<sci:value>&lt;p&gt;Tab groups make it possible to pack a large amount of reporting content into a limited amount of real estate. Only one section of content is visible and it&apos;s easy to switch between sections.&lt;/p&gt;
&lt;p&gt;To create one tab for each data record, pipe the content directly into this component. To group reporting content into individual tabs instead, use the &lt;a href=&quot;javascript:DoLink(&apos;{6FBAE9E7-2825-4C1B-865E-723D10C0E04B}&apos;)&quot;&gt;Tab component&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;em&gt;Tab Group&lt;/em&gt; only works in HTML reports.&lt;/li&gt;
	&lt;li&gt;To enable the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/tabs/index.html&apos;)&quot;&gt;Scriptable Tabs API&lt;/a&gt; for this component, set &lt;em&gt;Tab Group Options &amp;gt; Make Scriptable&lt;/em&gt; to &amp;quot;True&amp;quot;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>One or more data records containing reporting elements.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>A single data record containing the Tab Group to be included in the HTML report.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.0.0.14</sci:value>
					</sci:arg>
					<sci:arg name="Output Location" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>&lt;p&gt;Irrelevant for onload events.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">Header</sci:legalval>
						<sci:legalval>Body</sci:legalval>
					</sci:arg>
					<sci:arg name="Onload Event" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>&lt;p&gt;If true, the script is added as an onload event, which will be executed after the DOM is document&apos;s DOM is fully loaded and all external includes have been parsed.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>com.scitegic.report.component.extjs.TabGroupComponent</sci:value>
					</sci:arg>
					<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>39</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/reportadv</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Mar 02 09:52:39 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Tab Group</sci:value>
					</sci:arg>
					<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>CaptureStdoutStderr</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1590 -1025</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Reporting\Web Application Development\HTML Elements\Tab Group</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Report Viewer" version="2">
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Title</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The optional title of the HTML document. The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Include Format and Position CSS</sci:member>
						<sci:member>Use Default Browser</sci:member>
						<sci:member>Set IE Compatibility</sci:member>
					</sci:arg>
					<sci:arg name="Include Format and Position CSS" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Include Format and Position CSS</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>If set to &lt;strong&gt;False&lt;/strong&gt;, all format and position settings will be omitted from the output document, allowing them to be set using an external stylesheet specified with an &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;Include&lt;/a&gt;.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Set IE Compatibility" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Set IE Compatibility</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;When this flag is set to True (default), IE compatibility in the report is set to IE 10 (the minimum support level for Pipeline Pilot). For most users of IE, this should provide a stable environment to view Pipeline Pilot reports.
&lt;/p&gt;
&lt;/p&gt;Switch off this setting, if necessary, to allow Internet Explorer to display content in the highest mode available. This is only required for users who view the report in Internet Explorer 11 or above and who need to enable facilities not available in IE 10 mode, such as WebGL and some HTML5/CSS features.
&lt;/p&gt;
&lt;p&gt;Note that even if you are viewing the report in another browser, other users may subsequently run the protocol or view the report in Internet Explorer, and so you may still need to set this IE Compatibility setting - but only in the rare case that your report requires something beyond the default IE 10 compatibility.
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Browser</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the report. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
&lt;p&gt;
If you use Internet Explorer, note that its behavior can be modified by switching off the &lt;i&gt;Set IE Compatibility&lt;/i&gt; parameter. This is only relevant if you are working with more recently-supported web technologies, such as WebGL, that require at least IE 11 compatibility (and also require that IE 11 is installed, of course).
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Output Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Allows some alternative formatting and position settings to be used that may cause the HTML report output to behave and look more like the HTML generated with previous versions of Pipeline Pilot. This parameter is intended to be set on writers in protocols developed with previous versions of Pipeline Pilot where the output looks or behaves differently when run with the current version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always use the value of &quot;Default&quot; for new protocols or protocols under active development. The latest Reporting components may not behave correctly in HTML reports written with a non-default mode.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When set to &quot;Pipeline Pilot 7.5&quot;, this parameter rolls back some of the improvements made in the name of standards compliance and formatting consistency, including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The report will not include the HTML 4.01 Doctype declaration, which will cause Internet Explorer to render the report using quirks mode.&lt;/li&gt;
	&lt;li&gt;Position rules will not be strictly enforced, so Internet Explorer 6 will render borders and padding outside the specified width.&lt;/li&gt;
	&lt;li&gt;Horizontal alignment of block objects will not be supported, so you will not be able to, for example, center-align a table.&lt;/li&gt;
	&lt;li&gt;The page margins will not be set.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Default</sci:legalval>
						<sci:legalval>Pipeline Pilot 7.5</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>ServerFilePath</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Internet Explorer</sci:help>
						<sci:value>internetexplorer.application</sci:value>
					</sci:arg>
					<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Chrome</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>The location for Firefox</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Oct 22 23:43:53 2015</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Report Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportViewerNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0952D9DF-F95C-4D43-826F-C70450811DD8}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1890 -1025</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays the results of a reporting protocol in HTML format</sci:value>
						<sci:value>&lt;p&gt;This component accepts reporting objects as input (e.g., tables, text and images), and displays the output as an HTML file in Internet Explorer.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use the &lt;a href=&quot;javascript:DoLink(&apos;{A28703A7-E701-4D34-9A93-1D24AC2039CC}&apos;)&quot;&gt;Page&lt;/a&gt; component to set the report&apos;s margins, borders, padding, and background formatting, or to specify HTML attributes on the report&apos;s &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_charts.pdf&apos;)&quot;&gt;Chart Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>This component accepts reporting objects as input.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1089</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>38</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Reporting\Viewers\HTML Report Viewer</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:version iVal="1"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.DataCacheIO.1">
				<sci:component name="Cache Reader" version="2">
					<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The name of the cache to read, which should refer to a cache already written in the protocol containing this component.  Use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to provide an ID for temporary caches, then refer to the temporary ID with $(globalname)</sci:help>
						<sci:member>RangeMinimum</sci:member>
						<sci:member>RangeMaximum</sci:member>
						<sci:member>Scope</sci:member>
						<sci:member>JobId</sci:member>
						<sci:value>All Data</sci:value>
					</sci:arg>
					<sci:arg name="RangeMinimum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The lower limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means start reading at the first cached record.
               </sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="RangeMaximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The upper limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means read to the end of the set of cached records.
               </sci:help>
					</sci:arg>
					<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to the same values as were used in the &lt;/i&gt;Cache Writer&lt;/i&gt;.
			</sci:help>
						<sci:legalval selected="true">Job Only</sci:legalval>
						<sci:legalval>User Only</sci:legalval>
						<sci:legalval>All Users</sci:legalval>
					</sci:arg>
					<sci:arg name="DeleteWhenFinished" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, then delete the cache when finished reading</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Additional parameters to control the component behavior.</sci:help>
						<sci:member>Read Globals</sci:member>
						<sci:member>Password</sci:member>
					</sci:arg>
					<sci:arg name="Read Globals" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Defines if the component should read globals from the cache.&lt;/p&gt;
&lt;p&gt;Any globals read from the cache will overwrite the existing globals.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Enter a password, if one was assigned when the cache was written.
&lt;/p&gt;
&lt;p&gt;Note that a password is not required, if the current user originally wrote the password-protected cache.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="JobId" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>If the scope is set to &lt;I&gt;Job Only&lt;/I&gt;, then this is the job that owns the cache, if it is different from this job. The job must have been run by the same user as this job. If not specified, then the current job is assumed to contain the cache.
               </sci:help>
						<sci:enabledscript>parameter(&apos;Scope&apos;) eq &apos;Job Only&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
					</sci:arg>
					<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
						<sci:legalval>Writer</sci:legalval>
						<sci:legalval selected="true">Reader</sci:legalval>
						<sci:legalval>Writer/Reader</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Aug 28 09:15:02 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Read cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>690 -1205</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DATABASENODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Cache Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads data records from a named cache</sci:value>
						<sci:value>&lt;p&gt;A data cache is a place where you can temporarily store data records without losing information.  This component is used to read data from a named cache created by the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; component.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache to read.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;This component is typically used as a mechanism for retrieving temporary data stored within a protocol.&lt;/li&gt;
&lt;li&gt;To access a cache created in a different protocol, use &lt;i&gt;Scope&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To join data from a cache to streaming data records use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To list available caches use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-7077-05B44C3D08E6}&apos;)&quot;&gt;List Caches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To create a temporary cacheID use &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.0.1563</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>40</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Readers\Cache Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Subprotocol" version="2">
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.
&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
Note: In an expression inside the subprotocol you can identify the category property name as:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;parentproperty(&apos;RunToCompletion Categorize Using&apos;)&lt;/code&gt;
&lt;p&gt;
And so to access the value of this property on the current data record, use:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;property(parentproperty(&apos;RunToCompletion Categorize Using&apos;))&lt;/code&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Number of GPUs=&amp;lt;4&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
						<sci:value>Account=</sci:value>
						<sci:value>Maximum Execution Time=</sci:value>
						<sci:value>Parallel Environment=</sci:value>
						<sci:value>Number of Cores=</sci:value>
						<sci:value>Number of GPUs=</sci:value>
						<sci:value>Other=</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Graph</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>990 -1205</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>20.1.0.2181</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>70</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>30</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Keep Properties" version="2">
							<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>The list of property names to keep</sci:help>
								<sci:member>RenameList</sci:member>
								<sci:value>Cmpd1</sci:value>
								<sci:value>Cell Line</sci:value>
								<sci:value>AUC_Pos</sci:value>
							</sci:arg>
							<sci:arg name="RenameList" type="PropertyNameType" required="false" visibility="visible" multi="true">
								<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Keep</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:18:38 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Keep &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Keeps only the specified properties</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>With only the specified properties remaining</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep or Reorder Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.MergeProperties.1">
						<sci:component name="Pivot Data" version="2">
							<sci:arg name="PivotName" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property that contains the values that
will become the new column names</sci:help>
								<sci:value>Cell Line</sci:value>
							</sci:arg>
							<sci:arg name="PivotValue" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property that contains the values that 
will become the new column values</sci:help>
								<sci:value>AUC_Pos</sci:value>
							</sci:arg>
							<sci:arg name="MergeUsing" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property or properties that will contain
the value we use to identify identical data records merging with</sci:help>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>MergeUsingListType</sci:member>
								<sci:member>WhenMerging</sci:member>
								<sci:value>Cmpd1</sci:value>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &quot;MergeUsing&quot; propety values</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>How &quot;MergeUsing&quot; properties are interpreted when  more than one property is listed:
 
    - UseFirstDefinedValue: Merges using only the first property in the list that has a defined value for a record.
 
  - UseAllValues: Merges using the concatentation of the values of all properties listed.</sci:help>
								<sci:legalval selected="true">UseFirstDefinedValue</sci:legalval>
								<sci:legalval>UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>During the merging of two records, this tells what to do
when copying properties from a newly-discovered object onto the base record.
OverwriteOrCreate always copies all properties onto the base object; 
OverwriteExisting only copies properties that already exist on the base; 
CreateIfNew leaves any existing properties alone, and writes only new properties; 
AppendOrCreate appends if the property exists, else it creates it; 
AppendExisting appends to current-existing properties.</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval selected="true">AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
							</sci:arg>
							<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;MergeUsing&lt;/i&gt; properties. If so, then the pivot can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Preserve Data Type" type="BoolType" required="false" visibility="hidden" multi="false" legalvalsenforced="false">
								<sci:help>Specifies whether to preserve the data type of the &lt;i&gt;PivotValue&lt;/i&gt; property when pivoting. If False, coerces the value to type String in the pivoted data. One effect of this is that if the value is an array, only the first member is retained.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Null values are a special case. Even with &lt;i&gt;Preserve Data Type&lt;/i&gt; set to True, each null value of the &lt;i&gt;PivotValue&lt;/i&gt; property is converted to an empty string. This is necessary for proper alignment of the pivoted data.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 29 12:39:07 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Pivot Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JoinNode</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Pivot Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{E1BE2144-18A3-4B92-828B-E6F65B272EEB}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>390 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Pivots the values of one column into column names, the values of another into column values, and merges using a key property value</sci:value>
								<sci:value>&lt;p&gt;&quot;Pivoting&quot; is a way to transform narrow, three-column data into a wide 
data table.  One column (specified by &lt;I&gt;PivotName&lt;/I&gt;) contains the name of the property 
to create in the wider table.  Another column (specified by &lt;I&gt;PivotValue&lt;/I&gt;) contains the 
property value for the newly-created property.  The third column (specified by &lt;i&gt;MergeUsing&lt;/I&gt;) 
contains the record name of the output record.  In effect, all properties with the same record name are 
&quot;merged&quot; together to give the output.&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The 
process described above may be clearer if you see a simple example. Look at &lt;a href=&quot;javascript:DoLink(&apos;{2462CA81-0FFD-4AEB-BB6B-09DC42D2C67E}&apos;)&quot;&gt;Pivot 
Assay Data&lt;/a&gt; for such an explanation.&lt;/li&gt;
&lt;li&gt;The opposite process, creating a narrow 
table from a wide table of properties, can be performed using &lt;a href=&quot;javascript:DoLink(&apos;{06F53BD0-9BBF-422A-A21D-EE0C25BC2720}&apos;)&quot;&gt;Unpivot 
Data&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Pivoted and merged data records</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records which did not contain any &apos;MergeUsing&apos; names</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>17.2.0.1281</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Pivot Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>IACS_ID := substring(Cmpd1,1,11);</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>690 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.JoinProperties.1">
						<sci:component name="Join Data from Cache" version="2">
							<sci:arg name="JoinUsing" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property that identifies which records to join. When a record in the cache 
has the same value for this property as the incoming streaming data record, its properties and child 
nodes are added to the streaming record. Calculable properties can be used for the streaming data, but 
data in the cache must already contain stored properties to join.

If you provide a comma-separated list 
of property names, then by default all values must match. (You can control this behavior by changing 
JoinUsingListType.) Or, if you provide a property that is an array of values, then all values must match 
(and the source must provide the data in an array-based form.)</sci:help>
								<sci:member>JoinUsingListType</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:value>IACS_ID</sci:value>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: Join using only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: Joins using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The data type of the join property</sci:help>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set JoinPropertyType to IsText&apos;);
Parameter(&apos;JoinPropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the cache that was written using the Cache Writer</sci:help>
								<sci:member>Scope</sci:member>
								<sci:value>Dictionary</sci:value>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope within which the cache we wish to join against exists.
&lt;ul&gt;
&lt;li&gt;&lt;I&gt;Job Only&lt;/I&gt; all caches created within the currently-running protocol.
&lt;li&gt;&lt;I&gt;User Only&lt;/I&gt; all caches created so that all jobs by that user can see them.
&lt;li&gt;&lt;I&gt;All Users&lt;/I&gt; all caches created by any user in the global scope. 
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Job Only</sci:legalval>
								<sci:legalval>User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="Join Behavior" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:member>JoinOnto</sci:member>
								<sci:member>WhenJoiningOnto</sci:member>
								<sci:member>JoinAllNullString</sci:member>
								<sci:member>MultipleReferenceBehavior</sci:member>
								<sci:member>AppendNodes</sci:member>
							</sci:arg>
							<sci:arg name="JoinOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates which data record will be output:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;ProcessData&lt;/i&gt;: The data streaming through the pipeline remains with properties and child nodes from the cache copied onto the record.
&lt;li&gt;&lt;i&gt;Reference&lt;/i&gt;: The data from the cache remains with properties and child nodes from the streaming data record copied onto the record.  Only data records that successfully join against the incoming data stream will be output.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">ProcessData</sci:legalval>
								<sci:legalval>Reference</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenJoiningOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;During the joining of two property lists, this parameter indicates how differences 
between the property lists are resolved.  
By default, the streaming input data (process data) serves 
as the base for a join and the cache data (reference data) is treated as the joining data (this distinction 
can be reversed using the &lt;i&gt;JoinOnto&lt;/i&gt; parameter).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: 
Copies all properties from the joining data onto the base data, overwriting the values of any properties 
that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from 
the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: 
Copies only those properties from the joining data to the base data that do not already exist on the 
base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already 
exists in the base data is appended  (as an array) to the value in the base property.  The other joining 
properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: 
The value of a joining property that already exists in the base data is appended  (as an array) to the 
value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;GroupData&lt;/i&gt;: 
Creates a hierarchical group containing both the joining and base data.
&lt;/ul&gt;</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval selected="true">AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
								<sci:legalval>GroupData</sci:legalval>
							</sci:arg>
							<sci:arg name="AppendNodes" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>When joining data records that contain child nodes, whether to append the child nodes of the joining data onto the base data as determined by the &lt;i&gt;JoinOnto&lt;/i&gt; parameter.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleReferenceBehavior" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;What to do if there are multiple records in the cache (reference data) with a matching 
value for the &lt;i&gt;JoinUsing&lt;/i&gt; property of an incoming streaming record.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;JoinFirst&lt;/i&gt;: 
Uses the first one found. 
&lt;li&gt;&lt;i&gt;JoinLast&lt;/i&gt;: Uses the last one found. 
&lt;li&gt;&lt;i&gt;JoinAll&lt;/i&gt;: 
Appends all values for each property together in an array. 
&lt;li&gt;&lt;i&gt;JoinTogether&lt;/i&gt;: 
Joins each of the matching records in the cache with the streaming record individually and independently, 
which results in multiple records output for one input record.
&lt;/ul&gt;</sci:help>
								<sci:legalval>JoinFirst</sci:legalval>
								<sci:legalval>JoinLast</sci:legalval>
								<sci:legalval>JoinAll</sci:legalval>
								<sci:legalval selected="true">JoinTogether</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinAllNullString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This string is used during append to pad out empty values when MultipleReferenceBehavior is set to  &quot;JoinAll&quot;. This keeps the generated arrays of values in sync for multiple references.&lt;/p&gt;
&lt;p&gt;The value &quot;None&quot; causes no padding to occur.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MultipleReferenceBehavior to JoinAll&apos;);
Parameter(&apos;MultipleReferenceBehavior&apos;) eq &apos;JoinAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Prefix</sci:member>
								<sci:member>GroupName</sci:member>
							</sci:arg>
							<sci:arg name="Prefix" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A prefix to add to each property name as it is joined onto the streaming data (instead of overwriting or appending to the existing value).</sci:help>
							</sci:arg>
							<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If &lt;i&gt;WhenJoiningOnto&lt;/i&gt; is set to &quot;GroupData&quot;, this is the name of the group node into which the results are placed</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenJoiningOnto to GroupData&apos;);
Parameter(&apos;WhenJoiningOnto&apos;) eq &apos;GroupData&apos;</sci:enabledscript>
								<sci:value>Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="PassDownParameters" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Parameters to pass on to the reader</sci:help>
								<sci:value>Scope</sci:value>
							</sci:arg>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the JoinUsing property -- even 
non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  JoinPropertyType 
is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with 
a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a 
numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then 
records containing non-numeric strings for the JoinUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Source" type="URLType" required="true" visibility="nevershow" multi="false">
								<sci:help>Names of data files, a learned model, or data cache ID, to join with the streaming data that enters this component. If multiple files are given, each is joined in sequence. (The Windows browser reverses the order of the files during selection, so you should select from last to first.)</sci:help>
								<sci:value>$(CacheID)</sci:value>
							</sci:arg>
							<sci:arg name="SourceFormat" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>The name of the reader to use for the join source. (For readers with particular parameters, you can create them and save them, then add their name to the options list for this protocol.  For example, you could create a Delimited Text with Commas and No Column Names component, save it to your tab, then add it to this list and select.)</sci:help>
								<sci:legalval>Delimited Text With Column Names</sci:legalval>
								<sci:legalval>Delimited Text No Column Names</sci:legalval>
								<sci:legalval>Comma Delimited With Column Names</sci:legalval>
								<sci:legalval>Tab Delimited With Column Names</sci:legalval>
								<sci:legalval>Space Delimited With Column Names</sci:legalval>
								<sci:legalval>Excel XLS With Column Names</sci:legalval>
								<sci:legalval>Excel XLS No Column Names</sci:legalval>
								<sci:legalval>MDL SD Format</sci:legalval>
								<sci:legalval>Learned Model Reader</sci:legalval>
								<sci:legalval selected="true">{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="nevershow" multi="false">
								<sci:help>A list of properties to join from the source file. If this value is not defined, all properties are joined into the record.</sci:help>
							</sci:arg>
							<sci:arg name="UseIndexFile" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Uses an index file when performing the Join operation when set to &quot;True&quot;. An index file is created if it does not already exist; it is used to accelerate the join process.

 Note: This option is useful for optimizing join operations against a file that may be used many times, at the first time of use an index file can be created to speed accesses in subsequent uses.  This file is created in the same directory as the source file and is automatically used for any subsequent join.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:03:53 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}</sci:value>
							</sci:arg>
							<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>Whether to perform a quick syntax check at the beginning of the file when we open it, and if a problem is found, throw an error.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="SourceComponent" type="ComponentType" required="false" visibility="nevershow" multi="false">
								<sci:help>Name of the data format of the Source file</sci:help>
								<sci:value>$(SourceFormat)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;JoinUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>if (strlength(trim(parameter(&apos;JoinUsing&apos;, 2))) &gt; 0) then
	&quot;Join on &quot; . trim(parameter(&apos;JoinUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Join Data from File</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>990 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Augments data records with properties from data in a cache where specified property values match</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, a property value or set of values specified by 
&lt;i&gt;JoinUsing&lt;/i&gt; is used to identify matching records in the data cache created by the &lt;a 
href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; 
specified by &lt;i&gt;CacheID&lt;/i&gt;.  Properties from these records are added to the incoming data 
record.  If no match is found, the record is sent out the Fail port.&lt;/p&gt;

&lt;p&gt;Records match 
if the value of the &lt;i&gt;JoinUsing&lt;/i&gt; property is the same for the incoming record as in the 
cache.  If multiple &lt;i&gt;JoinUsing&lt;/i&gt; properties are specified, the behavior depends on &lt;i&gt;JoinUsingListType&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;By 
default, this component expects the cache to have been created by the current job.  If the cache is outside 
the scope of the current job, update &lt;i&gt;Scope&lt;/i&gt; accordingly&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;By 
default only properties are extracted from the matching records.  Use &lt;i&gt;JoinOnto&lt;/i&gt; to 
obtain additional information such as molecular data.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache 
Writer&lt;/a&gt; to create the data cache specified by &lt;i&gt;CacheID&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{D24316C3-9D5C-4B5D-ADF3-28F258F11858}&apos;)&quot;&gt;Join 
Data from File&lt;/a&gt; to join against a source data file.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records which received additional properties from the source file through a successful join.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which no data was found in the source file.</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Join Data from Cache</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Keep Properties" version="2">
							<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>The list of property names to keep</sci:help>
								<sci:member>RenameList</sci:member>
								<sci:value>Cmpd1</sci:value>
								<sci:value>IACS_ID</sci:value>
								<sci:value>Commercial_name</sci:value>
								<sci:value>Target_Class</sci:value>
								<sci:value>Targets</sci:value>
								<sci:value>T11</sci:value>
								<sci:value>T12</sci:value>
							</sci:arg>
							<sci:arg name="RenameList" type="PropertyNameType" required="false" visibility="visible" multi="true">
								<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Keep</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:18:38 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Keep &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1290 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Keeps only the specified properties</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>With only the specified properties remaining</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep or Reorder Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>Mean :=(T11+T12)/2;
AbsRange := abs(T11-T12);</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1590 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>5</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.SortData.1">
						<sci:component name="Sort Data" version="2">
							<sci:arg name="Sort By" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
								<sci:help>Defines properties for sorting. Use this parameter to add, remove and reorder properties to be used for sorting.</sci:help>
								<sci:member>Property 1</sci:member>
								<sci:member>Property 2</sci:member>
								<sci:member>Property 3</sci:member>
							</sci:arg>
							<sci:arg name="Property 1" type="PropertyNameType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The property to sort by.</sci:help>
								<sci:member>Property 1 Sort Order</sci:member>
								<sci:member>Property 1 Sort As</sci:member>
								<sci:value>Mean</sci:value>
							</sci:arg>
							<sci:arg name="Property 1 Sort Order" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Whether to sort in ascending or descending order.</sci:help>
								<sci:legalval>Ascending</sci:legalval>
								<sci:legalval selected="true">Descending</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 1 Sort As" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">Numbers</sci:legalval>
								<sci:legalval>Text</sci:legalval>
								<sci:legalval>Case Sensitive Text</sci:legalval>
								<sci:legalval>Text Containing Numbers</sci:legalval>
								<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
								<sci:legalval>Dates</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 2" type="PropertyNameType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>The property to sort by.</sci:help>
								<sci:member>Property 2 Sort Order</sci:member>
								<sci:member>Property 2 Sort As</sci:member>
								<sci:value>AbsRange</sci:value>
							</sci:arg>
							<sci:arg name="Property 2 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Whether to sort in ascending or descending order.</sci:help>
								<sci:legalval selected="true">Ascending</sci:legalval>
								<sci:legalval>Descending</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 2 Sort As" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">Numbers</sci:legalval>
								<sci:legalval>Text</sci:legalval>
								<sci:legalval>Case Sensitive Text</sci:legalval>
								<sci:legalval>Text Containing Numbers</sci:legalval>
								<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
								<sci:legalval>Dates</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 3" type="PropertyNameType" required="false" visibility="visible" multi="false">
								<sci:help>The property to sort by.</sci:help>
								<sci:member>Property 3 Sort Order</sci:member>
								<sci:member>Property 3 Sort As</sci:member>
							</sci:arg>
							<sci:arg name="Property 3 Sort Order" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Whether to sort in ascending or descending order.</sci:help>
								<sci:legalval selected="true">Ascending</sci:legalval>
								<sci:legalval>Descending</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 3 Sort As" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Whether to sort as numbers, dates, or text. 
&lt;p&gt;
Text can be case-sensitive or case-insensitive, and text containing numbers can be sorted based on the numbers (e.g., &quot;test5&quot; comes before &quot;test23&quot;).
&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">Numbers</sci:legalval>
								<sci:legalval>Text</sci:legalval>
								<sci:legalval>Case Sensitive Text</sci:legalval>
								<sci:legalval>Text Containing Numbers</sci:legalval>
								<sci:legalval>Case Sensitive Text Containing Numbers</sci:legalval>
								<sci:legalval>Dates</sci:legalval>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>You can provide this to only return this number of records. This is useful when you only want to see the &quot;best&quot; record or records.</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Mar 27 13:39:02 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>/* Start from &apos;Property 1&apos; since it must be defined.
   Keep this following line for the client auto-rename to use.
	 Parameter(&apos;Property 1&apos;), 
     Parameter(&apos;Property 2&apos;), 
	 Parameter(&apos;Property 3&apos;)
	 Parameter(&apos;Property 4&apos;)
	 Parameter(&apos;Property 5&apos;)
 */
if (trim(strlength(parameter(&apos;Property 1&apos;, 2))) &gt; 0) then
	#name := &quot;Sort on &quot; . trim(parameter(&apos;Property 1&apos;, 2));
	
	/* Get other sort properties that have values */
	#paramKey := &apos;Property &apos;;
	#count := 2;
	#paramName := #paramKey . #count;

	while (#count &lt;= 5 and parameter(#paramName, 2) is defined)
	loop
		if (strlength(parameter(#paramName, 2)) &gt; 0) then		
			#name := #name . &apos;, &apos;;
			#name := #name . parameter(#paramName, 2);
		end if;
	
		#count++;
		#paramName := #paramKey . #count;
	end loop;
	#name;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Sort Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{BC934106-6EA5-44e1-93C3-8787DECA9D15}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1890 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sorts data records according to one or more properties</sci:value>
								<sci:value>&lt;p&gt;The incoming data records are re-ordered on output using the specified sort criteria. The sort criteria are defined by one or more properties whose values are used to order the records.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sort By&lt;/i&gt; parameter to add more properties for sorting.&lt;/p&gt;

&lt;p&gt;When multiple properties are used by sorting, the property values of &lt;i&gt;Property 1&lt;/i&gt; are checked first.  If the values are equal, then the values specified by &lt;i&gt;Property 2&lt;/I&gt; are checked; if they are equal, then &lt;i&gt;Property 3&lt;/i&gt; is checked, and so on.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The order of sorting can be changed using &lt;i&gt;Sort Order&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;The order of a set of records can be randomized by sorting on the property RandomNumber.&lt;/li&gt;
&lt;li&gt;Records containing Null or undefined &lt;i&gt;Sort By&lt;/i&gt; properties will be output to the Fail Port.
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Often, sorting of records is performed so that you can retain some number of records at the head of the sorted list.  &lt;a href=&quot;javascript:DoLink(&apos;{75F04448-3A09-4ECD-A462-D427268653D0}&apos;)&quot;&gt;Top N Filter&lt;/a&gt; is the most efficient way to do this.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records in sorted order</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that do not contain the sort field(s)</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1396</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>6</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Sort Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.ComponentJavaPlugin.1">
						<sci:component name="Table" version="2">
							<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The optional title at the top of the table.</sci:help>
								<sci:member>Title Format</sci:member>
								<sci:member>Title Position</sci:member>
							</sci:arg>
							<sci:arg name="Title Format" type="FormatType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:value>700</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Title</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Title Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>600</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Title</sci:value>
							</sci:arg>
							<sci:arg name="Table Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Format and position for the table as a whole.&lt;/p&gt;</sci:help>
								<sci:member>Format</sci:member>
								<sci:member>Position</sci:member>
							</sci:arg>
							<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:value>700</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.General</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.

Height settings will only be applied to tables in HTML reports.</sci:help>
								<sci:value>600</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.General</sci:value>
							</sci:arg>
							<sci:arg name="Header Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Options controlling the table header.&lt;/p&gt;</sci:help>
								<sci:member>Header Format</sci:member>
								<sci:member>Header Position</sci:member>
								<sci:member>Show Table Header</sci:member>
								<sci:member>Freeze Table Header</sci:member>
							</sci:arg>
							<sci:arg name="Show Table Header" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies whether table headers should be visible or not.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:value>700</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Header</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Header Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>600</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Header</sci:value>
							</sci:arg>
							<sci:arg name="Cell Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Options controlling the table cells.&lt;/p&gt;</sci:help>
								<sci:member>Cell Format</sci:member>
								<sci:member>Cell Position</sci:member>
							</sci:arg>
							<sci:arg name="Cell Format" type="FormatType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:value>700</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Cell</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Cell Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
								<sci:value>600</sci:value>
								<sci:value>Style</sci:value>
								<sci:value>Table.Cell</sci:value>
							</sci:arg>
							<sci:arg name="Data Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Options controlling the table data.&lt;/p&gt;</sci:help>
								<sci:member>Exclude Properties</sci:member>
								<sci:member>Column Order</sci:member>
								<sci:member>Array Value Display</sci:member>
								<sci:member>When Data Contains Reporting Information</sci:member>
								<sci:member>Aggregate Data</sci:member>
							</sci:arg>
							<sci:arg name="Exclude Properties" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;A comma-delimited list of properties which will not be rendered in an autogenerated table.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Column Order" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;A comma-separated list of Header Text names (which may differ from the corresponding property names), indicating the order the columns should appear. Any non-listed properties will be added as subsequent columns.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The column names are case-sensitive&lt;/li&gt;
&lt;/ul&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Array Value Display" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Determines how array values are separated when they are displayed in an autogenerated table.&lt;/p&gt;</sci:help>
								<sci:legalval>Separate by Commas</sci:legalval>
								<sci:legalval selected="true">Separate by Newlines</sci:legalval>
								<sci:legalval>One Array Element per Cell</sci:legalval>
							</sci:arg>
							<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;If True, all incoming data records are aggregated into a single output record. If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="When Data Contains Reporting Information" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Determines whether the table shows all the properties of data records that already have reporting information.&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">Display Reporting Information Only</sci:legalval>
								<sci:legalval>Display Reporting Information and All Properties</sci:legalval>
							</sci:arg>
							<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
								<sci:member>Link Target</sci:member>
								<sci:member>HTML Attributes</sci:member>
								<sci:member>Tooltip</sci:member>
								<sci:member>Data Connector</sci:member>
							</sci:arg>
							<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
							</sci:arg>
							<sci:arg name="Tooltip" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>An optional tooltip for this reporting element.</sci:help>
							</sci:arg>
							<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
							</sci:arg>
							<sci:arg name="Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
								<sci:member>Subscriber Event Handling</sci:member>
								<sci:member>Publisher Event Handling</sci:member>
								<sci:member>Publisher Subscriber Model</sci:member>
							</sci:arg>
							<sci:arg name="Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
								<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
								<sci:legalval>Publisher</sci:legalval>
								<sci:legalval>Subscriber</sci:legalval>
								<sci:legalval>None</sci:legalval>
							</sci:arg>
							<sci:arg name="Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
								<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
								<sci:legalval selected="true">Highlight</sci:legalval>
								<sci:legalval>Filter</sci:legalval>
								<sci:legalval>Reverse Filter</sci:legalval>
							</sci:arg>
							<sci:arg name="Publisher Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;Setting the publishing event type.&lt;/p&gt;</sci:help>
								<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Publisher Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Subscriber&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Subscriber&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
								<sci:legalval selected="true">On Click</sci:legalval>
								<sci:legalval>On Mouse Over</sci:legalval>
							</sci:arg>
							<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
								<sci:member>Column Settings Header Text</sci:member>
								<sci:member>Column Settings Header Format</sci:member>
								<sci:member>Column Settings Header Position</sci:member>
								<sci:member>Column Settings Cell Format</sci:member>
								<sci:member>Column Settings Cell Position</sci:member>
								<sci:member>Show 4-digit Year</sci:member>
							</sci:arg>
							<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
							</sci:arg>
							<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>700</sci:value>
							</sci:arg>
							<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
							</sci:arg>
							<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>700</sci:value>
							</sci:arg>
							<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
							</sci:arg>
							<sci:arg name="Show 4-digit Year" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>For columns of type DateTime, this parameter controls the display of years, with either four, or two digits (default).</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true" expanded="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false" expanded="true">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true" expanded="true">
								<sci:value>100</sci:value>
								<sci:value>Creates a table in a report by collecting data records and displaying them in rows and columns</sci:value>
								<sci:value>&lt;p&gt;There are three ways you can create tables:&lt;/p&gt;

&lt;ul&gt;

&lt;li&gt;&lt;b&gt;Auto-generated:&lt;/b&gt; Quickly build a table by adding one Table component in a report, immediately following data (i.e., blue) components). The Table component takes your data sources and creates one column for each property on your data stream. The table includes some pre-set formats to save you time. &lt;/li&gt; 

&lt;li&gt;&lt;b&gt;Column-generated:&lt;/b&gt; You specify the content of your data source that should be used in the table. For each data property to include, add a component defining the content (e.g., &lt;a href=&quot;javascript:DoLink(&apos;{34E6C845-4ACB-4212-BBA3-7422213D458F}&apos;)&quot;&gt;Text&lt;/a&gt; or a chart component, plus a separate &lt;a href=&quot;javascript:DoLink(&apos;{EB2E16E8-D13E-4C7F-BB46-0E06502A6833}&apos;)&quot;&gt;Column component&lt;/a&gt; for each column of the table to be created.  Branch the data source to each pair of content/Column components and then pipe all of them into a single Table component. Each column is added to the table in the order it is shown visually in the protocol (top to bottom).  Each column in a table must have the same number of rows.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;In-line:&lt;/b&gt; Similar to Column-generated but instead of branching the data for each column of the table, place the &quot;content&quot; components in the sequence for the final table and then pipe this into a Table component.  In each content component, use the Column Settings components to define column header and cell options.&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Input can be raw data records, column objects or a sequence of Reporting components.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>A data record representing the table is sent to the pass port.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.2.0.1312</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
								<sci:value>com.scitegic.report.component.TableComponent</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
								<sci:value>2190 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
								<sci:value>REPORTTABLENODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
								<sci:value>{8DD32465-CB99-4A1E-870D-1A2F56D2C249}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Plug In</sci:value>
							</sci:arg>
							<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>scitegic/report</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>7</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/report</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Oct 31 13:22:09 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
								<sci:value>Table</sci:value>
							</sci:arg>
							<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false" expanded="true">
								<sci:help>CaptureStdoutStderr</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
								<sci:value>Format</sci:value>
								<sci:value>Link Options</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Reporting and Visualization\Reporting\Elements\Table</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="0" to="1" type="true"/>
					<sci:connectid from="1" to="2" type="true"/>
					<sci:connectid from="2" to="3" type="true"/>
					<sci:connectid from="3" to="4" type="true"/>
					<sci:connectid from="4" to="5" type="true"/>
					<sci:connectid from="5" to="6" type="true"/>
					<sci:connectid from="6" to="7" type="true"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.ComponentJavaPlugin.1">
				<sci:component name="Tab" version="2">
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;The optional title at the top of the tab. If left blank, the title will be auto-generated in the format Tab 1 ... Tab N, depending on the Tab&apos;s position within its Tab Group.&lt;/p&gt;</sci:help>
						<sci:value>Heatmap input</sci:value>
					</sci:arg>
					<sci:arg name="Tab Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Customize tab options including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;b&gt;Closable&lt;/b&gt;: If set, an x appears to the right of the tab&apos;s title, allowing the tab to be closed.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>Closable</sci:legalval>
					</sci:arg>
					<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
						<sci:value>500</sci:value>
						<sci:value>100</sci:value>
						<sci:value>Percent</sci:value>
						<sci:value>100.0</sci:value>
						<sci:value>Percent</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0</sci:value>
						<sci:value>Pixels</sci:value>
					</sci:arg>
					<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;If set to &quot;True&quot;, all incoming data records are aggregated into a single output record.&lt;/p&gt;

&lt;p&gt;If &quot;False&quot;, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>CaptureStdoutStderr</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/reportadv</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Feb 12 10:00:00 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Tab</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1290 -1205</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>REPORTCOLUMNNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6FBAE9E7-2825-4C1B-865E-723D10C0E04B}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Creates a tab for use within a tab group in an HTML report</sci:value>
						<sci:value>&lt;p&gt;Use the Tab component to group reporting contents into individual tabs. This component allows you to set the title, formatting, and other options for an individual tab within a &lt;a href=&quot;javascript:DoLink(&apos;{00D97472-FA8F-41A8-9841-095DBCB3F989}&apos;)&quot;&gt;Tab Group&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This component only works in HTML reports.&lt;/li&gt;
	&lt;li&gt;Tabs must be piped into a Tab Group component.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>One or more data records containing reporting components.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>A single data record containing the Tab to be included in a Tab Group in the HTML report.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.0.0.14</sci:value>
					</sci:arg>
					<sci:arg name="Output Location" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>&lt;p&gt;Irrelevant for onload events.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">Header</sci:legalval>
						<sci:legalval>Body</sci:legalval>
					</sci:arg>
					<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>com.scitegic.report.component.extjs.TabComponent</sci:value>
					</sci:arg>
					<sci:arg name="Onload Event" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>&lt;p&gt;If true, the script is added as an onload event, which will be executed after the DOM is document&apos;s DOM is fully loaded and all external includes have been parsed.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>41</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Reporting\Web Application Development\HTML Elements\Tab</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:connectid from="31" to="32" type="true"/>
			<sci:connectid from="0" to="4" type="true"/>
			<sci:connectid from="4" to="33" type="true"/>
			<sci:connectid from="33" to="43" type="true"/>
			<sci:connectid from="43" to="35" type="true"/>
			<sci:connectid from="35" to="39" type="true"/>
			<sci:connectid from="39" to="38" type="true"/>
			<sci:connectid from="40" to="30" type="true"/>
			<sci:connectid from="30" to="41" type="true"/>
			<sci:connectid from="41" to="39" type="true"/>
			<sci:version iVal="7"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>
